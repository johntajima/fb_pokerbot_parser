
# line 1 "lib/fb_pokerbot_parser/message_parser.rl"

class FbPokerbotParser::MessageParser

  attr_accessor :command, 
                :status,
                :options, 
                :cards, 
                :actions, 
                :hole_cards, 
                :flop, :turn, :river,
                :amount,
                :blinds,
                :hero


  COMMANDS = {
    "nh"       => :new_hand,
    "nt"       => :new_tourney_hand,
    "hero"     => :hero,
    "pre"      => :preflop,
    "flop"     => :flop,
    "turn"     => :turn,
    "river"    => :river,
    "show"     => :showdown,
    "c"        => :set,
    "config"   => :set,
    "set"      => :set 
  }

  ACTIONS = {
    'b'     => :bet,
    'bet'   => :bet,
    'c'     => :call,
    'call'  => :call,
    'f'     => :fold,
    'fold'  => :fold,
    'r'     => :raise,
    'raise' => :raise,
    'ch'    => :check,
    'check' => :check,
    'm'     => :muck,
    'muck'  => :muck
  }

  NEW_HAND_OPTIONS = {
    'b' => :button,
    'p' => :players,
    'h' => :hero
  }


# line 208 "lib/fb_pokerbot_parser/message_parser.rl"


  def initialize(data)
    
# line 60 "lib/fb_pokerbot_parser/message_parser.rb"
class << self
	attr_accessor :_pokerbot_actions
	private :_pokerbot_actions, :_pokerbot_actions=
end
self._pokerbot_actions = [
	0, 1, 0, 1, 3, 1, 4, 1, 
	5, 1, 6, 1, 7, 1, 8, 1, 
	9, 1, 10, 1, 11, 1, 12, 1, 
	13, 1, 14, 1, 15, 1, 16, 1, 
	17, 1, 18, 1, 22, 1, 23, 1, 
	24, 1, 25, 1, 26, 1, 27, 1, 
	28, 1, 29, 1, 30, 1, 31, 1, 
	32, 1, 35, 1, 36, 1, 52, 1, 
	53, 1, 54, 1, 55, 1, 56, 1, 
	57, 2, 0, 41, 2, 1, 40, 2, 
	1, 43, 2, 2, 40, 2, 2, 42, 
	2, 3, 40, 2, 3, 47, 2, 4, 
	40, 2, 4, 48, 2, 5, 40, 2, 
	5, 49, 2, 6, 40, 2, 6, 50, 
	2, 7, 40, 2, 7, 44, 2, 7, 
	46, 2, 8, 40, 2, 8, 44, 2, 
	8, 45, 2, 8, 46, 2, 9, 40, 
	2, 10, 40, 2, 14, 40, 2, 14, 
	51, 2, 15, 40, 2, 15, 51, 2, 
	16, 40, 2, 16, 51, 2, 17, 40, 
	2, 17, 51, 2, 18, 40, 2, 18, 
	51, 2, 19, 40, 2, 19, 51, 2, 
	20, 40, 2, 20, 51, 2, 21, 40, 
	2, 21, 51, 2, 33, 34, 2, 36, 
	1, 2, 36, 2, 2, 36, 11, 2, 
	36, 12, 2, 36, 13, 2, 36, 37, 
	2, 36, 38, 2, 36, 39, 3, 0, 
	1, 40, 3, 0, 1, 43, 3, 0, 
	2, 40, 3, 0, 2, 42, 3, 36, 
	0, 1, 3, 36, 0, 2
]

class << self
	attr_accessor :_pokerbot_key_offsets
	private :_pokerbot_key_offsets, :_pokerbot_key_offsets=
end
self._pokerbot_key_offsets = [
	0, 0, 1, 2, 3, 4, 5, 12, 
	13, 14, 15, 18, 19, 23, 28, 29, 
	30, 33, 35, 36, 37, 38, 39, 40, 
	41, 42, 45, 46, 47, 50, 55, 56, 
	57, 58, 59, 62, 64, 67, 69, 70, 
	71, 72, 75, 86, 87, 95, 96, 97, 
	98, 99, 100, 101, 102, 103, 104, 105, 
	106, 107, 108, 111, 115, 116, 117, 120, 
	126, 127, 128, 129, 130, 131, 132, 133, 
	134, 135, 136, 137, 138, 139, 140, 141, 
	144, 155, 156, 164, 178, 192, 193, 201, 
	215, 229, 230, 238, 239, 240, 241, 242, 
	243, 244, 245, 246, 247, 250, 261, 262, 
	270, 284, 298, 299, 307, 310, 311, 312, 
	313, 314, 315, 316, 317, 318, 319, 323, 
	332, 333, 334, 337, 343, 344, 345, 346, 
	347, 348, 349, 351, 354, 362, 366, 371, 
	372, 375, 376, 377, 378, 379, 380, 381, 
	385, 386, 387, 388, 389, 390, 391, 392, 
	393, 398, 401, 410, 411, 412, 415, 421, 
	433, 434, 435, 438, 444, 445, 446, 447, 
	448, 450, 453, 461, 465, 470, 471, 474, 
	475, 476, 477, 478, 479, 480, 484, 485, 
	486, 487, 488, 489, 490, 491, 492, 493, 
	494, 499, 501, 504, 512, 516, 521, 522, 
	525, 529, 530, 531, 532, 533, 534, 535, 
	536, 537, 542, 543, 544, 545, 546, 547, 
	548, 549, 550, 551, 554, 555, 556, 559, 
	564, 565, 566, 567, 568, 571, 578, 579, 
	580, 581, 582, 583, 585, 586, 587, 588, 
	589, 590, 591, 592, 593, 594, 595, 596, 
	597, 598, 599, 600, 601, 602, 603, 604, 
	605, 606, 607, 608, 630, 631, 639, 653, 
	667, 668, 676, 690, 704, 705, 713, 714, 
	722, 736, 750, 751, 759, 773, 787, 788, 
	796, 805, 806, 809, 815, 827, 828, 830, 
	833, 841, 845, 850, 851, 854, 855, 856, 
	857, 858, 859, 860, 864, 865, 866, 867, 
	868, 869, 870, 871, 872, 873, 874, 875, 
	876, 877, 878, 883, 892, 893, 896, 902, 
	924, 933, 935, 938, 946, 950, 955, 956, 
	959, 960, 961, 962, 963, 964, 965, 969, 
	970, 971, 972, 973, 974, 975, 976, 977, 
	978, 979, 980, 981, 982, 983, 988, 989, 
	990, 1005, 1020, 1034, 1048, 1049, 1057, 1065, 
	1079, 1093, 1094, 1102, 1110, 1111, 1112, 1122, 
	1125, 1127, 1137, 1140, 1142, 1152, 1155, 1157, 
	1167, 1170, 1172, 1182, 1185, 1187, 1194, 1200, 
	1206, 1210, 1213, 1217, 1222, 1223, 1224, 1227, 
	1228, 1231, 1236, 1237, 1240, 1245, 1252, 1258, 
	1268, 1275, 1281, 1285, 1290, 1291, 1292, 1295, 
	1296, 1299, 1304, 1305, 1308, 1313, 1320, 1326, 
	1336, 1343, 1349, 1353, 1358, 1359, 1360, 1363, 
	1364, 1367, 1372, 1373, 1376, 1381, 1388, 1394, 
	1404, 1411, 1417, 1421, 1426, 1427, 1428, 1431, 
	1432, 1435, 1440, 1441, 1444, 1449, 1456, 1462, 
	1472, 1479, 1485, 1489, 1494, 1495, 1496, 1499, 
	1500, 1503, 1508, 1509, 1512, 1517, 1518, 1530, 
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1561, 
	1563, 1565, 1568, 1568, 1570, 1570, 1571, 1572, 
	1573, 1576, 1579, 1582, 1585, 1587, 1587, 1588, 
	1589, 1590, 1592, 1594, 1594, 1595, 1596, 1597, 
	1600, 1605, 1609, 1612, 1616, 1621, 1626, 1629, 
	1633, 1637, 1641, 1647, 1651, 1657, 1659, 1660, 
	1660, 1661, 1661, 1664, 1665, 1665, 1665, 1666, 
	1667, 1668, 1668, 1669, 1669, 1670, 1671, 1671, 
	1672, 1672, 1676, 1679, 1701, 1704, 1707, 1712, 
	1717, 1722, 1725, 1729, 1733, 1737, 1743, 1746, 
	1750, 1754, 1758, 1763, 1768, 1773, 1776, 1780, 
	1784, 1788, 1794, 1797, 1801, 1805, 1809, 1812, 
	1816, 1821, 1823, 1826, 1836, 1839, 1842, 1848, 
	1861, 1864, 1879, 1882, 1888, 1894, 1900, 1906, 
	1912, 1915, 1921, 1927, 1930, 1932, 1934, 1936, 
	1942, 1948, 1951, 1956, 1961, 1966, 1972, 1978, 
	1981, 1986, 1991, 1996, 2002, 2008, 2011, 2016, 
	2021, 2026, 2032, 2038, 2041, 2046, 2051, 2056, 
	2059, 2062, 2065, 2069, 2073, 2077, 2080, 2081, 
	2081, 2082, 2083, 2083, 2084
]

class << self
	attr_accessor :_pokerbot_trans_keys
	private :_pokerbot_trans_keys, :_pokerbot_trans_keys=
end
self._pokerbot_trans_keys = [
	116, 101, 115, 116, 32, 97, 98, 99, 
	100, 102, 104, 115, 110, 116, 101, 32, 
	9, 13, 97, 32, 110, 9, 13, 32, 
	9, 13, 48, 57, 116, 101, 32, 9, 
	13, 105, 108, 103, 95, 98, 108, 105, 
	110, 100, 32, 9, 13, 98, 98, 32, 
	9, 13, 32, 9, 13, 48, 57, 105, 
	110, 100, 115, 32, 9, 13, 48, 57, 
	47, 48, 57, 48, 57, 97, 114, 100, 
	32, 9, 13, 49, 65, 81, 97, 113, 
	50, 57, 74, 75, 106, 107, 48, 72, 
	83, 104, 115, 67, 68, 99, 100, 101, 
	102, 97, 117, 108, 116, 95, 97, 99, 
	116, 105, 111, 110, 32, 9, 13, 97, 
	99, 102, 109, 108, 108, 32, 9, 13, 
	32, 99, 102, 109, 9, 13, 108, 108, 
	99, 107, 108, 100, 108, 111, 112, 45, 
	99, 97, 114, 100, 115, 32, 9, 13, 
	49, 65, 81, 97, 113, 50, 57, 74, 
	75, 106, 107, 48, 72, 83, 104, 115, 
	67, 68, 99, 100, 32, 49, 65, 81, 
	97, 113, 9, 13, 50, 57, 74, 75, 
	106, 107, 32, 49, 65, 81, 97, 113, 
	9, 13, 50, 57, 74, 75, 106, 107, 
	48, 72, 83, 104, 115, 67, 68, 99, 
	100, 32, 49, 65, 81, 97, 113, 9, 
	13, 50, 57, 74, 75, 106, 107, 32, 
	49, 65, 81, 97, 113, 9, 13, 50, 
	57, 74, 75, 106, 107, 48, 72, 83, 
	104, 115, 67, 68, 99, 100, 111, 108, 
	101, 45, 99, 97, 114, 100, 115, 32, 
	9, 13, 49, 65, 81, 97, 113, 50, 
	57, 74, 75, 106, 107, 48, 72, 83, 
	104, 115, 67, 68, 99, 100, 32, 49, 
	65, 81, 97, 113, 9, 13, 50, 57, 
	74, 75, 106, 107, 32, 49, 65, 81, 
	97, 113, 9, 13, 50, 57, 74, 75, 
	106, 107, 48, 72, 83, 104, 115, 67, 
	68, 99, 100, 101, 109, 116, 97, 116, 
	95, 97, 99, 116, 105, 111, 110, 32, 
	115, 9, 13, 97, 98, 99, 102, 104, 
	108, 109, 115, 117, 108, 108, 32, 9, 
	13, 32, 99, 102, 109, 9, 13, 108, 
	108, 99, 107, 108, 100, 98, 116, 32, 
	9, 13, 32, 98, 99, 102, 109, 114, 
	9, 13, 32, 101, 9, 13, 32, 9, 
	13, 48, 57, 116, 32, 9, 13, 108, 
	108, 99, 107, 108, 100, 32, 97, 9, 
	13, 105, 115, 101, 110, 106, 98, 116, 
	103, 32, 9, 13, 49, 51, 32, 9, 
	13, 97, 98, 99, 102, 104, 108, 109, 
	115, 117, 108, 108, 32, 9, 13, 32, 
	99, 102, 109, 9, 13, 32, 97, 98, 
	99, 102, 104, 108, 109, 115, 117, 9, 
	13, 108, 108, 32, 9, 13, 32, 99, 
	102, 109, 9, 13, 108, 100, 99, 107, 
	98, 116, 32, 9, 13, 32, 98, 99, 
	102, 109, 114, 9, 13, 32, 101, 9, 
	13, 32, 9, 13, 48, 57, 116, 32, 
	9, 13, 108, 108, 99, 107, 108, 100, 
	32, 97, 9, 13, 105, 115, 101, 110, 
	108, 108, 106, 98, 116, 103, 32, 9, 
	13, 49, 51, 98, 116, 32, 9, 13, 
	32, 98, 99, 102, 109, 114, 9, 13, 
	32, 101, 9, 13, 32, 9, 13, 48, 
	57, 116, 32, 9, 13, 32, 97, 9, 
	13, 105, 115, 101, 110, 106, 98, 116, 
	103, 32, 9, 13, 49, 51, 97, 108, 
	108, 95, 98, 108, 105, 110, 100, 32, 
	9, 13, 115, 98, 32, 9, 13, 32, 
	9, 13, 48, 57, 97, 116, 117, 115, 
	32, 9, 13, 102, 104, 110, 112, 114, 
	115, 116, 111, 112, 114, 111, 119, 104, 
	116, 97, 110, 100, 111, 117, 114, 110, 
	101, 121, 101, 108, 111, 112, 118, 101, 
	114, 104, 119, 111, 119, 110, 114, 110, 
	32, 49, 65, 81, 97, 98, 99, 102, 
	104, 108, 109, 113, 115, 117, 9, 13, 
	50, 57, 74, 75, 106, 107, 48, 72, 
	83, 104, 115, 67, 68, 99, 100, 32, 
	49, 65, 81, 97, 113, 9, 13, 50, 
	57, 74, 75, 106, 107, 32, 49, 65, 
	81, 97, 113, 9, 13, 50, 57, 74, 
	75, 106, 107, 48, 72, 83, 104, 115, 
	67, 68, 99, 100, 32, 49, 65, 81, 
	97, 113, 9, 13, 50, 57, 74, 75, 
	106, 107, 32, 49, 65, 81, 97, 113, 
	9, 13, 50, 57, 74, 75, 106, 107, 
	48, 72, 83, 104, 115, 67, 68, 99, 
	100, 48, 72, 83, 104, 115, 67, 68, 
	99, 100, 32, 49, 65, 81, 97, 113, 
	9, 13, 50, 57, 74, 75, 106, 107, 
	32, 49, 65, 81, 97, 113, 9, 13, 
	50, 57, 74, 75, 106, 107, 48, 72, 
	83, 104, 115, 67, 68, 99, 100, 32, 
	49, 65, 81, 97, 113, 9, 13, 50, 
	57, 74, 75, 106, 107, 32, 49, 65, 
	81, 97, 113, 9, 13, 50, 57, 74, 
	75, 106, 107, 48, 72, 83, 104, 115, 
	67, 68, 99, 100, 72, 83, 104, 108, 
	115, 67, 68, 99, 100, 108, 32, 9, 
	13, 32, 99, 102, 109, 9, 13, 32, 
	97, 98, 99, 102, 104, 108, 109, 115, 
	117, 9, 13, 108, 98, 116, 32, 9, 
	13, 32, 98, 99, 102, 109, 114, 9, 
	13, 32, 101, 9, 13, 32, 9, 13, 
	48, 57, 116, 32, 9, 13, 108, 108, 
	99, 107, 108, 100, 32, 97, 9, 13, 
	105, 115, 101, 110, 108, 108, 99, 107, 
	108, 100, 106, 98, 116, 103, 32, 9, 
	13, 49, 51, 72, 83, 104, 108, 115, 
	67, 68, 99, 100, 108, 32, 9, 13, 
	32, 99, 102, 109, 9, 13, 32, 49, 
	65, 81, 97, 98, 99, 102, 104, 108, 
	109, 113, 115, 117, 9, 13, 50, 57, 
	74, 75, 106, 107, 72, 83, 104, 108, 
	115, 67, 68, 99, 100, 98, 116, 32, 
	9, 13, 32, 98, 99, 102, 109, 114, 
	9, 13, 32, 101, 9, 13, 32, 9, 
	13, 48, 57, 116, 32, 9, 13, 108, 
	108, 99, 107, 108, 100, 32, 97, 9, 
	13, 105, 115, 101, 110, 108, 108, 99, 
	107, 108, 100, 106, 98, 116, 103, 32, 
	9, 13, 49, 51, 111, 112, 32, 48, 
	49, 65, 81, 97, 113, 9, 13, 50, 
	57, 74, 75, 106, 107, 32, 48, 49, 
	65, 81, 97, 113, 9, 13, 50, 57, 
	74, 75, 106, 107, 32, 49, 65, 81, 
	97, 113, 9, 13, 50, 57, 74, 75, 
	106, 107, 32, 49, 65, 81, 97, 113, 
	9, 13, 50, 57, 74, 75, 106, 107, 
	48, 72, 83, 104, 115, 67, 68, 99, 
	100, 72, 83, 104, 115, 67, 68, 99, 
	100, 32, 49, 65, 81, 97, 113, 9, 
	13, 50, 57, 74, 75, 106, 107, 32, 
	49, 65, 81, 97, 113, 9, 13, 50, 
	57, 74, 75, 106, 107, 48, 72, 83, 
	104, 115, 67, 68, 99, 100, 72, 83, 
	104, 115, 67, 68, 99, 100, 114, 111, 
	32, 48, 49, 97, 98, 115, 9, 13, 
	50, 57, 47, 48, 57, 48, 57, 32, 
	48, 49, 97, 98, 115, 9, 13, 50, 
	57, 47, 48, 57, 48, 57, 32, 48, 
	49, 97, 98, 115, 9, 13, 50, 57, 
	47, 48, 57, 48, 57, 32, 48, 49, 
	97, 98, 115, 9, 13, 50, 57, 47, 
	48, 57, 48, 57, 32, 48, 49, 97, 
	98, 115, 9, 13, 50, 57, 47, 48, 
	57, 48, 57, 47, 48, 98, 104, 112, 
	49, 57, 47, 98, 104, 112, 48, 57, 
	32, 49, 9, 13, 50, 57, 48, 98, 
	104, 112, 98, 104, 112, 32, 110, 9, 
	13, 32, 9, 13, 48, 57, 116, 101, 
	32, 9, 13, 98, 32, 9, 13, 32, 
	9, 13, 48, 57, 98, 32, 9, 13, 
	32, 9, 13, 48, 57, 47, 48, 98, 
	104, 112, 49, 57, 47, 98, 104, 112, 
	48, 57, 32, 48, 49, 97, 98, 115, 
	9, 13, 50, 57, 47, 48, 98, 104, 
	112, 49, 57, 47, 98, 104, 112, 48, 
	57, 32, 110, 9, 13, 32, 9, 13, 
	48, 57, 116, 101, 32, 9, 13, 98, 
	32, 9, 13, 32, 9, 13, 48, 57, 
	98, 32, 9, 13, 32, 9, 13, 48, 
	57, 47, 48, 98, 104, 112, 49, 57, 
	47, 98, 104, 112, 48, 57, 32, 48, 
	49, 97, 98, 115, 9, 13, 50, 57, 
	47, 48, 98, 104, 112, 49, 57, 47, 
	98, 104, 112, 48, 57, 32, 110, 9, 
	13, 32, 9, 13, 48, 57, 116, 101, 
	32, 9, 13, 98, 32, 9, 13, 32, 
	9, 13, 48, 57, 98, 32, 9, 13, 
	32, 9, 13, 48, 57, 47, 48, 98, 
	104, 112, 49, 57, 47, 98, 104, 112, 
	48, 57, 32, 48, 49, 97, 98, 115, 
	9, 13, 50, 57, 47, 48, 98, 104, 
	112, 49, 57, 47, 98, 104, 112, 48, 
	57, 32, 110, 9, 13, 32, 9, 13, 
	48, 57, 116, 101, 32, 9, 13, 98, 
	32, 9, 13, 32, 9, 13, 48, 57, 
	98, 32, 9, 13, 32, 9, 13, 48, 
	57, 47, 48, 98, 104, 112, 49, 57, 
	47, 98, 104, 112, 48, 57, 32, 48, 
	49, 97, 98, 115, 9, 13, 50, 57, 
	47, 48, 98, 104, 112, 49, 57, 47, 
	98, 104, 112, 48, 57, 32, 110, 9, 
	13, 32, 9, 13, 48, 57, 116, 101, 
	32, 9, 13, 98, 32, 9, 13, 32, 
	9, 13, 48, 57, 98, 32, 9, 13, 
	32, 9, 13, 48, 57, 119, 32, 48, 
	49, 97, 98, 104, 115, 116, 9, 13, 
	50, 57, 97, 110, 100, 111, 117, 114, 
	110, 101, 121, 101, 108, 111, 112, 118, 
	101, 114, 104, 119, 111, 119, 110, 114, 
	110, 46, 102, 104, 110, 112, 114, 115, 
	116, 48, 57, 48, 57, 47, 48, 57, 
	97, 104, 101, 111, 117, 32, 9, 13, 
	32, 9, 13, 32, 9, 13, 32, 9, 
	13, 97, 104, 101, 111, 117, 48, 57, 
	97, 104, 101, 111, 117, 97, 104, 111, 
	32, 97, 104, 9, 13, 32, 111, 9, 
	13, 32, 9, 13, 32, 117, 9, 13, 
	32, 9, 13, 48, 57, 32, 97, 104, 
	9, 13, 32, 9, 13, 32, 101, 9, 
	13, 32, 111, 9, 13, 32, 117, 9, 
	13, 32, 97, 104, 111, 9, 13, 32, 
	101, 9, 13, 32, 97, 104, 111, 9, 
	13, 48, 57, 108, 101, 101, 104, 116, 
	32, 116, 114, 102, 105, 111, 100, 117, 
	32, 108, 9, 13, 32, 9, 13, 32, 
	49, 65, 81, 97, 98, 99, 102, 104, 
	108, 109, 113, 115, 117, 9, 13, 50, 
	57, 74, 75, 106, 107, 32, 9, 13, 
	32, 9, 13, 32, 97, 104, 9, 13, 
	32, 9, 13, 48, 57, 32, 97, 104, 
	9, 13, 32, 9, 13, 32, 101, 9, 
	13, 32, 111, 9, 13, 32, 117, 9, 
	13, 32, 97, 104, 111, 9, 13, 32, 
	9, 13, 32, 101, 9, 13, 32, 111, 
	9, 13, 32, 117, 9, 13, 32, 97, 
	104, 9, 13, 32, 9, 13, 48, 57, 
	32, 97, 104, 9, 13, 32, 9, 13, 
	32, 101, 9, 13, 32, 111, 9, 13, 
	32, 117, 9, 13, 32, 97, 104, 111, 
	9, 13, 32, 9, 13, 32, 101, 9, 
	13, 32, 111, 9, 13, 32, 117, 9, 
	13, 32, 9, 13, 32, 101, 9, 13, 
	32, 9, 13, 48, 57, 48, 57, 48, 
	49, 57, 72, 83, 104, 115, 48, 57, 
	67, 68, 99, 100, 32, 9, 13, 32, 
	9, 13, 32, 48, 9, 13, 49, 57, 
	32, 72, 83, 104, 115, 9, 13, 48, 
	57, 67, 68, 99, 100, 32, 9, 13, 
	32, 48, 49, 65, 81, 97, 113, 9, 
	13, 50, 57, 74, 75, 106, 107, 32, 
	9, 13, 32, 101, 104, 116, 9, 13, 
	32, 47, 9, 13, 48, 57, 32, 47, 
	9, 13, 48, 57, 32, 47, 9, 13, 
	48, 57, 32, 47, 9, 13, 48, 57, 
	47, 48, 57, 32, 98, 104, 112, 9, 
	13, 32, 98, 104, 112, 9, 13, 32, 
	9, 13, 48, 57, 48, 57, 48, 57, 
	32, 98, 104, 112, 9, 13, 32, 98, 
	104, 112, 9, 13, 32, 9, 13, 32, 
	9, 13, 48, 57, 32, 9, 13, 48, 
	57, 32, 9, 13, 48, 57, 32, 98, 
	104, 112, 9, 13, 32, 98, 104, 112, 
	9, 13, 32, 9, 13, 32, 9, 13, 
	48, 57, 32, 9, 13, 48, 57, 32, 
	9, 13, 48, 57, 32, 98, 104, 112, 
	9, 13, 32, 98, 104, 112, 9, 13, 
	32, 9, 13, 32, 9, 13, 48, 57, 
	32, 9, 13, 48, 57, 32, 9, 13, 
	48, 57, 32, 98, 104, 112, 9, 13, 
	32, 98, 104, 112, 9, 13, 32, 9, 
	13, 32, 9, 13, 48, 57, 32, 9, 
	13, 48, 57, 32, 9, 13, 48, 57, 
	32, 9, 13, 32, 9, 13, 32, 9, 
	13, 32, 116, 9, 13, 32, 114, 9, 
	13, 32, 102, 9, 13, 32, 9, 13, 
	105, 111, 100, 117, 0
]

class << self
	attr_accessor :_pokerbot_single_lengths
	private :_pokerbot_single_lengths, :_pokerbot_single_lengths=
end
self._pokerbot_single_lengths = [
	0, 1, 1, 1, 1, 1, 7, 1, 
	1, 1, 1, 1, 2, 1, 1, 1, 
	1, 2, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 1, 0, 1, 1, 
	1, 1, 5, 1, 4, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 4, 1, 1, 1, 4, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	5, 1, 4, 6, 6, 1, 4, 6, 
	6, 1, 4, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 5, 1, 4, 
	6, 6, 1, 4, 3, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 2, 9, 
	1, 1, 1, 4, 1, 1, 1, 1, 
	1, 1, 2, 1, 6, 2, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 9, 1, 1, 1, 4, 10, 
	1, 1, 1, 4, 1, 1, 1, 1, 
	2, 1, 6, 2, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 2, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 6, 2, 1, 1, 1, 
	2, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 7, 1, 1, 
	1, 1, 1, 2, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 14, 1, 4, 6, 6, 
	1, 4, 6, 6, 1, 4, 1, 4, 
	6, 6, 1, 4, 6, 6, 1, 4, 
	5, 1, 1, 4, 10, 1, 2, 1, 
	6, 2, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 2, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 5, 1, 1, 4, 14, 
	5, 2, 1, 6, 2, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 2, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	7, 7, 6, 6, 1, 4, 4, 6, 
	6, 1, 4, 4, 1, 1, 6, 1, 
	0, 6, 1, 0, 6, 1, 0, 6, 
	1, 0, 6, 1, 0, 5, 4, 2, 
	4, 3, 2, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 5, 4, 6, 
	5, 4, 2, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 5, 4, 6, 
	5, 4, 2, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 5, 4, 6, 
	5, 4, 2, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 5, 4, 6, 
	5, 4, 2, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 8, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 8, 0, 
	0, 1, 0, 2, 0, 1, 1, 1, 
	1, 1, 1, 1, 2, 0, 1, 1, 
	1, 0, 2, 0, 1, 1, 1, 3, 
	3, 2, 1, 2, 1, 3, 1, 2, 
	2, 2, 4, 2, 4, 0, 1, 0, 
	1, 0, 3, 1, 0, 0, 1, 1, 
	1, 0, 1, 0, 1, 1, 0, 1, 
	0, 2, 1, 14, 1, 1, 3, 1, 
	3, 1, 2, 2, 2, 4, 1, 2, 
	2, 2, 3, 1, 3, 1, 2, 2, 
	2, 4, 1, 2, 2, 2, 1, 2, 
	1, 0, 1, 4, 1, 1, 2, 5, 
	1, 7, 1, 4, 2, 2, 2, 2, 
	1, 4, 4, 1, 0, 0, 0, 4, 
	4, 1, 1, 1, 1, 4, 4, 1, 
	1, 1, 1, 4, 4, 1, 1, 1, 
	1, 4, 4, 1, 1, 1, 1, 1, 
	1, 1, 2, 2, 2, 1, 1, 0, 
	1, 1, 0, 1, 0
]

class << self
	attr_accessor :_pokerbot_range_lengths
	private :_pokerbot_range_lengths, :_pokerbot_range_lengths=
end
self._pokerbot_range_lengths = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 0, 1, 2, 0, 0, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 0, 0, 1, 2, 0, 0, 
	0, 0, 1, 1, 1, 1, 0, 0, 
	0, 1, 3, 0, 2, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 0, 0, 0, 1, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	3, 0, 2, 4, 4, 0, 2, 4, 
	4, 0, 2, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 3, 0, 2, 
	4, 4, 0, 2, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 1, 1, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 1, 2, 0, 
	1, 0, 0, 0, 0, 0, 0, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	2, 1, 0, 0, 0, 1, 1, 1, 
	0, 0, 1, 1, 0, 0, 0, 0, 
	0, 1, 1, 1, 2, 0, 1, 0, 
	0, 0, 0, 0, 0, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	2, 0, 1, 1, 1, 2, 0, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 2, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 0, 0, 1, 2, 
	0, 0, 0, 0, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 4, 0, 2, 4, 4, 
	0, 2, 4, 4, 0, 2, 0, 2, 
	4, 4, 0, 2, 4, 4, 0, 2, 
	2, 0, 1, 1, 1, 0, 0, 1, 
	1, 1, 2, 0, 1, 0, 0, 0, 
	0, 0, 0, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 2, 2, 0, 1, 1, 4, 
	2, 0, 1, 1, 1, 2, 0, 1, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 2, 0, 0, 
	4, 4, 4, 4, 0, 2, 2, 4, 
	4, 0, 2, 2, 0, 0, 2, 1, 
	1, 2, 1, 1, 2, 1, 1, 2, 
	1, 1, 2, 1, 1, 1, 1, 2, 
	0, 0, 1, 2, 0, 0, 1, 0, 
	1, 2, 0, 1, 2, 1, 1, 2, 
	1, 1, 1, 2, 0, 0, 1, 0, 
	1, 2, 0, 1, 2, 1, 1, 2, 
	1, 1, 1, 2, 0, 0, 1, 0, 
	1, 2, 0, 1, 2, 1, 1, 2, 
	1, 1, 1, 2, 0, 0, 1, 0, 
	1, 2, 0, 1, 2, 1, 1, 2, 
	1, 1, 1, 2, 0, 0, 1, 0, 
	1, 2, 0, 1, 2, 0, 2, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 1, 0, 0, 0, 0, 0, 0, 
	1, 1, 1, 1, 0, 0, 0, 0, 
	0, 1, 0, 0, 0, 0, 0, 0, 
	1, 1, 1, 1, 2, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 1, 4, 1, 1, 1, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 2, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	2, 1, 1, 3, 1, 1, 2, 4, 
	1, 4, 1, 1, 2, 2, 2, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 2, 2, 2, 1, 1, 1, 
	2, 2, 2, 1, 1, 1, 2, 2, 
	2, 1, 1, 1, 2, 2, 2, 1, 
	1, 1, 1, 1, 1, 1, 0, 0, 
	0, 0, 0, 0, 0
]

class << self
	attr_accessor :_pokerbot_index_offsets
	private :_pokerbot_index_offsets, :_pokerbot_index_offsets=
end
self._pokerbot_index_offsets = [
	0, 0, 2, 4, 6, 8, 10, 18, 
	20, 22, 24, 27, 29, 33, 37, 39, 
	41, 44, 47, 49, 51, 53, 55, 57, 
	59, 61, 64, 66, 68, 71, 75, 77, 
	79, 81, 83, 86, 88, 91, 93, 95, 
	97, 99, 102, 111, 113, 120, 122, 124, 
	126, 128, 130, 132, 134, 136, 138, 140, 
	142, 144, 146, 149, 154, 156, 158, 161, 
	167, 169, 171, 173, 175, 177, 179, 181, 
	183, 185, 187, 189, 191, 193, 195, 197, 
	200, 209, 211, 218, 229, 240, 242, 249, 
	260, 271, 273, 280, 282, 284, 286, 288, 
	290, 292, 294, 296, 298, 301, 310, 312, 
	319, 330, 341, 343, 350, 354, 356, 358, 
	360, 362, 364, 366, 368, 370, 372, 376, 
	386, 388, 390, 393, 399, 401, 403, 405, 
	407, 409, 411, 414, 417, 425, 429, 433, 
	435, 438, 440, 442, 444, 446, 448, 450, 
	454, 456, 458, 460, 462, 464, 466, 468, 
	470, 474, 477, 487, 489, 491, 494, 500, 
	512, 514, 516, 519, 525, 527, 529, 531, 
	533, 536, 539, 547, 551, 555, 557, 560, 
	562, 564, 566, 568, 570, 572, 576, 578, 
	580, 582, 584, 586, 588, 590, 592, 594, 
	596, 600, 603, 606, 614, 618, 622, 624, 
	627, 631, 633, 635, 637, 639, 641, 643, 
	645, 647, 651, 653, 655, 657, 659, 661, 
	663, 665, 667, 669, 672, 674, 676, 679, 
	683, 685, 687, 689, 691, 694, 702, 704, 
	706, 708, 710, 712, 715, 717, 719, 721, 
	723, 725, 727, 729, 731, 733, 735, 737, 
	739, 741, 743, 745, 747, 749, 751, 753, 
	755, 757, 759, 761, 780, 782, 789, 800, 
	811, 813, 820, 831, 842, 844, 851, 853, 
	860, 871, 882, 884, 891, 902, 913, 915, 
	922, 930, 932, 935, 941, 953, 955, 958, 
	961, 969, 973, 977, 979, 982, 984, 986, 
	988, 990, 992, 994, 998, 1000, 1002, 1004, 
	1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 
	1022, 1024, 1026, 1030, 1038, 1040, 1043, 1049, 
	1068, 1076, 1079, 1082, 1090, 1094, 1098, 1100, 
	1103, 1105, 1107, 1109, 1111, 1113, 1115, 1119, 
	1121, 1123, 1125, 1127, 1129, 1131, 1133, 1135, 
	1137, 1139, 1141, 1143, 1145, 1147, 1151, 1153, 
	1155, 1167, 1179, 1190, 1201, 1203, 1210, 1217, 
	1228, 1239, 1241, 1248, 1255, 1257, 1259, 1268, 
	1271, 1273, 1282, 1285, 1287, 1296, 1299, 1301, 
	1310, 1313, 1315, 1324, 1327, 1329, 1336, 1342, 
	1347, 1352, 1356, 1360, 1364, 1366, 1368, 1371, 
	1373, 1376, 1380, 1382, 1385, 1389, 1396, 1402, 
	1411, 1418, 1424, 1428, 1432, 1434, 1436, 1439, 
	1441, 1444, 1448, 1450, 1453, 1457, 1464, 1470, 
	1479, 1486, 1492, 1496, 1500, 1502, 1504, 1507, 
	1509, 1512, 1516, 1518, 1521, 1525, 1532, 1538, 
	1547, 1554, 1560, 1564, 1568, 1570, 1572, 1575, 
	1577, 1580, 1584, 1586, 1589, 1593, 1600, 1606, 
	1615, 1622, 1628, 1632, 1636, 1638, 1640, 1643, 
	1645, 1648, 1652, 1654, 1657, 1661, 1663, 1674, 
	1676, 1678, 1680, 1682, 1684, 1686, 1688, 1690, 
	1692, 1694, 1696, 1698, 1700, 1702, 1704, 1706, 
	1708, 1710, 1712, 1714, 1716, 1718, 1720, 1729, 
	1731, 1733, 1736, 1737, 1740, 1741, 1743, 1745, 
	1747, 1750, 1753, 1756, 1759, 1762, 1763, 1765, 
	1767, 1769, 1771, 1774, 1775, 1777, 1779, 1781, 
	1785, 1790, 1794, 1797, 1801, 1805, 1810, 1813, 
	1817, 1821, 1825, 1831, 1835, 1841, 1843, 1845, 
	1846, 1848, 1849, 1853, 1855, 1856, 1857, 1859, 
	1861, 1863, 1864, 1866, 1867, 1869, 1871, 1872, 
	1874, 1875, 1879, 1882, 1901, 1904, 1907, 1912, 
	1916, 1921, 1924, 1928, 1932, 1936, 1942, 1945, 
	1949, 1953, 1957, 1962, 1966, 1971, 1974, 1978, 
	1982, 1986, 1992, 1995, 1999, 2003, 2007, 2010, 
	2014, 2018, 2020, 2023, 2031, 2034, 2037, 2042, 
	2052, 2055, 2067, 2070, 2076, 2081, 2086, 2091, 
	2096, 2099, 2105, 2111, 2114, 2116, 2118, 2120, 
	2126, 2132, 2135, 2139, 2143, 2147, 2153, 2159, 
	2162, 2166, 2170, 2174, 2180, 2186, 2189, 2193, 
	2197, 2201, 2207, 2213, 2216, 2220, 2224, 2228, 
	2231, 2234, 2237, 2241, 2245, 2249, 2252, 2254, 
	2255, 2257, 2259, 2260, 2262
]

class << self
	attr_accessor :_pokerbot_indicies
	private :_pokerbot_indicies, :_pokerbot_indicies=
end
self._pokerbot_indicies = [
	0, 1, 2, 1, 3, 1, 4, 1, 
	5, 1, 6, 7, 8, 9, 10, 11, 
	12, 1, 13, 1, 14, 1, 15, 1, 
	16, 16, 1, 17, 1, 18, 19, 18, 
	1, 18, 18, 20, 1, 21, 1, 22, 
	1, 18, 18, 1, 23, 24, 1, 25, 
	1, 26, 1, 27, 1, 28, 1, 29, 
	1, 30, 1, 31, 1, 32, 32, 1, 
	33, 1, 34, 1, 35, 35, 1, 35, 
	35, 36, 1, 37, 1, 38, 1, 39, 
	1, 40, 1, 41, 41, 1, 42, 1, 
	43, 42, 1, 45, 44, 46, 1, 47, 
	1, 48, 1, 49, 49, 1, 50, 51, 
	51, 51, 51, 51, 51, 51, 1, 51, 
	1, 52, 52, 52, 52, 52, 52, 1, 
	53, 1, 54, 1, 55, 1, 56, 1, 
	57, 1, 58, 1, 59, 1, 60, 1, 
	61, 1, 62, 1, 63, 1, 64, 1, 
	65, 1, 66, 66, 1, 67, 68, 69, 
	70, 1, 71, 1, 72, 1, 73, 73, 
	1, 73, 68, 69, 70, 73, 1, 75, 
	74, 76, 74, 77, 74, 76, 74, 78, 
	74, 76, 74, 79, 1, 80, 1, 81, 
	1, 82, 1, 83, 1, 84, 1, 85, 
	1, 86, 1, 87, 1, 88, 88, 1, 
	89, 90, 90, 90, 90, 90, 90, 90, 
	1, 90, 1, 91, 91, 91, 91, 91, 
	91, 1, 92, 93, 94, 94, 94, 94, 
	92, 94, 94, 94, 1, 95, 96, 97, 
	97, 97, 97, 95, 97, 97, 97, 1, 
	97, 1, 98, 98, 98, 98, 98, 98, 
	1, 99, 100, 101, 101, 101, 101, 99, 
	101, 101, 101, 1, 102, 103, 104, 104, 
	104, 104, 102, 104, 104, 104, 1, 104, 
	1, 105, 105, 105, 105, 105, 105, 1, 
	106, 1, 107, 1, 108, 1, 109, 1, 
	110, 1, 111, 1, 112, 1, 113, 1, 
	114, 1, 115, 115, 1, 116, 117, 117, 
	117, 117, 117, 117, 117, 1, 117, 1, 
	118, 118, 118, 118, 118, 118, 1, 119, 
	120, 121, 121, 121, 121, 119, 121, 121, 
	121, 1, 122, 123, 124, 124, 124, 124, 
	122, 124, 124, 124, 1, 124, 1, 125, 
	125, 125, 125, 125, 125, 1, 126, 127, 
	128, 1, 129, 1, 130, 1, 131, 1, 
	132, 1, 133, 1, 134, 1, 135, 1, 
	136, 1, 137, 1, 138, 139, 138, 1, 
	140, 141, 142, 143, 144, 144, 145, 146, 
	147, 1, 148, 1, 149, 1, 150, 150, 
	1, 150, 151, 143, 145, 150, 1, 153, 
	152, 154, 152, 155, 152, 154, 152, 156, 
	152, 154, 152, 157, 158, 1, 159, 159, 
	44, 159, 160, 161, 162, 163, 164, 159, 
	44, 165, 166, 165, 44, 165, 165, 167, 
	44, 168, 44, 165, 165, 44, 169, 152, 
	170, 152, 171, 152, 170, 152, 172, 152, 
	170, 152, 165, 173, 165, 44, 174, 44, 
	175, 44, 168, 44, 157, 1, 157, 1, 
	157, 1, 176, 1, 177, 1, 159, 159, 
	157, 1, 178, 178, 1, 179, 180, 181, 
	182, 183, 183, 184, 185, 186, 1, 187, 
	1, 188, 1, 189, 189, 1, 189, 190, 
	182, 184, 189, 1, 192, 193, 194, 195, 
	182, 196, 196, 184, 197, 198, 192, 191, 
	199, 191, 200, 191, 201, 201, 191, 201, 
	190, 182, 184, 201, 191, 202, 191, 203, 
	191, 204, 191, 203, 191, 205, 206, 191, 
	207, 207, 191, 207, 208, 209, 210, 211, 
	212, 207, 191, 213, 214, 213, 191, 213, 
	213, 215, 191, 216, 191, 213, 213, 191, 
	217, 191, 218, 191, 219, 191, 218, 191, 
	220, 191, 218, 191, 213, 221, 213, 191, 
	222, 191, 223, 191, 216, 191, 205, 191, 
	224, 191, 203, 191, 205, 191, 205, 191, 
	225, 191, 226, 191, 207, 207, 205, 191, 
	227, 228, 1, 229, 229, 44, 229, 230, 
	209, 210, 211, 231, 229, 44, 232, 233, 
	232, 44, 232, 232, 215, 44, 234, 44, 
	232, 232, 44, 232, 235, 232, 44, 236, 
	44, 237, 44, 234, 44, 227, 1, 227, 
	1, 227, 1, 238, 1, 239, 1, 229, 
	229, 227, 1, 240, 1, 241, 1, 242, 
	1, 243, 1, 244, 1, 245, 1, 246, 
	1, 247, 1, 248, 1, 249, 249, 1, 
	250, 1, 251, 1, 252, 252, 1, 252, 
	252, 253, 1, 254, 1, 255, 1, 256, 
	1, 257, 1, 258, 258, 1, 259, 260, 
	261, 262, 263, 264, 265, 1, 267, 266, 
	268, 266, 269, 266, 270, 266, 271, 266, 
	272, 273, 266, 274, 266, 275, 266, 276, 
	266, 277, 266, 278, 266, 279, 266, 280, 
	266, 281, 266, 282, 266, 283, 266, 284, 
	266, 285, 266, 286, 266, 287, 266, 288, 
	266, 289, 266, 290, 1, 291, 266, 292, 
	266, 293, 266, 294, 266, 295, 266, 296, 
	266, 298, 299, 300, 300, 301, 302, 303, 
	304, 305, 305, 306, 300, 307, 308, 298, 
	300, 300, 300, 297, 300, 297, 309, 309, 
	309, 309, 309, 309, 297, 310, 311, 312, 
	312, 312, 312, 310, 312, 312, 312, 297, 
	313, 314, 315, 315, 315, 315, 313, 315, 
	315, 315, 297, 315, 297, 316, 316, 316, 
	316, 316, 316, 297, 317, 318, 319, 319, 
	319, 319, 317, 319, 319, 319, 297, 320, 
	321, 322, 322, 322, 322, 320, 322, 322, 
	322, 297, 322, 297, 323, 323, 323, 323, 
	323, 323, 297, 324, 297, 325, 325, 325, 
	325, 325, 325, 297, 326, 327, 328, 328, 
	328, 328, 326, 328, 328, 328, 297, 329, 
	330, 331, 331, 331, 331, 329, 331, 331, 
	331, 297, 331, 297, 332, 332, 332, 332, 
	332, 332, 297, 333, 334, 335, 335, 335, 
	335, 333, 335, 335, 335, 297, 336, 337, 
	338, 338, 338, 338, 336, 338, 338, 338, 
	297, 338, 297, 339, 339, 339, 339, 339, 
	339, 297, 325, 325, 325, 340, 325, 325, 
	325, 297, 341, 297, 342, 342, 297, 342, 
	343, 344, 345, 342, 297, 346, 347, 348, 
	349, 344, 350, 350, 345, 351, 352, 346, 
	297, 340, 297, 353, 354, 297, 355, 355, 
	297, 355, 356, 357, 358, 359, 360, 355, 
	297, 361, 362, 361, 297, 361, 361, 363, 
	297, 364, 297, 361, 361, 297, 365, 297, 
	366, 297, 367, 297, 366, 297, 368, 297, 
	366, 297, 361, 369, 361, 297, 370, 297, 
	371, 297, 364, 297, 353, 297, 372, 297, 
	373, 297, 374, 297, 373, 297, 375, 297, 
	373, 297, 353, 297, 353, 297, 376, 297, 
	377, 297, 355, 355, 353, 297, 309, 309, 
	309, 378, 309, 309, 309, 297, 379, 297, 
	380, 380, 297, 380, 381, 304, 306, 380, 
	297, 382, 383, 324, 324, 384, 302, 303, 
	304, 305, 305, 306, 324, 307, 308, 382, 
	324, 324, 324, 297, 325, 325, 325, 378, 
	325, 325, 325, 297, 385, 386, 297, 387, 
	387, 297, 387, 388, 389, 390, 391, 392, 
	387, 297, 393, 394, 393, 297, 393, 393, 
	395, 297, 396, 297, 393, 393, 297, 397, 
	297, 398, 297, 399, 297, 398, 297, 400, 
	297, 398, 297, 393, 401, 393, 297, 402, 
	297, 403, 297, 396, 297, 385, 297, 404, 
	297, 405, 297, 406, 297, 405, 297, 407, 
	297, 405, 297, 385, 297, 385, 297, 408, 
	297, 409, 297, 387, 387, 385, 297, 410, 
	297, 411, 297, 412, 413, 414, 416, 416, 
	416, 416, 412, 415, 416, 416, 297, 417, 
	418, 419, 421, 421, 421, 421, 417, 420, 
	421, 421, 297, 422, 423, 424, 424, 424, 
	424, 422, 424, 424, 424, 297, 425, 426, 
	427, 427, 427, 427, 425, 427, 427, 427, 
	297, 427, 297, 428, 428, 428, 428, 428, 
	428, 297, 429, 429, 429, 429, 429, 429, 
	297, 430, 431, 432, 432, 432, 432, 430, 
	432, 432, 432, 297, 433, 434, 435, 435, 
	435, 435, 433, 435, 435, 435, 297, 435, 
	297, 436, 436, 436, 436, 436, 436, 297, 
	437, 437, 437, 437, 437, 437, 297, 438, 
	297, 439, 297, 440, 441, 442, 444, 445, 
	446, 440, 443, 297, 447, 441, 297, 448, 
	297, 449, 450, 451, 453, 454, 455, 449, 
	452, 297, 456, 450, 297, 457, 297, 458, 
	459, 460, 462, 463, 464, 458, 461, 297, 
	465, 459, 297, 466, 297, 467, 468, 469, 
	471, 472, 473, 467, 470, 297, 474, 468, 
	297, 475, 297, 476, 477, 478, 480, 481, 
	482, 476, 479, 297, 483, 477, 297, 484, 
	297, 483, 479, 485, 485, 485, 477, 297, 
	483, 485, 485, 485, 477, 297, 486, 487, 
	486, 488, 297, 488, 485, 485, 485, 297, 
	485, 485, 485, 297, 489, 490, 489, 297, 
	489, 489, 491, 297, 492, 297, 493, 297, 
	489, 489, 297, 494, 297, 495, 495, 297, 
	495, 495, 496, 297, 497, 297, 498, 498, 
	297, 498, 498, 499, 297, 474, 470, 500, 
	500, 500, 468, 297, 474, 500, 500, 500, 
	468, 297, 501, 477, 502, 480, 481, 482, 
	501, 503, 297, 483, 503, 500, 500, 500, 
	477, 297, 483, 500, 500, 500, 477, 297, 
	504, 505, 504, 297, 504, 504, 506, 297, 
	507, 297, 508, 297, 504, 504, 297, 509, 
	297, 510, 510, 297, 510, 510, 511, 297, 
	512, 297, 513, 513, 297, 513, 513, 514, 
	297, 465, 461, 515, 515, 515, 459, 297, 
	465, 515, 515, 515, 459, 297, 516, 468, 
	517, 471, 472, 473, 516, 518, 297, 474, 
	518, 515, 515, 515, 468, 297, 474, 515, 
	515, 515, 468, 297, 519, 520, 519, 297, 
	519, 519, 521, 297, 522, 297, 523, 297, 
	519, 519, 297, 524, 297, 525, 525, 297, 
	525, 525, 526, 297, 527, 297, 528, 528, 
	297, 528, 528, 529, 297, 456, 452, 530, 
	530, 530, 450, 297, 456, 530, 530, 530, 
	450, 297, 531, 459, 532, 462, 463, 464, 
	531, 533, 297, 465, 533, 530, 530, 530, 
	459, 297, 465, 530, 530, 530, 459, 297, 
	534, 535, 534, 297, 534, 534, 536, 297, 
	537, 297, 538, 297, 534, 534, 297, 539, 
	297, 540, 540, 297, 540, 540, 541, 297, 
	542, 297, 543, 543, 297, 543, 543, 544, 
	297, 447, 443, 545, 545, 545, 441, 297, 
	447, 545, 545, 545, 441, 297, 546, 450, 
	547, 453, 454, 455, 546, 548, 297, 456, 
	548, 545, 545, 545, 450, 297, 456, 545, 
	545, 545, 450, 297, 549, 550, 549, 297, 
	549, 549, 551, 297, 552, 297, 553, 297, 
	549, 549, 297, 554, 297, 555, 555, 297, 
	555, 555, 556, 297, 557, 297, 558, 558, 
	297, 558, 558, 559, 297, 560, 297, 440, 
	441, 442, 444, 445, 561, 446, 562, 440, 
	443, 297, 563, 297, 564, 297, 565, 297, 
	566, 297, 567, 297, 568, 297, 569, 297, 
	570, 297, 571, 297, 572, 297, 573, 297, 
	574, 297, 575, 297, 576, 297, 577, 297, 
	578, 297, 579, 1, 580, 297, 581, 297, 
	582, 297, 583, 297, 584, 297, 585, 297, 
	586, 587, 588, 589, 590, 591, 592, 593, 
	1, 595, 594, 597, 596, 43, 45, 598, 
	599, 601, 602, 600, 600, 603, 600, 604, 
	600, 603, 600, 606, 606, 605, 608, 608, 
	607, 610, 610, 609, 612, 612, 611, 614, 
	615, 613, 613, 616, 613, 617, 613, 616, 
	613, 167, 618, 619, 620, 618, 618, 621, 
	618, 622, 618, 621, 618, 614, 615, 157, 
	613, 624, 625, 626, 624, 623, 624, 627, 
	624, 623, 624, 624, 623, 624, 628, 624, 
	623, 630, 630, 215, 629, 630, 631, 632, 
	630, 629, 630, 630, 629, 630, 633, 630, 
	629, 630, 634, 630, 629, 630, 633, 630, 
	629, 624, 625, 626, 205, 624, 623, 624, 
	628, 624, 623, 624, 625, 626, 227, 624, 
	623, 636, 635, 638, 637, 637, 640, 639, 
	639, 642, 643, 282, 641, 644, 641, 641, 
	645, 282, 641, 647, 646, 648, 646, 646, 
	650, 649, 649, 652, 651, 653, 651, 651, 
	655, 654, 654, 657, 658, 657, 656, 660, 
	660, 659, 662, 383, 324, 324, 663, 348, 
	349, 344, 350, 350, 345, 324, 351, 352, 
	662, 324, 324, 324, 661, 664, 664, 659, 
	665, 665, 661, 667, 668, 669, 667, 666, 
	671, 671, 363, 670, 671, 672, 673, 671, 
	670, 671, 671, 670, 671, 674, 671, 670, 
	671, 675, 671, 670, 671, 674, 671, 670, 
	667, 668, 669, 353, 667, 666, 667, 667, 
	666, 667, 676, 667, 666, 667, 677, 667, 
	666, 667, 676, 667, 666, 678, 679, 680, 
	678, 666, 681, 681, 395, 670, 681, 682, 
	683, 681, 670, 681, 681, 670, 681, 684, 
	681, 670, 681, 685, 681, 670, 681, 684, 
	681, 670, 678, 679, 680, 385, 678, 666, 
	678, 678, 666, 678, 686, 678, 666, 678, 
	687, 678, 666, 678, 686, 678, 666, 657, 
	657, 656, 689, 690, 689, 688, 692, 692, 
	413, 691, 418, 691, 420, 418, 691, 429, 
	429, 429, 429, 418, 429, 429, 691, 694, 
	694, 693, 696, 696, 695, 692, 415, 692, 
	413, 691, 692, 437, 437, 437, 437, 692, 
	413, 437, 437, 691, 697, 697, 693, 698, 
	418, 419, 421, 421, 421, 421, 698, 420, 
	421, 421, 695, 689, 689, 688, 700, 701, 
	702, 571, 700, 699, 704, 447, 704, 448, 
	703, 705, 456, 705, 457, 703, 706, 465, 
	706, 466, 703, 707, 474, 707, 475, 703, 
	483, 484, 703, 709, 710, 710, 710, 709, 
	708, 709, 711, 711, 711, 709, 708, 709, 
	709, 708, 713, 712, 715, 714, 717, 716, 
	718, 719, 719, 719, 718, 708, 718, 720, 
	720, 720, 718, 708, 718, 718, 708, 721, 
	721, 722, 712, 723, 723, 724, 714, 725, 
	725, 726, 716, 727, 728, 728, 728, 727, 
	708, 727, 729, 729, 729, 727, 708, 727, 
	727, 708, 730, 730, 731, 712, 732, 732, 
	733, 714, 734, 734, 735, 716, 736, 737, 
	737, 737, 736, 708, 736, 738, 738, 738, 
	736, 708, 736, 736, 708, 739, 739, 740, 
	712, 741, 741, 742, 714, 743, 743, 744, 
	716, 745, 746, 746, 746, 745, 708, 745, 
	747, 747, 747, 745, 708, 745, 745, 708, 
	748, 748, 749, 712, 750, 750, 751, 714, 
	752, 752, 753, 716, 754, 700, 699, 700, 
	700, 699, 756, 756, 755, 700, 571, 700, 
	699, 758, 759, 758, 757, 758, 760, 758, 
	757, 758, 758, 757, 762, 761, 761, 764, 
	763, 765, 763, 763, 767, 766, 766, 0
]

class << self
	attr_accessor :_pokerbot_trans_targs
	private :_pokerbot_trans_targs, :_pokerbot_trans_targs=
end
self._pokerbot_trans_targs = [
	2, 0, 3, 4, 5, 6, 7, 17, 
	38, 45, 70, 91, 108, 8, 9, 10, 
	11, 12, 13, 14, 487, 15, 16, 18, 
	30, 19, 20, 21, 22, 23, 24, 25, 
	26, 27, 28, 29, 488, 31, 32, 33, 
	34, 35, 36, 37, 486, 489, 39, 40, 
	41, 42, 43, 44, 490, 46, 47, 48, 
	49, 50, 51, 52, 53, 54, 55, 56, 
	57, 58, 59, 60, 491, 494, 495, 61, 
	62, 63, 486, 65, 492, 67, 69, 71, 
	72, 73, 74, 75, 76, 77, 78, 79, 
	80, 81, 82, 83, 84, 85, 86, 84, 
	85, 86, 87, 88, 89, 90, 88, 89, 
	90, 496, 92, 93, 94, 95, 96, 97, 
	98, 99, 100, 101, 102, 103, 104, 105, 
	106, 107, 105, 106, 107, 498, 109, 210, 
	224, 110, 111, 112, 113, 114, 115, 116, 
	117, 118, 119, 153, 120, 130, 511, 503, 
	148, 504, 149, 150, 121, 122, 123, 500, 
	486, 125, 501, 127, 129, 131, 147, 132, 
	133, 506, 509, 510, 143, 134, 135, 505, 
	136, 138, 507, 140, 142, 144, 145, 146, 
	151, 152, 154, 155, 193, 524, 513, 205, 
	515, 206, 207, 156, 157, 158, 512, 486, 
	159, 160, 168, 522, 188, 189, 190, 161, 
	162, 163, 165, 514, 167, 169, 185, 170, 
	171, 517, 520, 521, 181, 172, 173, 516, 
	174, 176, 518, 178, 180, 182, 183, 184, 
	187, 191, 192, 194, 204, 195, 196, 200, 
	197, 198, 199, 201, 202, 203, 208, 209, 
	211, 212, 213, 214, 215, 216, 217, 218, 
	219, 220, 221, 222, 223, 525, 225, 226, 
	227, 228, 229, 526, 528, 530, 535, 538, 
	252, 543, 486, 231, 527, 233, 529, 531, 
	236, 239, 237, 238, 532, 240, 241, 242, 
	243, 244, 533, 536, 247, 248, 537, 250, 
	251, 539, 540, 541, 255, 256, 542, 258, 
	544, 486, 259, 260, 261, 315, 321, 569, 
	572, 345, 573, 346, 347, 262, 263, 264, 
	265, 263, 264, 265, 266, 267, 268, 269, 
	267, 268, 269, 546, 271, 272, 273, 274, 
	275, 273, 274, 275, 276, 277, 278, 279, 
	277, 278, 279, 548, 281, 282, 283, 550, 
	560, 561, 284, 285, 286, 557, 310, 311, 
	312, 287, 303, 288, 289, 552, 555, 556, 
	299, 290, 291, 551, 292, 294, 553, 296, 
	298, 300, 301, 302, 305, 558, 307, 309, 
	313, 314, 316, 317, 318, 562, 319, 270, 
	320, 322, 338, 323, 324, 564, 567, 568, 
	334, 325, 326, 563, 327, 329, 565, 331, 
	333, 335, 336, 337, 340, 570, 342, 344, 
	348, 349, 351, 574, 352, 576, 582, 583, 
	363, 353, 577, 578, 579, 358, 355, 356, 
	357, 355, 356, 357, 580, 354, 360, 361, 
	362, 360, 361, 362, 584, 359, 365, 586, 
	366, 367, 445, 446, 450, 455, 458, 368, 
	588, 369, 370, 429, 430, 434, 439, 442, 
	371, 589, 372, 373, 413, 414, 418, 423, 
	426, 374, 590, 375, 376, 397, 398, 402, 
	407, 410, 377, 591, 378, 379, 381, 382, 
	386, 391, 394, 380, 592, 593, 383, 384, 
	385, 387, 388, 596, 389, 390, 392, 393, 
	597, 395, 396, 598, 599, 399, 400, 401, 
	403, 404, 602, 405, 406, 408, 409, 603, 
	411, 412, 604, 605, 415, 416, 417, 419, 
	420, 608, 421, 422, 424, 425, 609, 427, 
	428, 610, 611, 431, 432, 433, 435, 436, 
	614, 437, 438, 440, 441, 615, 443, 444, 
	616, 617, 447, 448, 449, 451, 452, 620, 
	453, 454, 456, 457, 621, 459, 460, 622, 
	623, 463, 466, 464, 465, 624, 467, 468, 
	469, 470, 471, 625, 628, 474, 475, 629, 
	477, 478, 631, 632, 633, 482, 483, 634, 
	485, 636, 1, 545, 575, 587, 627, 630, 
	479, 635, 486, 487, 486, 488, 486, 486, 
	486, 64, 493, 66, 68, 486, 497, 486, 
	497, 486, 499, 486, 499, 486, 124, 502, 
	126, 128, 486, 137, 508, 139, 141, 486, 
	159, 186, 523, 164, 166, 486, 159, 175, 
	519, 177, 179, 486, 525, 486, 230, 486, 
	232, 486, 234, 534, 235, 486, 486, 245, 
	246, 486, 249, 486, 253, 254, 486, 257, 
	486, 259, 350, 486, 547, 486, 547, 280, 
	549, 549, 486, 284, 304, 559, 486, 284, 
	293, 554, 295, 297, 306, 308, 319, 339, 
	571, 319, 328, 566, 330, 332, 341, 343, 
	486, 352, 364, 486, 353, 486, 581, 486, 
	581, 585, 585, 486, 366, 461, 626, 486, 
	369, 372, 375, 378, 486, 383, 594, 595, 
	486, 596, 486, 597, 486, 598, 399, 600, 
	601, 378, 602, 378, 603, 378, 604, 415, 
	606, 607, 375, 608, 375, 609, 375, 610, 
	431, 612, 613, 372, 614, 372, 615, 372, 
	616, 447, 618, 619, 369, 620, 369, 621, 
	369, 622, 462, 486, 366, 486, 284, 472, 
	473, 486, 476, 486, 480, 481, 486, 484
]

class << self
	attr_accessor :_pokerbot_trans_actions
	private :_pokerbot_trans_actions, :_pokerbot_trans_actions=
end
self._pokerbot_trans_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	53, 0, 0, 0, 23, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	49, 0, 0, 0, 19, 0, 0, 0, 
	0, 47, 0, 0, 71, 211, 0, 0, 
	0, 35, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 43, 0, 59, 59, 59, 0, 
	0, 0, 65, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	39, 0, 0, 0, 1, 1, 1, 0, 
	0, 0, 0, 1, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 37, 0, 0, 0, 1, 
	1, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 41, 0, 0, 0, 205, 59, 
	0, 59, 0, 0, 0, 0, 0, 59, 
	63, 0, 0, 0, 0, 0, 0, 0, 
	0, 59, 59, 59, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 45, 0, 0, 208, 59, 0, 
	59, 0, 0, 0, 0, 0, 59, 67, 
	0, 0, 0, 59, 0, 0, 0, 0, 
	0, 0, 0, 59, 0, 0, 0, 0, 
	0, 59, 59, 59, 0, 0, 0, 59, 
	0, 0, 59, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 51, 0, 0, 0, 21, 0, 0, 
	0, 0, 55, 59, 59, 59, 59, 59, 
	0, 59, 69, 0, 0, 0, 0, 59, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 59, 0, 0, 0, 0, 
	0, 0, 59, 59, 0, 0, 0, 0, 
	0, 61, 0, 0, 0, 0, 0, 59, 
	59, 0, 59, 0, 0, 0, 1, 1, 
	1, 0, 0, 0, 0, 1, 1, 1, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	1, 0, 0, 0, 0, 1, 1, 1, 
	0, 0, 0, 0, 0, 0, 0, 59, 
	59, 59, 0, 0, 0, 59, 0, 0, 
	0, 0, 0, 0, 0, 59, 59, 59, 
	0, 0, 0, 59, 0, 0, 59, 0, 
	0, 0, 0, 0, 0, 59, 0, 0, 
	0, 0, 0, 0, 0, 59, 0, 0, 
	0, 0, 0, 0, 0, 59, 59, 59, 
	0, 0, 0, 59, 0, 0, 59, 0, 
	0, 0, 0, 0, 0, 59, 0, 0, 
	0, 0, 0, 59, 0, 59, 59, 59, 
	0, 0, 0, 0, 59, 0, 1, 1, 
	1, 0, 0, 0, 0, 0, 1, 1, 
	1, 0, 0, 0, 0, 0, 0, 59, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	59, 0, 0, 0, 0, 0, 0, 0, 
	0, 59, 0, 0, 0, 0, 0, 0, 
	0, 0, 59, 0, 0, 0, 0, 0, 
	0, 0, 0, 59, 0, 0, 0, 0, 
	0, 0, 0, 0, 59, 59, 0, 0, 
	0, 0, 0, 23, 0, 0, 0, 0, 
	19, 0, 0, 21, 59, 0, 0, 0, 
	0, 0, 202, 0, 0, 0, 0, 196, 
	0, 0, 199, 59, 0, 0, 0, 0, 
	0, 202, 0, 0, 0, 0, 196, 0, 
	0, 199, 59, 0, 0, 0, 0, 0, 
	202, 0, 0, 0, 0, 196, 0, 0, 
	199, 59, 0, 0, 0, 0, 0, 202, 
	0, 0, 0, 0, 196, 0, 0, 199, 
	59, 0, 0, 0, 0, 59, 0, 0, 
	0, 0, 0, 59, 59, 0, 0, 59, 
	0, 0, 0, 59, 59, 0, 0, 0, 
	0, 0, 0, 59, 59, 59, 59, 59, 
	0, 59, 109, 0, 97, 0, 91, 73, 
	127, 0, 59, 0, 0, 218, 1, 79, 
	0, 226, 1, 85, 0, 124, 0, 59, 
	0, 0, 115, 0, 59, 0, 0, 130, 
	13, 0, 59, 0, 0, 118, 11, 0, 
	59, 0, 0, 103, 0, 166, 0, 154, 
	0, 142, 0, 0, 0, 148, 160, 0, 
	0, 178, 0, 184, 0, 0, 172, 0, 
	163, 33, 0, 214, 230, 76, 190, 0, 
	1, 0, 121, 13, 0, 59, 112, 11, 
	0, 59, 0, 0, 0, 0, 13, 0, 
	59, 11, 0, 59, 0, 0, 0, 0, 
	151, 29, 0, 136, 17, 222, 1, 82, 
	0, 234, 193, 139, 25, 0, 59, 88, 
	3, 3, 3, 3, 133, 15, 59, 59, 
	106, 0, 94, 0, 100, 0, 15, 59, 
	59, 9, 59, 5, 59, 7, 59, 15, 
	59, 59, 9, 59, 5, 59, 7, 59, 
	15, 59, 59, 9, 59, 5, 59, 7, 
	59, 15, 59, 59, 9, 59, 5, 59, 
	7, 59, 25, 145, 27, 157, 31, 0, 
	0, 175, 0, 181, 0, 0, 169, 0
]

class << self
	attr_accessor :_pokerbot_to_state_actions
	private :_pokerbot_to_state_actions, :_pokerbot_to_state_actions=
end
self._pokerbot_to_state_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 187, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
]

class << self
	attr_accessor :_pokerbot_from_state_actions
	private :_pokerbot_from_state_actions, :_pokerbot_from_state_actions=
end
self._pokerbot_from_state_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 57, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
]

class << self
	attr_accessor :_pokerbot_eof_trans
	private :_pokerbot_eof_trans, :_pokerbot_eof_trans=
end
self._pokerbot_eof_trans = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 45, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	75, 75, 75, 75, 75, 75, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 153, 153, 153, 153, 
	153, 153, 0, 45, 45, 45, 45, 45, 
	45, 153, 153, 153, 153, 153, 153, 45, 
	45, 45, 45, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 192, 
	192, 192, 192, 192, 192, 192, 192, 192, 
	192, 192, 192, 192, 192, 192, 192, 192, 
	192, 192, 192, 192, 192, 192, 192, 192, 
	192, 192, 192, 192, 192, 192, 192, 192, 
	192, 0, 45, 45, 45, 45, 45, 45, 
	45, 45, 45, 45, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 267, 267, 
	267, 267, 267, 267, 267, 267, 267, 267, 
	267, 267, 267, 267, 267, 267, 267, 267, 
	267, 267, 267, 267, 0, 267, 267, 267, 
	267, 267, 267, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 0, 
	298, 298, 298, 298, 298, 298, 0, 595, 
	597, 599, 600, 601, 601, 601, 601, 601, 
	606, 608, 610, 612, 614, 614, 614, 614, 
	614, 619, 619, 619, 619, 619, 619, 614, 
	624, 624, 624, 624, 630, 630, 630, 630, 
	630, 630, 624, 624, 624, 636, 638, 638, 
	640, 640, 642, 642, 642, 646, 642, 647, 
	647, 647, 650, 650, 652, 652, 652, 655, 
	655, 657, 660, 662, 660, 662, 667, 671, 
	671, 671, 671, 671, 671, 667, 667, 667, 
	667, 667, 667, 671, 671, 671, 671, 671, 
	671, 667, 667, 667, 667, 667, 657, 689, 
	692, 692, 692, 692, 694, 696, 692, 692, 
	694, 696, 689, 700, 704, 704, 704, 704, 
	704, 709, 709, 709, 713, 715, 717, 709, 
	709, 709, 713, 715, 717, 709, 709, 709, 
	713, 715, 717, 709, 709, 709, 713, 715, 
	717, 709, 709, 709, 713, 715, 717, 700, 
	700, 756, 700, 758, 758, 758, 762, 762, 
	764, 764, 764, 767, 767
]

class << self
	attr_accessor :pokerbot_start
end
self.pokerbot_start = 486;
class << self
	attr_accessor :pokerbot_first_final
end
self.pokerbot_first_final = 486;
class << self
	attr_accessor :pokerbot_error
end
self.pokerbot_error = 0;

class << self
	attr_accessor :pokerbot_en_main
end
self.pokerbot_en_main = 486;


# line 212 "lib/fb_pokerbot_parser/message_parser.rl"
    data = data.unpack("c*") if data.is_a?(String)
    eof  = data.length
    cp   = 0

    @status     = false   # true if status request
    @command    = ""
    @cards      = []
    @options    = {}
    @actions    = []
    @flop       = []
    @turn       = []
    @river      = []
    @hole_cards = []
    @players    = {}
    @hero       = {}
    @blinds     = {}
    @amount     = nil

    
# line 1510 "lib/fb_pokerbot_parser/message_parser.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = pokerbot_start
	ts = nil
	te = nil
	act = 0
end

# line 231 "lib/fb_pokerbot_parser/message_parser.rl"
    
# line 1522 "lib/fb_pokerbot_parser/message_parser.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_acts = _pokerbot_from_state_actions[cs]
	_nacts = _pokerbot_actions[_acts]
	_acts += 1
	while _nacts > 0
		_nacts -= 1
		_acts += 1
		case _pokerbot_actions[_acts - 1]
			when 35 then
# line 1 "NONE"
		begin
ts = p
		end
# line 1556 "lib/fb_pokerbot_parser/message_parser.rb"
		end # from state action switch
	end
	if _trigger_goto
		next
	end
	_keys = _pokerbot_key_offsets[cs]
	_trans = _pokerbot_index_offsets[cs]
	_klen = _pokerbot_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p].ord < _pokerbot_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p].ord > _pokerbot_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _pokerbot_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p].ord < _pokerbot_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p].ord > _pokerbot_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _pokerbot_indicies[_trans]
	end
	if _goto_level <= _eof_trans
	cs = _pokerbot_trans_targs[_trans]
	if _pokerbot_trans_actions[_trans] != 0
		_acts = _pokerbot_trans_actions[_trans]
		_nacts = _pokerbot_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _pokerbot_actions[_acts - 1]
when 0 then
# line 54 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    parseCard(data[cp..(p-1)].pack('c*').strip)
    cp = p
  		end
when 1 then
# line 58 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    @flop = @cards if @cards.count == 3
  		end
when 2 then
# line 61 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    @hole_cards = @cards if @cards.count == 2
  		end
when 3 then
# line 71 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    parseBlinds(data[cp..(p-1)].pack('c*').strip)
    cp = p
  		end
when 4 then
# line 76 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    parseBigBlind(data[cp..(p-1)].pack('c*').strip)
    cp = p
  		end
when 5 then
# line 81 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    value = data[cp..(p-1)].pack('c*').strip
    @blinds[:sb] = value.to_i
    cp = p
  		end
when 6 then
# line 87 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    value = data[cp..(p-1)].pack('c*').strip
    @blinds[:ante] = value.to_i
    cp = p
  		end
when 7 then
# line 93 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    value = data[cp..p].pack('c*').strip
    seat, action, amount = value.split(' ')
    amount = amount.to_i unless amount.nil?
    @actions << {seat: seat, action: ACTIONS.fetch(action,nil), amount: amount}
    cp = p
  		end
when 8 then
# line 101 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    value = data[cp..p].pack('c*').strip
    action = value.split(" ").last
    @actions << {seat: 'all', action: ACTIONS.fetch(action,nil), amount: nil}
    cp = p
  		end
when 9 then
# line 108 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    parse_seating_options(data[cp..p].pack('c*').strip)
    cp = p
  		end
when 10 then
# line 118 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    set_hero_stack(data[cp..p].pack('c*').strip)
    cp = p
  		end
when 11 then
# line 156 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 12 then
# line 157 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 13 then
# line 158 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 14 then
# line 165 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('nh', p, pe); cp = p 		end
when 15 then
# line 166 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('nt', p, pe); cp = p		end
when 16 then
# line 167 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('hero', p, pe); cp = p 		end
when 17 then
# line 168 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('pre', p, pe); cp = p 		end
when 18 then
# line 169 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('flop', p, pe); cp = p 		end
when 19 then
# line 170 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('turn', p, pe); cp = p 		end
when 20 then
# line 171 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('river', p, pe); cp = p 		end
when 21 then
# line 172 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('show', p, pe); cp = p 		end
when 22 then
# line 195 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 23 then
# line 196 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 24 then
# line 197 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 25 then
# line 198 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 26 then
# line 199 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 27 then
# line 200 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 28 then
# line 201 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 29 then
# line 202 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 30 then
# line 203 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 31 then
# line 204 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 32 then
# line 205 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 36 then
# line 1 "NONE"
		begin
te = p+1
		end
when 37 then
# line 198 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
act = 5;		end
when 38 then
# line 200 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
act = 7;		end
when 39 then
# line 201 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
act = 8;		end
when 40 then
# line 194 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 41 then
# line 195 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 42 then
# line 196 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 43 then
# line 197 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 44 then
# line 198 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 45 then
# line 199 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 46 then
# line 200 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 47 then
# line 201 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 48 then
# line 202 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 49 then
# line 203 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 50 then
# line 204 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 51 then
# line 205 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 52 then
# line 194 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 begin p = ((te))-1; end
		end
when 53 then
# line 198 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 begin p = ((te))-1; end
		end
when 54 then
# line 199 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 begin p = ((te))-1; end
		end
when 55 then
# line 200 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 begin p = ((te))-1; end
		end
when 56 then
# line 205 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 begin p = ((te))-1; end
		end
when 57 then
# line 1 "NONE"
		begin
	case act
	when 0 then
	begin	begin
		cs = 0
		_trigger_goto = true
		_goto_level = _again
		break
	end
end
	else
	begin begin p = ((te))-1; end
end
end 
			end
# line 1912 "lib/fb_pokerbot_parser/message_parser.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	_acts = _pokerbot_to_state_actions[cs]
	_nacts = _pokerbot_actions[_acts]
	_acts += 1
	while _nacts > 0
		_nacts -= 1
		_acts += 1
		case _pokerbot_actions[_acts - 1]
when 33 then
# line 1 "NONE"
		begin
ts = nil;		end
when 34 then
# line 1 "NONE"
		begin
act = 0
		end
# line 1937 "lib/fb_pokerbot_parser/message_parser.rb"
		end # to state action switch
	end
	if _trigger_goto
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	if _pokerbot_eof_trans[cs] > 0
		_trans = _pokerbot_eof_trans[cs] - 1;
		_goto_level = _eof_trans
		next;
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 232 "lib/fb_pokerbot_parser/message_parser.rl"
  end

  def set_cmd(key, p, pe)
    @command = COMMANDS.fetch(key, nil)
    set_status if pe == p
    puts "Command is #{@command} status request? #{@status}"
  end

  def set_status
    @status = true
  end

  def parseCard(card)
    suit = card[-1..-1]
    val  = card[0..-2]
    @cards << "#{val.upcase}#{suit.downcase}"
  end

  def parseBlinds(data)
    sb, bb, *straddles = data.split("/")
    @blinds[:sb] = sb.to_i
    @blinds[:bb] = bb.to_i
    return if straddles.empty?
    if straddles.count == 1 && straddles.first.to_i < @blinds[:bb]
      @blinds[:ante] = straddles.first.to_i
    else
      @blinds[:straddle] = straddles.map(&:to_i)
    end
    @blinds
  end

  def parseBigBlind(data)
    @blinds[:bb] = data.to_i
    @blinds[:sb] = (@blinds[:bb] / 2) if @blinds[:sb].nil?
  end

  def parse_seating_options(data)
    num = data.to_i 
    options = data.gsub(num.to_s,'')
    options.split('').each do |val|
      next unless key = NEW_HAND_OPTIONS.fetch(val,nil)
      @options[key] = num
    end
  end
   
  def set_stack_size(data)
    seat, amount = data.split(" ")
    seat = seat.to_sym
    amount = amount.to_i
    @players[key] ||= {}
    @players[key][:stack] = amount
  end

  def set_hero_stack(data)
    @hero[:stack] = data.to_i
  end
end