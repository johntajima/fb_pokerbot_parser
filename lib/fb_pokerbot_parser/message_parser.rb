
# line 1 "lib/fb_pokerbot_parser/message_parser.rl"

class FbPokerbotParser::MessageParser

  attr_accessor :command, 
                :status,
                :options, 
                :cards, 
                :actions, 
                :players,
                :hole_cards,                 
                :flop, :turn, :river,
                :amount,
                :blinds,
                :hero

  VALID_SEATS = %w| utg utg1 utg2 utg3 lj hj co btn sb bb |

  COMMANDS = {
    "nh"       => :new_hand,
    "nt"       => :new_tourney_hand,
    "hero"     => :hero,
    "pre"      => :preflop,
    "flop"     => :flop,
    "turn"     => :turn,
    "river"    => :river,
    "show"     => :showdown,
    "c"        => :set,
    "config"   => :set,
    "set"      => :set 
  }

  ACTIONS = {
    'b'     => :bet,
    'bet'   => :bet,
    'c'     => :call,
    'call'  => :call,
    'f'     => :fold,
    'fold'  => :fold,
    'r'     => :raise,
    'raise' => :raise,
    'ch'    => :check,
    'check' => :check,
    'm'     => :muck,
    'muck'  => :muck
  }

  NEW_HAND_OPTIONS = {
    'b' => :button,
    'p' => :players,
    'h' => :hero
  }


# line 228 "lib/fb_pokerbot_parser/message_parser.rl"


  def initialize(data)
    
# line 62 "lib/fb_pokerbot_parser/message_parser.rb"
class << self
	attr_accessor :_pokerbot_actions
	private :_pokerbot_actions, :_pokerbot_actions=
end
self._pokerbot_actions = [
	0, 1, 0, 1, 3, 1, 4, 1, 
	5, 1, 6, 1, 7, 1, 8, 1, 
	9, 1, 10, 1, 11, 1, 12, 1, 
	13, 1, 14, 1, 15, 1, 16, 1, 
	17, 1, 18, 1, 19, 1, 20, 1, 
	21, 1, 22, 1, 23, 1, 24, 1, 
	25, 1, 26, 1, 27, 1, 28, 1, 
	29, 1, 30, 1, 31, 1, 32, 1, 
	33, 1, 34, 1, 37, 1, 38, 1, 
	54, 1, 55, 1, 56, 1, 57, 1, 
	58, 1, 59, 2, 0, 12, 2, 0, 
	42, 2, 0, 43, 2, 1, 42, 2, 
	1, 45, 2, 2, 42, 2, 2, 44, 
	2, 3, 42, 2, 3, 49, 2, 4, 
	42, 2, 4, 50, 2, 5, 42, 2, 
	5, 51, 2, 6, 42, 2, 6, 52, 
	2, 7, 42, 2, 7, 46, 2, 7, 
	48, 2, 8, 42, 2, 8, 46, 2, 
	8, 47, 2, 8, 48, 2, 9, 42, 
	2, 10, 42, 2, 12, 42, 2, 16, 
	42, 2, 16, 53, 2, 17, 42, 2, 
	17, 53, 2, 18, 42, 2, 18, 53, 
	2, 19, 42, 2, 19, 53, 2, 20, 
	42, 2, 20, 53, 2, 21, 42, 2, 
	21, 53, 2, 22, 42, 2, 22, 53, 
	2, 23, 42, 2, 23, 53, 2, 35, 
	36, 2, 38, 0, 2, 38, 1, 2, 
	38, 2, 2, 38, 13, 2, 38, 14, 
	2, 38, 15, 2, 38, 39, 2, 38, 
	40, 2, 38, 41, 3, 0, 1, 42, 
	3, 0, 1, 45, 3, 0, 2, 42, 
	3, 0, 2, 44, 3, 0, 12, 42, 
	3, 38, 0, 1, 3, 38, 0, 2
]

class << self
	attr_accessor :_pokerbot_key_offsets
	private :_pokerbot_key_offsets, :_pokerbot_key_offsets=
end
self._pokerbot_key_offsets = [
	0, 0, 1, 2, 3, 4, 5, 12, 
	13, 14, 15, 18, 19, 23, 28, 29, 
	30, 33, 35, 36, 37, 38, 39, 40, 
	41, 42, 45, 46, 47, 50, 55, 56, 
	57, 58, 59, 62, 64, 67, 69, 70, 
	71, 72, 75, 88, 89, 99, 100, 101, 
	102, 103, 104, 105, 106, 107, 108, 109, 
	110, 111, 112, 115, 119, 120, 121, 124, 
	130, 131, 132, 133, 134, 135, 136, 137, 
	138, 139, 140, 141, 142, 143, 144, 145, 
	148, 161, 162, 172, 188, 204, 205, 215, 
	231, 247, 248, 258, 259, 260, 261, 262, 
	263, 264, 265, 266, 267, 270, 283, 284, 
	294, 310, 326, 327, 337, 340, 341, 342, 
	343, 344, 345, 346, 347, 348, 349, 353, 
	362, 363, 364, 367, 373, 374, 375, 376, 
	377, 378, 379, 381, 384, 392, 396, 401, 
	402, 405, 406, 407, 408, 409, 410, 411, 
	415, 416, 417, 418, 419, 420, 421, 422, 
	423, 428, 431, 440, 441, 442, 445, 451, 
	463, 464, 465, 468, 474, 475, 476, 477, 
	478, 480, 483, 491, 495, 500, 501, 504, 
	505, 506, 507, 508, 509, 510, 514, 515, 
	516, 517, 518, 519, 520, 521, 522, 523, 
	524, 529, 531, 534, 542, 546, 551, 552, 
	555, 559, 560, 561, 562, 563, 564, 565, 
	566, 567, 572, 573, 574, 575, 576, 577, 
	578, 579, 580, 581, 584, 585, 586, 589, 
	594, 595, 596, 597, 598, 601, 608, 609, 
	610, 611, 612, 613, 615, 616, 617, 618, 
	619, 620, 621, 622, 623, 624, 625, 626, 
	627, 628, 629, 630, 631, 632, 633, 634, 
	635, 636, 637, 638, 662, 663, 673, 689, 
	705, 706, 716, 732, 748, 749, 759, 760, 
	770, 786, 802, 803, 813, 829, 845, 846, 
	856, 867, 868, 871, 877, 889, 890, 892, 
	895, 903, 907, 912, 913, 916, 917, 918, 
	919, 920, 921, 922, 926, 927, 928, 929, 
	930, 931, 932, 933, 934, 935, 936, 937, 
	938, 939, 940, 945, 956, 957, 960, 966, 
	990, 1001, 1003, 1006, 1014, 1018, 1023, 1024, 
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1037, 
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 
	1046, 1047, 1048, 1049, 1050, 1051, 1056, 1057, 
	1058, 1075, 1092, 1108, 1124, 1125, 1135, 1145, 
	1161, 1177, 1178, 1188, 1198, 1199, 1200, 1210, 
	1213, 1215, 1225, 1228, 1230, 1240, 1243, 1245, 
	1255, 1258, 1260, 1270, 1273, 1275, 1282, 1288, 
	1294, 1298, 1301, 1305, 1310, 1311, 1312, 1315, 
	1316, 1319, 1324, 1325, 1328, 1333, 1340, 1346, 
	1356, 1363, 1369, 1373, 1378, 1379, 1380, 1383, 
	1384, 1387, 1392, 1393, 1396, 1401, 1408, 1414, 
	1424, 1431, 1437, 1441, 1446, 1447, 1448, 1451, 
	1452, 1455, 1460, 1461, 1464, 1469, 1476, 1482, 
	1492, 1499, 1505, 1509, 1514, 1515, 1516, 1519, 
	1520, 1523, 1528, 1529, 1532, 1537, 1544, 1550, 
	1560, 1567, 1573, 1577, 1582, 1583, 1584, 1587, 
	1588, 1591, 1596, 1597, 1600, 1605, 1606, 1618, 
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 
	1627, 1628, 1629, 1630, 1631, 1655, 1656, 1666, 
	1690, 1691, 1701, 1712, 1723, 1724, 1727, 1733, 
	1757, 1768, 1770, 1773, 1781, 1785, 1790, 1791, 
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1804, 
	1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 
	1813, 1814, 1815, 1816, 1817, 1818, 1823, 1824, 
	1825, 1826, 1827, 1836, 1838, 1841, 1857, 1858, 
	1868, 1884, 1900, 1901, 1911, 1912, 1913, 1914, 
	1915, 1916, 1921, 1922, 1923, 1924, 1925, 1926, 
	1927, 1928, 1936, 1938, 1940, 1943, 1943, 1945, 
	1945, 1946, 1947, 1948, 1951, 1954, 1957, 1960, 
	1962, 1962, 1963, 1964, 1965, 1967, 1969, 1969, 
	1970, 1971, 1972, 1975, 1980, 1984, 1987, 1991, 
	1996, 2001, 2004, 2008, 2012, 2016, 2022, 2026, 
	2032, 2034, 2035, 2035, 2036, 2036, 2039, 2040, 
	2040, 2040, 2041, 2042, 2043, 2043, 2044, 2044, 
	2045, 2046, 2046, 2047, 2047, 2051, 2054, 2078, 
	2081, 2084, 2089, 2094, 2099, 2102, 2106, 2110, 
	2114, 2120, 2123, 2127, 2131, 2135, 2140, 2145, 
	2150, 2153, 2157, 2161, 2165, 2171, 2174, 2178, 
	2182, 2186, 2189, 2193, 2198, 2200, 2203, 2215, 
	2218, 2221, 2227, 2242, 2245, 2262, 2265, 2271, 
	2277, 2283, 2289, 2295, 2298, 2304, 2310, 2313, 
	2315, 2317, 2319, 2325, 2331, 2334, 2339, 2344, 
	2349, 2355, 2361, 2364, 2369, 2374, 2379, 2385, 
	2391, 2394, 2399, 2404, 2409, 2415, 2421, 2424, 
	2429, 2434, 2439, 2442, 2445, 2448, 2452, 2456, 
	2460, 2463, 2467, 2470, 2470, 2475, 2480, 2485, 
	2488, 2492, 2496, 2500, 2506, 2509, 2513, 2517, 
	2521, 2524, 2528, 2537, 2546, 2550, 2553, 2557
]

class << self
	attr_accessor :_pokerbot_trans_keys
	private :_pokerbot_trans_keys, :_pokerbot_trans_keys=
end
self._pokerbot_trans_keys = [
	116, 101, 115, 116, 32, 97, 98, 99, 
	100, 102, 104, 115, 110, 116, 101, 32, 
	9, 13, 97, 32, 110, 9, 13, 32, 
	9, 13, 48, 57, 116, 101, 32, 9, 
	13, 105, 108, 103, 95, 98, 108, 105, 
	110, 100, 32, 9, 13, 98, 98, 32, 
	9, 13, 32, 9, 13, 48, 57, 105, 
	110, 100, 115, 32, 9, 13, 48, 57, 
	47, 48, 57, 48, 57, 97, 114, 100, 
	32, 9, 13, 49, 65, 81, 88, 97, 
	113, 120, 50, 57, 74, 75, 106, 107, 
	48, 72, 83, 88, 104, 115, 120, 67, 
	68, 99, 100, 101, 102, 97, 117, 108, 
	116, 95, 97, 99, 116, 105, 111, 110, 
	32, 9, 13, 97, 99, 102, 109, 108, 
	108, 32, 9, 13, 32, 99, 102, 109, 
	9, 13, 108, 108, 99, 107, 108, 100, 
	108, 111, 112, 45, 99, 97, 114, 100, 
	115, 32, 9, 13, 49, 65, 81, 88, 
	97, 113, 120, 50, 57, 74, 75, 106, 
	107, 48, 72, 83, 88, 104, 115, 120, 
	67, 68, 99, 100, 32, 49, 65, 81, 
	88, 97, 113, 120, 9, 13, 50, 57, 
	74, 75, 106, 107, 32, 49, 65, 81, 
	88, 97, 113, 120, 9, 13, 50, 57, 
	74, 75, 106, 107, 48, 72, 83, 88, 
	104, 115, 120, 67, 68, 99, 100, 32, 
	49, 65, 81, 88, 97, 113, 120, 9, 
	13, 50, 57, 74, 75, 106, 107, 32, 
	49, 65, 81, 88, 97, 113, 120, 9, 
	13, 50, 57, 74, 75, 106, 107, 48, 
	72, 83, 88, 104, 115, 120, 67, 68, 
	99, 100, 111, 108, 101, 45, 99, 97, 
	114, 100, 115, 32, 9, 13, 49, 65, 
	81, 88, 97, 113, 120, 50, 57, 74, 
	75, 106, 107, 48, 72, 83, 88, 104, 
	115, 120, 67, 68, 99, 100, 32, 49, 
	65, 81, 88, 97, 113, 120, 9, 13, 
	50, 57, 74, 75, 106, 107, 32, 49, 
	65, 81, 88, 97, 113, 120, 9, 13, 
	50, 57, 74, 75, 106, 107, 48, 72, 
	83, 88, 104, 115, 120, 67, 68, 99, 
	100, 101, 109, 116, 97, 116, 95, 97, 
	99, 116, 105, 111, 110, 32, 115, 9, 
	13, 97, 98, 99, 102, 104, 108, 109, 
	115, 117, 108, 108, 32, 9, 13, 32, 
	99, 102, 109, 9, 13, 108, 108, 99, 
	107, 108, 100, 98, 116, 32, 9, 13, 
	32, 98, 99, 102, 109, 114, 9, 13, 
	32, 101, 9, 13, 32, 9, 13, 48, 
	57, 116, 32, 9, 13, 108, 108, 99, 
	107, 108, 100, 32, 97, 9, 13, 105, 
	115, 101, 110, 106, 98, 116, 103, 32, 
	9, 13, 49, 51, 32, 9, 13, 97, 
	98, 99, 102, 104, 108, 109, 115, 117, 
	108, 108, 32, 9, 13, 32, 99, 102, 
	109, 9, 13, 32, 97, 98, 99, 102, 
	104, 108, 109, 115, 117, 9, 13, 108, 
	108, 32, 9, 13, 32, 99, 102, 109, 
	9, 13, 108, 100, 99, 107, 98, 116, 
	32, 9, 13, 32, 98, 99, 102, 109, 
	114, 9, 13, 32, 101, 9, 13, 32, 
	9, 13, 48, 57, 116, 32, 9, 13, 
	108, 108, 99, 107, 108, 100, 32, 97, 
	9, 13, 105, 115, 101, 110, 108, 108, 
	106, 98, 116, 103, 32, 9, 13, 49, 
	51, 98, 116, 32, 9, 13, 32, 98, 
	99, 102, 109, 114, 9, 13, 32, 101, 
	9, 13, 32, 9, 13, 48, 57, 116, 
	32, 9, 13, 32, 97, 9, 13, 105, 
	115, 101, 110, 106, 98, 116, 103, 32, 
	9, 13, 49, 51, 97, 108, 108, 95, 
	98, 108, 105, 110, 100, 32, 9, 13, 
	115, 98, 32, 9, 13, 32, 9, 13, 
	48, 57, 97, 116, 117, 115, 32, 9, 
	13, 102, 104, 110, 112, 114, 115, 116, 
	111, 112, 114, 111, 119, 104, 116, 97, 
	110, 100, 111, 117, 114, 110, 101, 121, 
	101, 108, 111, 112, 118, 101, 114, 104, 
	119, 111, 119, 110, 114, 110, 32, 49, 
	65, 81, 88, 97, 98, 99, 102, 104, 
	108, 109, 113, 115, 117, 120, 9, 13, 
	50, 57, 74, 75, 106, 107, 48, 72, 
	83, 88, 104, 115, 120, 67, 68, 99, 
	100, 32, 49, 65, 81, 88, 97, 113, 
	120, 9, 13, 50, 57, 74, 75, 106, 
	107, 32, 49, 65, 81, 88, 97, 113, 
	120, 9, 13, 50, 57, 74, 75, 106, 
	107, 48, 72, 83, 88, 104, 115, 120, 
	67, 68, 99, 100, 32, 49, 65, 81, 
	88, 97, 113, 120, 9, 13, 50, 57, 
	74, 75, 106, 107, 32, 49, 65, 81, 
	88, 97, 113, 120, 9, 13, 50, 57, 
	74, 75, 106, 107, 48, 72, 83, 88, 
	104, 115, 120, 67, 68, 99, 100, 48, 
	72, 83, 88, 104, 115, 120, 67, 68, 
	99, 100, 32, 49, 65, 81, 88, 97, 
	113, 120, 9, 13, 50, 57, 74, 75, 
	106, 107, 32, 49, 65, 81, 88, 97, 
	113, 120, 9, 13, 50, 57, 74, 75, 
	106, 107, 48, 72, 83, 88, 104, 115, 
	120, 67, 68, 99, 100, 32, 49, 65, 
	81, 88, 97, 113, 120, 9, 13, 50, 
	57, 74, 75, 106, 107, 32, 49, 65, 
	81, 88, 97, 113, 120, 9, 13, 50, 
	57, 74, 75, 106, 107, 48, 72, 83, 
	88, 104, 115, 120, 67, 68, 99, 100, 
	72, 83, 88, 104, 108, 115, 120, 67, 
	68, 99, 100, 108, 32, 9, 13, 32, 
	99, 102, 109, 9, 13, 32, 97, 98, 
	99, 102, 104, 108, 109, 115, 117, 9, 
	13, 108, 98, 116, 32, 9, 13, 32, 
	98, 99, 102, 109, 114, 9, 13, 32, 
	101, 9, 13, 32, 9, 13, 48, 57, 
	116, 32, 9, 13, 108, 108, 99, 107, 
	108, 100, 32, 97, 9, 13, 105, 115, 
	101, 110, 108, 108, 99, 107, 108, 100, 
	106, 98, 116, 103, 32, 9, 13, 49, 
	51, 72, 83, 88, 104, 108, 115, 120, 
	67, 68, 99, 100, 108, 32, 9, 13, 
	32, 99, 102, 109, 9, 13, 32, 49, 
	65, 81, 88, 97, 98, 99, 102, 104, 
	108, 109, 113, 115, 117, 120, 9, 13, 
	50, 57, 74, 75, 106, 107, 72, 83, 
	88, 104, 108, 115, 120, 67, 68, 99, 
	100, 98, 116, 32, 9, 13, 32, 98, 
	99, 102, 109, 114, 9, 13, 32, 101, 
	9, 13, 32, 9, 13, 48, 57, 116, 
	32, 9, 13, 108, 108, 99, 107, 108, 
	100, 32, 97, 9, 13, 105, 115, 101, 
	110, 108, 108, 99, 107, 108, 100, 106, 
	98, 116, 103, 32, 9, 13, 49, 51, 
	111, 112, 32, 48, 49, 65, 81, 88, 
	97, 113, 120, 9, 13, 50, 57, 74, 
	75, 106, 107, 32, 48, 49, 65, 81, 
	88, 97, 113, 120, 9, 13, 50, 57, 
	74, 75, 106, 107, 32, 49, 65, 81, 
	88, 97, 113, 120, 9, 13, 50, 57, 
	74, 75, 106, 107, 32, 49, 65, 81, 
	88, 97, 113, 120, 9, 13, 50, 57, 
	74, 75, 106, 107, 48, 72, 83, 88, 
	104, 115, 120, 67, 68, 99, 100, 72, 
	83, 88, 104, 115, 120, 67, 68, 99, 
	100, 32, 49, 65, 81, 88, 97, 113, 
	120, 9, 13, 50, 57, 74, 75, 106, 
	107, 32, 49, 65, 81, 88, 97, 113, 
	120, 9, 13, 50, 57, 74, 75, 106, 
	107, 48, 72, 83, 88, 104, 115, 120, 
	67, 68, 99, 100, 72, 83, 88, 104, 
	115, 120, 67, 68, 99, 100, 114, 111, 
	32, 48, 49, 97, 98, 115, 9, 13, 
	50, 57, 47, 48, 57, 48, 57, 32, 
	48, 49, 97, 98, 115, 9, 13, 50, 
	57, 47, 48, 57, 48, 57, 32, 48, 
	49, 97, 98, 115, 9, 13, 50, 57, 
	47, 48, 57, 48, 57, 32, 48, 49, 
	97, 98, 115, 9, 13, 50, 57, 47, 
	48, 57, 48, 57, 32, 48, 49, 97, 
	98, 115, 9, 13, 50, 57, 47, 48, 
	57, 48, 57, 47, 48, 98, 104, 112, 
	49, 57, 47, 98, 104, 112, 48, 57, 
	32, 49, 9, 13, 50, 57, 48, 98, 
	104, 112, 98, 104, 112, 32, 110, 9, 
	13, 32, 9, 13, 48, 57, 116, 101, 
	32, 9, 13, 98, 32, 9, 13, 32, 
	9, 13, 48, 57, 98, 32, 9, 13, 
	32, 9, 13, 48, 57, 47, 48, 98, 
	104, 112, 49, 57, 47, 98, 104, 112, 
	48, 57, 32, 48, 49, 97, 98, 115, 
	9, 13, 50, 57, 47, 48, 98, 104, 
	112, 49, 57, 47, 98, 104, 112, 48, 
	57, 32, 110, 9, 13, 32, 9, 13, 
	48, 57, 116, 101, 32, 9, 13, 98, 
	32, 9, 13, 32, 9, 13, 48, 57, 
	98, 32, 9, 13, 32, 9, 13, 48, 
	57, 47, 48, 98, 104, 112, 49, 57, 
	47, 98, 104, 112, 48, 57, 32, 48, 
	49, 97, 98, 115, 9, 13, 50, 57, 
	47, 48, 98, 104, 112, 49, 57, 47, 
	98, 104, 112, 48, 57, 32, 110, 9, 
	13, 32, 9, 13, 48, 57, 116, 101, 
	32, 9, 13, 98, 32, 9, 13, 32, 
	9, 13, 48, 57, 98, 32, 9, 13, 
	32, 9, 13, 48, 57, 47, 48, 98, 
	104, 112, 49, 57, 47, 98, 104, 112, 
	48, 57, 32, 48, 49, 97, 98, 115, 
	9, 13, 50, 57, 47, 48, 98, 104, 
	112, 49, 57, 47, 98, 104, 112, 48, 
	57, 32, 110, 9, 13, 32, 9, 13, 
	48, 57, 116, 101, 32, 9, 13, 98, 
	32, 9, 13, 32, 9, 13, 48, 57, 
	98, 32, 9, 13, 32, 9, 13, 48, 
	57, 47, 48, 98, 104, 112, 49, 57, 
	47, 98, 104, 112, 48, 57, 32, 48, 
	49, 97, 98, 115, 9, 13, 50, 57, 
	47, 48, 98, 104, 112, 49, 57, 47, 
	98, 104, 112, 48, 57, 32, 110, 9, 
	13, 32, 9, 13, 48, 57, 116, 101, 
	32, 9, 13, 98, 32, 9, 13, 32, 
	9, 13, 48, 57, 98, 32, 9, 13, 
	32, 9, 13, 48, 57, 119, 32, 48, 
	49, 97, 98, 104, 115, 116, 9, 13, 
	50, 57, 97, 110, 100, 111, 117, 114, 
	110, 101, 121, 101, 108, 111, 112, 32, 
	49, 65, 81, 88, 97, 98, 99, 102, 
	104, 108, 109, 113, 115, 117, 120, 9, 
	13, 50, 57, 74, 75, 106, 107, 48, 
	72, 83, 88, 104, 115, 120, 67, 68, 
	99, 100, 32, 49, 65, 81, 88, 97, 
	98, 99, 102, 104, 108, 109, 113, 115, 
	117, 120, 9, 13, 50, 57, 74, 75, 
	106, 107, 48, 72, 83, 88, 104, 115, 
	120, 67, 68, 99, 100, 72, 83, 88, 
	104, 108, 115, 120, 67, 68, 99, 100, 
	72, 83, 88, 104, 108, 115, 120, 67, 
	68, 99, 100, 108, 32, 9, 13, 32, 
	99, 102, 109, 9, 13, 32, 49, 65, 
	81, 88, 97, 98, 99, 102, 104, 108, 
	109, 113, 115, 117, 120, 9, 13, 50, 
	57, 74, 75, 106, 107, 72, 83, 88, 
	104, 108, 115, 120, 67, 68, 99, 100, 
	98, 116, 32, 9, 13, 32, 98, 99, 
	102, 109, 114, 9, 13, 32, 101, 9, 
	13, 32, 9, 13, 48, 57, 116, 32, 
	9, 13, 108, 108, 99, 107, 108, 100, 
	32, 97, 9, 13, 105, 115, 101, 110, 
	108, 108, 99, 107, 108, 100, 106, 98, 
	116, 103, 32, 9, 13, 49, 51, 118, 
	101, 114, 104, 32, 98, 99, 104, 108, 
	115, 117, 9, 13, 98, 116, 32, 9, 
	13, 32, 49, 65, 81, 88, 97, 113, 
	120, 9, 13, 50, 57, 74, 75, 106, 
	107, 48, 72, 83, 88, 104, 115, 120, 
	67, 68, 99, 100, 32, 49, 65, 81, 
	88, 97, 113, 120, 9, 13, 50, 57, 
	74, 75, 106, 107, 32, 49, 65, 81, 
	88, 97, 113, 120, 9, 13, 50, 57, 
	74, 75, 106, 107, 48, 72, 83, 88, 
	104, 115, 120, 67, 68, 99, 100, 111, 
	106, 98, 116, 103, 32, 9, 13, 49, 
	51, 110, 119, 111, 119, 110, 114, 110, 
	46, 102, 104, 110, 112, 114, 115, 116, 
	48, 57, 48, 57, 47, 48, 57, 97, 
	104, 101, 111, 117, 32, 9, 13, 32, 
	9, 13, 32, 9, 13, 32, 9, 13, 
	97, 104, 101, 111, 117, 48, 57, 97, 
	104, 101, 111, 117, 97, 104, 111, 32, 
	97, 104, 9, 13, 32, 111, 9, 13, 
	32, 9, 13, 32, 117, 9, 13, 32, 
	9, 13, 48, 57, 32, 97, 104, 9, 
	13, 32, 9, 13, 32, 101, 9, 13, 
	32, 111, 9, 13, 32, 117, 9, 13, 
	32, 97, 104, 111, 9, 13, 32, 101, 
	9, 13, 32, 97, 104, 111, 9, 13, 
	48, 57, 108, 101, 101, 104, 116, 32, 
	116, 114, 102, 105, 111, 100, 117, 32, 
	108, 9, 13, 32, 9, 13, 32, 49, 
	65, 81, 88, 97, 98, 99, 102, 104, 
	108, 109, 113, 115, 117, 120, 9, 13, 
	50, 57, 74, 75, 106, 107, 32, 9, 
	13, 32, 9, 13, 32, 97, 104, 9, 
	13, 32, 9, 13, 48, 57, 32, 97, 
	104, 9, 13, 32, 9, 13, 32, 101, 
	9, 13, 32, 111, 9, 13, 32, 117, 
	9, 13, 32, 97, 104, 111, 9, 13, 
	32, 9, 13, 32, 101, 9, 13, 32, 
	111, 9, 13, 32, 117, 9, 13, 32, 
	97, 104, 9, 13, 32, 9, 13, 48, 
	57, 32, 97, 104, 9, 13, 32, 9, 
	13, 32, 101, 9, 13, 32, 111, 9, 
	13, 32, 117, 9, 13, 32, 97, 104, 
	111, 9, 13, 32, 9, 13, 32, 101, 
	9, 13, 32, 111, 9, 13, 32, 117, 
	9, 13, 32, 9, 13, 32, 101, 9, 
	13, 32, 9, 13, 48, 57, 48, 57, 
	48, 49, 57, 72, 83, 88, 104, 115, 
	120, 48, 57, 67, 68, 99, 100, 32, 
	9, 13, 32, 9, 13, 32, 48, 9, 
	13, 49, 57, 32, 72, 83, 88, 104, 
	115, 120, 9, 13, 48, 57, 67, 68, 
	99, 100, 32, 9, 13, 32, 48, 49, 
	65, 81, 88, 97, 113, 120, 9, 13, 
	50, 57, 74, 75, 106, 107, 32, 9, 
	13, 32, 101, 104, 116, 9, 13, 32, 
	47, 9, 13, 48, 57, 32, 47, 9, 
	13, 48, 57, 32, 47, 9, 13, 48, 
	57, 32, 47, 9, 13, 48, 57, 47, 
	48, 57, 32, 98, 104, 112, 9, 13, 
	32, 98, 104, 112, 9, 13, 32, 9, 
	13, 48, 57, 48, 57, 48, 57, 32, 
	98, 104, 112, 9, 13, 32, 98, 104, 
	112, 9, 13, 32, 9, 13, 32, 9, 
	13, 48, 57, 32, 9, 13, 48, 57, 
	32, 9, 13, 48, 57, 32, 98, 104, 
	112, 9, 13, 32, 98, 104, 112, 9, 
	13, 32, 9, 13, 32, 9, 13, 48, 
	57, 32, 9, 13, 48, 57, 32, 9, 
	13, 48, 57, 32, 98, 104, 112, 9, 
	13, 32, 98, 104, 112, 9, 13, 32, 
	9, 13, 32, 9, 13, 48, 57, 32, 
	9, 13, 48, 57, 32, 9, 13, 48, 
	57, 32, 98, 104, 112, 9, 13, 32, 
	98, 104, 112, 9, 13, 32, 9, 13, 
	32, 9, 13, 48, 57, 32, 9, 13, 
	48, 57, 32, 9, 13, 48, 57, 32, 
	9, 13, 32, 9, 13, 32, 9, 13, 
	32, 116, 9, 13, 32, 114, 9, 13, 
	32, 102, 9, 13, 32, 9, 13, 32, 
	105, 9, 13, 32, 9, 13, 32, 97, 
	104, 9, 13, 32, 9, 13, 48, 57, 
	32, 97, 104, 9, 13, 32, 9, 13, 
	32, 101, 9, 13, 32, 111, 9, 13, 
	32, 117, 9, 13, 32, 97, 104, 111, 
	9, 13, 32, 9, 13, 32, 101, 9, 
	13, 32, 111, 9, 13, 32, 117, 9, 
	13, 32, 9, 13, 32, 111, 9, 13, 
	32, 98, 99, 104, 108, 115, 117, 9, 
	13, 32, 98, 99, 104, 108, 115, 117, 
	9, 13, 32, 100, 9, 13, 32, 9, 
	13, 32, 117, 9, 13, 32, 9, 13, 
	0
]

class << self
	attr_accessor :_pokerbot_single_lengths
	private :_pokerbot_single_lengths, :_pokerbot_single_lengths=
end
self._pokerbot_single_lengths = [
	0, 1, 1, 1, 1, 1, 7, 1, 
	1, 1, 1, 1, 2, 1, 1, 1, 
	1, 2, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 1, 0, 1, 1, 
	1, 1, 7, 1, 6, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 4, 1, 1, 1, 4, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	7, 1, 6, 8, 8, 1, 6, 8, 
	8, 1, 6, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 7, 1, 6, 
	8, 8, 1, 6, 3, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 2, 9, 
	1, 1, 1, 4, 1, 1, 1, 1, 
	1, 1, 2, 1, 6, 2, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 9, 1, 1, 1, 4, 10, 
	1, 1, 1, 4, 1, 1, 1, 1, 
	2, 1, 6, 2, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 2, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 6, 2, 1, 1, 1, 
	2, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 7, 1, 1, 
	1, 1, 1, 2, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 16, 1, 6, 8, 8, 
	1, 6, 8, 8, 1, 6, 1, 6, 
	8, 8, 1, 6, 8, 8, 1, 6, 
	7, 1, 1, 4, 10, 1, 2, 1, 
	6, 2, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 2, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 7, 1, 1, 4, 16, 
	7, 2, 1, 6, 2, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 2, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	9, 9, 8, 8, 1, 6, 6, 8, 
	8, 1, 6, 6, 1, 1, 6, 1, 
	0, 6, 1, 0, 6, 1, 0, 6, 
	1, 0, 6, 1, 0, 5, 4, 2, 
	4, 3, 2, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 5, 4, 6, 
	5, 4, 2, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 5, 4, 6, 
	5, 4, 2, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 5, 4, 6, 
	5, 4, 2, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 5, 4, 6, 
	5, 4, 2, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 8, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 16, 1, 6, 16, 
	1, 6, 7, 7, 1, 1, 4, 16, 
	7, 2, 1, 6, 2, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 2, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 7, 2, 1, 8, 1, 6, 
	8, 8, 1, 6, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 8, 0, 0, 1, 0, 2, 0, 
	1, 1, 1, 1, 1, 1, 1, 2, 
	0, 1, 1, 1, 0, 2, 0, 1, 
	1, 1, 3, 3, 2, 1, 2, 1, 
	3, 1, 2, 2, 2, 4, 2, 4, 
	0, 1, 0, 1, 0, 3, 1, 0, 
	0, 1, 1, 1, 0, 1, 0, 1, 
	1, 0, 1, 0, 2, 1, 16, 1, 
	1, 3, 1, 3, 1, 2, 2, 2, 
	4, 1, 2, 2, 2, 3, 1, 3, 
	1, 2, 2, 2, 4, 1, 2, 2, 
	2, 1, 2, 1, 0, 1, 6, 1, 
	1, 2, 7, 1, 9, 1, 4, 2, 
	2, 2, 2, 1, 4, 4, 1, 0, 
	0, 0, 4, 4, 1, 1, 1, 1, 
	4, 4, 1, 1, 1, 1, 4, 4, 
	1, 1, 1, 1, 4, 4, 1, 1, 
	1, 1, 1, 1, 1, 2, 2, 2, 
	1, 2, 1, 0, 3, 1, 3, 1, 
	2, 2, 2, 4, 1, 2, 2, 2, 
	1, 2, 7, 7, 2, 1, 2, 1
]

class << self
	attr_accessor :_pokerbot_range_lengths
	private :_pokerbot_range_lengths, :_pokerbot_range_lengths=
end
self._pokerbot_range_lengths = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 0, 1, 2, 0, 0, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 0, 0, 1, 2, 0, 0, 
	0, 0, 1, 1, 1, 1, 0, 0, 
	0, 1, 3, 0, 2, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 0, 0, 0, 1, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	3, 0, 2, 4, 4, 0, 2, 4, 
	4, 0, 2, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 3, 0, 2, 
	4, 4, 0, 2, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 1, 1, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 1, 2, 0, 
	1, 0, 0, 0, 0, 0, 0, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	2, 1, 0, 0, 0, 1, 1, 1, 
	0, 0, 1, 1, 0, 0, 0, 0, 
	0, 1, 1, 1, 2, 0, 1, 0, 
	0, 0, 0, 0, 0, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	2, 0, 1, 1, 1, 2, 0, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 2, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 0, 0, 1, 2, 
	0, 0, 0, 0, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 4, 0, 2, 4, 4, 
	0, 2, 4, 4, 0, 2, 0, 2, 
	4, 4, 0, 2, 4, 4, 0, 2, 
	2, 0, 1, 1, 1, 0, 0, 1, 
	1, 1, 2, 0, 1, 0, 0, 0, 
	0, 0, 0, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 2, 2, 0, 1, 1, 4, 
	2, 0, 1, 1, 1, 2, 0, 1, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 2, 0, 0, 
	4, 4, 4, 4, 0, 2, 2, 4, 
	4, 0, 2, 2, 0, 0, 2, 1, 
	1, 2, 1, 1, 2, 1, 1, 2, 
	1, 1, 2, 1, 1, 1, 1, 2, 
	0, 0, 1, 2, 0, 0, 1, 0, 
	1, 2, 0, 1, 2, 1, 1, 2, 
	1, 1, 1, 2, 0, 0, 1, 0, 
	1, 2, 0, 1, 2, 1, 1, 2, 
	1, 1, 1, 2, 0, 0, 1, 0, 
	1, 2, 0, 1, 2, 1, 1, 2, 
	1, 1, 1, 2, 0, 0, 1, 0, 
	1, 2, 0, 1, 2, 1, 1, 2, 
	1, 1, 1, 2, 0, 0, 1, 0, 
	1, 2, 0, 1, 2, 0, 2, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 4, 0, 2, 4, 
	0, 2, 2, 2, 0, 1, 1, 4, 
	2, 0, 1, 1, 1, 2, 0, 1, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 2, 0, 0, 
	0, 0, 1, 0, 1, 4, 0, 2, 
	4, 4, 0, 2, 0, 0, 0, 0, 
	0, 2, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 1, 1, 0, 0, 0, 
	0, 0, 0, 1, 1, 1, 1, 0, 
	0, 0, 0, 0, 1, 0, 0, 0, 
	0, 0, 0, 1, 1, 1, 1, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 1, 4, 1, 
	1, 1, 2, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 2, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 2, 1, 1, 3, 1, 
	1, 2, 4, 1, 4, 1, 1, 2, 
	2, 2, 2, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 2, 2, 2, 
	1, 1, 1, 2, 2, 2, 1, 1, 
	1, 2, 2, 2, 1, 1, 1, 2, 
	2, 2, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 1, 2, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1
]

class << self
	attr_accessor :_pokerbot_index_offsets
	private :_pokerbot_index_offsets, :_pokerbot_index_offsets=
end
self._pokerbot_index_offsets = [
	0, 0, 2, 4, 6, 8, 10, 18, 
	20, 22, 24, 27, 29, 33, 37, 39, 
	41, 44, 47, 49, 51, 53, 55, 57, 
	59, 61, 64, 66, 68, 71, 75, 77, 
	79, 81, 83, 86, 88, 91, 93, 95, 
	97, 99, 102, 113, 115, 124, 126, 128, 
	130, 132, 134, 136, 138, 140, 142, 144, 
	146, 148, 150, 153, 158, 160, 162, 165, 
	171, 173, 175, 177, 179, 181, 183, 185, 
	187, 189, 191, 193, 195, 197, 199, 201, 
	204, 215, 217, 226, 239, 252, 254, 263, 
	276, 289, 291, 300, 302, 304, 306, 308, 
	310, 312, 314, 316, 318, 321, 332, 334, 
	343, 356, 369, 371, 380, 384, 386, 388, 
	390, 392, 394, 396, 398, 400, 402, 406, 
	416, 418, 420, 423, 429, 431, 433, 435, 
	437, 439, 441, 444, 447, 455, 459, 463, 
	465, 468, 470, 472, 474, 476, 478, 480, 
	484, 486, 488, 490, 492, 494, 496, 498, 
	500, 504, 507, 517, 519, 521, 524, 530, 
	542, 544, 546, 549, 555, 557, 559, 561, 
	563, 566, 569, 577, 581, 585, 587, 590, 
	592, 594, 596, 598, 600, 602, 606, 608, 
	610, 612, 614, 616, 618, 620, 622, 624, 
	626, 630, 633, 636, 644, 648, 652, 654, 
	657, 661, 663, 665, 667, 669, 671, 673, 
	675, 677, 681, 683, 685, 687, 689, 691, 
	693, 695, 697, 699, 702, 704, 706, 709, 
	713, 715, 717, 719, 721, 724, 732, 734, 
	736, 738, 740, 742, 745, 747, 749, 751, 
	753, 755, 757, 759, 761, 763, 765, 767, 
	769, 771, 773, 775, 777, 779, 781, 783, 
	785, 787, 789, 791, 812, 814, 823, 836, 
	849, 851, 860, 873, 886, 888, 897, 899, 
	908, 921, 934, 936, 945, 958, 971, 973, 
	982, 992, 994, 997, 1003, 1015, 1017, 1020, 
	1023, 1031, 1035, 1039, 1041, 1044, 1046, 1048, 
	1050, 1052, 1054, 1056, 1060, 1062, 1064, 1066, 
	1068, 1070, 1072, 1074, 1076, 1078, 1080, 1082, 
	1084, 1086, 1088, 1092, 1102, 1104, 1107, 1113, 
	1134, 1144, 1147, 1150, 1158, 1162, 1166, 1168, 
	1171, 1173, 1175, 1177, 1179, 1181, 1183, 1187, 
	1189, 1191, 1193, 1195, 1197, 1199, 1201, 1203, 
	1205, 1207, 1209, 1211, 1213, 1215, 1219, 1221, 
	1223, 1237, 1251, 1264, 1277, 1279, 1288, 1297, 
	1310, 1323, 1325, 1334, 1343, 1345, 1347, 1356, 
	1359, 1361, 1370, 1373, 1375, 1384, 1387, 1389, 
	1398, 1401, 1403, 1412, 1415, 1417, 1424, 1430, 
	1435, 1440, 1444, 1448, 1452, 1454, 1456, 1459, 
	1461, 1464, 1468, 1470, 1473, 1477, 1484, 1490, 
	1499, 1506, 1512, 1516, 1520, 1522, 1524, 1527, 
	1529, 1532, 1536, 1538, 1541, 1545, 1552, 1558, 
	1567, 1574, 1580, 1584, 1588, 1590, 1592, 1595, 
	1597, 1600, 1604, 1606, 1609, 1613, 1620, 1626, 
	1635, 1642, 1648, 1652, 1656, 1658, 1660, 1663, 
	1665, 1668, 1672, 1674, 1677, 1681, 1688, 1694, 
	1703, 1710, 1716, 1720, 1724, 1726, 1728, 1731, 
	1733, 1736, 1740, 1742, 1745, 1749, 1751, 1762, 
	1764, 1766, 1768, 1770, 1772, 1774, 1776, 1778, 
	1780, 1782, 1784, 1786, 1788, 1809, 1811, 1820, 
	1841, 1843, 1852, 1862, 1872, 1874, 1877, 1883, 
	1904, 1914, 1917, 1920, 1928, 1932, 1936, 1938, 
	1941, 1943, 1945, 1947, 1949, 1951, 1953, 1957, 
	1959, 1961, 1963, 1965, 1967, 1969, 1971, 1973, 
	1975, 1977, 1979, 1981, 1983, 1985, 1989, 1991, 
	1993, 1995, 1997, 2006, 2009, 2012, 2025, 2027, 
	2036, 2049, 2062, 2064, 2073, 2075, 2077, 2079, 
	2081, 2083, 2087, 2089, 2091, 2093, 2095, 2097, 
	2099, 2101, 2110, 2112, 2114, 2117, 2118, 2121, 
	2122, 2124, 2126, 2128, 2131, 2134, 2137, 2140, 
	2143, 2144, 2146, 2148, 2150, 2152, 2155, 2156, 
	2158, 2160, 2162, 2166, 2171, 2175, 2178, 2182, 
	2186, 2191, 2194, 2198, 2202, 2206, 2212, 2216, 
	2222, 2224, 2226, 2227, 2229, 2230, 2234, 2236, 
	2237, 2238, 2240, 2242, 2244, 2245, 2247, 2248, 
	2250, 2252, 2253, 2255, 2256, 2260, 2263, 2284, 
	2287, 2290, 2295, 2299, 2304, 2307, 2311, 2315, 
	2319, 2325, 2328, 2332, 2336, 2340, 2345, 2349, 
	2354, 2357, 2361, 2365, 2369, 2375, 2378, 2382, 
	2386, 2390, 2393, 2397, 2401, 2403, 2406, 2416, 
	2419, 2422, 2427, 2439, 2442, 2456, 2459, 2465, 
	2470, 2475, 2480, 2485, 2488, 2494, 2500, 2503, 
	2505, 2507, 2509, 2515, 2521, 2524, 2528, 2532, 
	2536, 2542, 2548, 2551, 2555, 2559, 2563, 2569, 
	2575, 2578, 2582, 2586, 2590, 2596, 2602, 2605, 
	2609, 2613, 2617, 2620, 2623, 2626, 2630, 2634, 
	2638, 2641, 2645, 2648, 2649, 2654, 2658, 2663, 
	2666, 2670, 2674, 2678, 2684, 2687, 2691, 2695, 
	2699, 2702, 2706, 2715, 2724, 2728, 2731, 2735
]

class << self
	attr_accessor :_pokerbot_indicies
	private :_pokerbot_indicies, :_pokerbot_indicies=
end
self._pokerbot_indicies = [
	0, 1, 2, 1, 3, 1, 4, 1, 
	5, 1, 6, 7, 8, 9, 10, 11, 
	12, 1, 13, 1, 14, 1, 15, 1, 
	16, 16, 1, 17, 1, 18, 19, 18, 
	1, 18, 18, 20, 1, 21, 1, 22, 
	1, 18, 18, 1, 23, 24, 1, 25, 
	1, 26, 1, 27, 1, 28, 1, 29, 
	1, 30, 1, 31, 1, 32, 32, 1, 
	33, 1, 34, 1, 35, 35, 1, 35, 
	35, 36, 1, 37, 1, 38, 1, 39, 
	1, 40, 1, 41, 41, 1, 42, 1, 
	43, 42, 1, 45, 44, 46, 1, 47, 
	1, 48, 1, 49, 49, 1, 50, 51, 
	51, 51, 51, 51, 51, 51, 51, 51, 
	1, 51, 1, 52, 52, 52, 52, 52, 
	52, 52, 52, 1, 53, 1, 54, 1, 
	55, 1, 56, 1, 57, 1, 58, 1, 
	59, 1, 60, 1, 61, 1, 62, 1, 
	63, 1, 64, 1, 65, 1, 66, 66, 
	1, 67, 68, 69, 70, 1, 71, 1, 
	72, 1, 73, 73, 1, 73, 68, 69, 
	70, 73, 1, 75, 74, 76, 74, 77, 
	74, 76, 74, 78, 74, 76, 74, 79, 
	1, 80, 1, 81, 1, 82, 1, 83, 
	1, 84, 1, 85, 1, 86, 1, 87, 
	1, 88, 88, 1, 89, 90, 90, 90, 
	90, 90, 90, 90, 90, 90, 1, 90, 
	1, 91, 91, 91, 91, 91, 91, 91, 
	91, 1, 92, 93, 94, 94, 94, 94, 
	94, 94, 92, 94, 94, 94, 1, 95, 
	96, 97, 97, 97, 97, 97, 97, 95, 
	97, 97, 97, 1, 97, 1, 98, 98, 
	98, 98, 98, 98, 98, 98, 1, 99, 
	100, 101, 101, 101, 101, 101, 101, 99, 
	101, 101, 101, 1, 102, 103, 104, 104, 
	104, 104, 104, 104, 102, 104, 104, 104, 
	1, 104, 1, 105, 105, 105, 105, 105, 
	105, 105, 105, 1, 106, 1, 107, 1, 
	108, 1, 109, 1, 110, 1, 111, 1, 
	112, 1, 113, 1, 114, 1, 115, 115, 
	1, 116, 117, 117, 117, 117, 117, 117, 
	117, 117, 117, 1, 117, 1, 118, 118, 
	118, 118, 118, 118, 118, 118, 1, 119, 
	120, 121, 121, 121, 121, 121, 121, 119, 
	121, 121, 121, 1, 122, 123, 124, 124, 
	124, 124, 124, 124, 122, 124, 124, 124, 
	1, 124, 1, 125, 125, 125, 125, 125, 
	125, 125, 125, 1, 126, 127, 128, 1, 
	129, 1, 130, 1, 131, 1, 132, 1, 
	133, 1, 134, 1, 135, 1, 136, 1, 
	137, 1, 138, 139, 138, 1, 140, 141, 
	142, 143, 144, 144, 145, 146, 147, 1, 
	148, 1, 149, 1, 150, 150, 1, 150, 
	151, 143, 145, 150, 1, 153, 152, 154, 
	152, 155, 152, 154, 152, 156, 152, 154, 
	152, 157, 158, 1, 159, 159, 44, 159, 
	160, 161, 162, 163, 164, 159, 44, 165, 
	166, 165, 44, 165, 165, 167, 44, 168, 
	44, 165, 165, 44, 169, 152, 170, 152, 
	171, 152, 170, 152, 172, 152, 170, 152, 
	165, 173, 165, 44, 174, 44, 175, 44, 
	168, 44, 157, 1, 157, 1, 157, 1, 
	176, 1, 177, 1, 159, 159, 157, 1, 
	178, 178, 1, 179, 180, 181, 182, 183, 
	183, 184, 185, 186, 1, 187, 1, 188, 
	1, 189, 189, 1, 189, 190, 182, 184, 
	189, 1, 192, 193, 194, 195, 182, 196, 
	196, 184, 197, 198, 192, 191, 199, 191, 
	200, 191, 201, 201, 191, 201, 190, 182, 
	184, 201, 191, 202, 191, 203, 191, 204, 
	191, 203, 191, 205, 206, 191, 207, 207, 
	191, 207, 208, 209, 210, 211, 212, 207, 
	191, 213, 214, 213, 191, 213, 213, 215, 
	191, 216, 191, 213, 213, 191, 217, 191, 
	218, 191, 219, 191, 218, 191, 220, 191, 
	218, 191, 213, 221, 213, 191, 222, 191, 
	223, 191, 216, 191, 205, 191, 224, 191, 
	203, 191, 205, 191, 205, 191, 225, 191, 
	226, 191, 207, 207, 205, 191, 227, 228, 
	1, 229, 229, 44, 229, 230, 209, 210, 
	211, 231, 229, 44, 232, 233, 232, 44, 
	232, 232, 215, 44, 234, 44, 232, 232, 
	44, 232, 235, 232, 44, 236, 44, 237, 
	44, 234, 44, 227, 1, 227, 1, 227, 
	1, 238, 1, 239, 1, 229, 229, 227, 
	1, 240, 1, 241, 1, 242, 1, 243, 
	1, 244, 1, 245, 1, 246, 1, 247, 
	1, 248, 1, 249, 249, 1, 250, 1, 
	251, 1, 252, 252, 1, 252, 252, 253, 
	1, 254, 1, 255, 1, 256, 1, 257, 
	1, 258, 258, 1, 259, 260, 261, 262, 
	263, 264, 265, 1, 267, 266, 268, 266, 
	269, 266, 270, 266, 271, 266, 272, 273, 
	266, 274, 266, 275, 266, 276, 266, 277, 
	266, 278, 266, 279, 266, 280, 266, 281, 
	266, 282, 266, 283, 266, 284, 266, 285, 
	266, 286, 266, 287, 266, 288, 266, 289, 
	266, 290, 1, 291, 266, 292, 266, 293, 
	266, 294, 266, 295, 266, 296, 266, 298, 
	299, 300, 300, 300, 301, 302, 303, 304, 
	305, 305, 306, 300, 307, 308, 300, 298, 
	300, 300, 300, 297, 300, 297, 309, 309, 
	309, 309, 309, 309, 309, 309, 297, 310, 
	311, 312, 312, 312, 312, 312, 312, 310, 
	312, 312, 312, 297, 313, 314, 315, 315, 
	315, 315, 315, 315, 313, 315, 315, 315, 
	297, 315, 297, 316, 316, 316, 316, 316, 
	316, 316, 316, 297, 317, 318, 319, 319, 
	319, 319, 319, 319, 317, 319, 319, 319, 
	297, 320, 321, 322, 322, 322, 322, 322, 
	322, 320, 322, 322, 322, 297, 322, 297, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	297, 324, 297, 325, 325, 325, 325, 325, 
	325, 325, 325, 297, 326, 327, 328, 328, 
	328, 328, 328, 328, 326, 328, 328, 328, 
	297, 329, 330, 331, 331, 331, 331, 331, 
	331, 329, 331, 331, 331, 297, 331, 297, 
	332, 332, 332, 332, 332, 332, 332, 332, 
	297, 333, 334, 335, 335, 335, 335, 335, 
	335, 333, 335, 335, 335, 297, 336, 337, 
	338, 338, 338, 338, 338, 338, 336, 338, 
	338, 338, 297, 338, 297, 339, 339, 339, 
	339, 339, 339, 339, 339, 297, 325, 325, 
	325, 325, 340, 325, 325, 325, 325, 297, 
	341, 297, 342, 342, 297, 342, 343, 344, 
	345, 342, 297, 346, 347, 348, 349, 344, 
	350, 350, 345, 351, 352, 346, 297, 340, 
	297, 353, 354, 297, 355, 355, 297, 355, 
	356, 357, 358, 359, 360, 355, 297, 361, 
	362, 361, 297, 361, 361, 363, 297, 364, 
	297, 361, 361, 297, 365, 297, 366, 297, 
	367, 297, 366, 297, 368, 297, 366, 297, 
	361, 369, 361, 297, 370, 297, 371, 297, 
	364, 297, 353, 297, 372, 297, 373, 297, 
	374, 297, 373, 297, 375, 297, 373, 297, 
	353, 297, 353, 297, 376, 297, 377, 297, 
	355, 355, 353, 297, 309, 309, 309, 309, 
	378, 309, 309, 309, 309, 297, 379, 297, 
	380, 380, 297, 380, 381, 304, 306, 380, 
	297, 382, 383, 324, 324, 324, 384, 302, 
	303, 304, 305, 305, 306, 324, 307, 308, 
	324, 382, 324, 324, 324, 297, 325, 325, 
	325, 325, 378, 325, 325, 325, 325, 297, 
	385, 386, 297, 387, 387, 297, 387, 388, 
	389, 390, 391, 392, 387, 297, 393, 394, 
	393, 297, 393, 393, 395, 297, 396, 297, 
	393, 393, 297, 397, 297, 398, 297, 399, 
	297, 398, 297, 400, 297, 398, 297, 393, 
	401, 393, 297, 402, 297, 403, 297, 396, 
	297, 385, 297, 404, 297, 405, 297, 406, 
	297, 405, 297, 407, 297, 405, 297, 385, 
	297, 385, 297, 408, 297, 409, 297, 387, 
	387, 385, 297, 410, 297, 411, 297, 412, 
	413, 414, 416, 416, 416, 416, 416, 416, 
	412, 415, 416, 416, 297, 417, 418, 419, 
	421, 421, 421, 421, 421, 421, 417, 420, 
	421, 421, 297, 422, 423, 424, 424, 424, 
	424, 424, 424, 422, 424, 424, 424, 297, 
	425, 426, 427, 427, 427, 427, 427, 427, 
	425, 427, 427, 427, 297, 427, 297, 428, 
	428, 428, 428, 428, 428, 428, 428, 297, 
	429, 429, 429, 429, 429, 429, 429, 429, 
	297, 430, 431, 432, 432, 432, 432, 432, 
	432, 430, 432, 432, 432, 297, 433, 434, 
	435, 435, 435, 435, 435, 435, 433, 435, 
	435, 435, 297, 435, 297, 436, 436, 436, 
	436, 436, 436, 436, 436, 297, 437, 437, 
	437, 437, 437, 437, 437, 437, 297, 438, 
	297, 439, 297, 440, 441, 442, 444, 445, 
	446, 440, 443, 297, 447, 441, 297, 448, 
	297, 449, 450, 451, 453, 454, 455, 449, 
	452, 297, 456, 450, 297, 457, 297, 458, 
	459, 460, 462, 463, 464, 458, 461, 297, 
	465, 459, 297, 466, 297, 467, 468, 469, 
	471, 472, 473, 467, 470, 297, 474, 468, 
	297, 475, 297, 476, 477, 478, 480, 481, 
	482, 476, 479, 297, 483, 477, 297, 484, 
	297, 483, 479, 485, 485, 485, 477, 297, 
	483, 485, 485, 485, 477, 297, 486, 487, 
	486, 488, 297, 488, 485, 485, 485, 297, 
	485, 485, 485, 297, 489, 490, 489, 297, 
	489, 489, 491, 297, 492, 297, 493, 297, 
	489, 489, 297, 494, 297, 495, 495, 297, 
	495, 495, 496, 297, 497, 297, 498, 498, 
	297, 498, 498, 499, 297, 474, 470, 500, 
	500, 500, 468, 297, 474, 500, 500, 500, 
	468, 297, 501, 477, 502, 480, 481, 482, 
	501, 503, 297, 483, 503, 500, 500, 500, 
	477, 297, 483, 500, 500, 500, 477, 297, 
	504, 505, 504, 297, 504, 504, 506, 297, 
	507, 297, 508, 297, 504, 504, 297, 509, 
	297, 510, 510, 297, 510, 510, 511, 297, 
	512, 297, 513, 513, 297, 513, 513, 514, 
	297, 465, 461, 515, 515, 515, 459, 297, 
	465, 515, 515, 515, 459, 297, 516, 468, 
	517, 471, 472, 473, 516, 518, 297, 474, 
	518, 515, 515, 515, 468, 297, 474, 515, 
	515, 515, 468, 297, 519, 520, 519, 297, 
	519, 519, 521, 297, 522, 297, 523, 297, 
	519, 519, 297, 524, 297, 525, 525, 297, 
	525, 525, 526, 297, 527, 297, 528, 528, 
	297, 528, 528, 529, 297, 456, 452, 530, 
	530, 530, 450, 297, 456, 530, 530, 530, 
	450, 297, 531, 459, 532, 462, 463, 464, 
	531, 533, 297, 465, 533, 530, 530, 530, 
	459, 297, 465, 530, 530, 530, 459, 297, 
	534, 535, 534, 297, 534, 534, 536, 297, 
	537, 297, 538, 297, 534, 534, 297, 539, 
	297, 540, 540, 297, 540, 540, 541, 297, 
	542, 297, 543, 543, 297, 543, 543, 544, 
	297, 447, 443, 545, 545, 545, 441, 297, 
	447, 545, 545, 545, 441, 297, 546, 450, 
	547, 453, 454, 455, 546, 548, 297, 456, 
	548, 545, 545, 545, 450, 297, 456, 545, 
	545, 545, 450, 297, 549, 550, 549, 297, 
	549, 549, 551, 297, 552, 297, 553, 297, 
	549, 549, 297, 554, 297, 555, 555, 297, 
	555, 555, 556, 297, 557, 297, 558, 558, 
	297, 558, 558, 559, 297, 560, 297, 440, 
	441, 442, 444, 445, 561, 446, 562, 440, 
	443, 297, 563, 297, 564, 297, 565, 297, 
	566, 297, 567, 297, 568, 297, 569, 297, 
	570, 297, 571, 297, 572, 297, 573, 297, 
	574, 297, 575, 297, 576, 577, 578, 578, 
	578, 579, 580, 581, 582, 583, 583, 584, 
	578, 585, 586, 578, 576, 578, 578, 578, 
	297, 578, 297, 587, 587, 587, 587, 587, 
	587, 587, 587, 297, 588, 589, 590, 590, 
	590, 591, 348, 349, 344, 350, 350, 345, 
	590, 351, 352, 590, 588, 590, 590, 590, 
	297, 590, 297, 592, 592, 592, 592, 592, 
	592, 592, 592, 297, 592, 592, 592, 592, 
	340, 592, 592, 592, 592, 297, 587, 587, 
	587, 587, 593, 587, 587, 587, 587, 297, 
	594, 297, 595, 595, 297, 595, 596, 582, 
	584, 595, 297, 597, 589, 590, 590, 590, 
	598, 580, 581, 582, 583, 583, 584, 590, 
	585, 586, 590, 597, 590, 590, 590, 297, 
	592, 592, 592, 592, 593, 592, 592, 592, 
	592, 297, 599, 600, 297, 601, 601, 297, 
	601, 602, 603, 604, 605, 606, 601, 297, 
	607, 608, 607, 297, 607, 607, 609, 297, 
	610, 297, 607, 607, 297, 611, 297, 612, 
	297, 613, 297, 612, 297, 614, 297, 612, 
	297, 607, 615, 607, 297, 616, 297, 617, 
	297, 610, 297, 599, 297, 618, 297, 619, 
	297, 620, 297, 619, 297, 621, 297, 619, 
	297, 599, 297, 599, 297, 622, 297, 623, 
	297, 601, 601, 599, 297, 624, 297, 625, 
	297, 626, 297, 627, 1, 628, 629, 630, 
	631, 631, 632, 633, 628, 297, 634, 635, 
	297, 636, 636, 297, 636, 637, 638, 638, 
	638, 638, 638, 638, 636, 638, 638, 638, 
	297, 639, 297, 640, 640, 640, 640, 640, 
	640, 640, 640, 297, 641, 642, 643, 643, 
	643, 643, 643, 643, 641, 643, 643, 643, 
	297, 644, 645, 646, 646, 646, 646, 646, 
	646, 644, 646, 646, 646, 297, 646, 297, 
	647, 647, 647, 647, 647, 647, 647, 647, 
	297, 634, 297, 634, 297, 634, 297, 648, 
	297, 649, 297, 636, 636, 634, 297, 634, 
	297, 650, 297, 651, 297, 652, 297, 653, 
	297, 654, 297, 655, 297, 656, 657, 658, 
	659, 660, 661, 662, 663, 1, 665, 664, 
	667, 666, 43, 45, 668, 669, 671, 672, 
	670, 670, 673, 670, 674, 670, 673, 670, 
	676, 676, 675, 678, 678, 677, 680, 680, 
	679, 682, 682, 681, 684, 685, 683, 683, 
	686, 683, 687, 683, 686, 683, 167, 688, 
	689, 690, 688, 688, 691, 688, 692, 688, 
	691, 688, 684, 685, 157, 683, 694, 695, 
	696, 694, 693, 694, 697, 694, 693, 694, 
	694, 693, 694, 698, 694, 693, 700, 700, 
	215, 699, 700, 701, 702, 700, 699, 700, 
	700, 699, 700, 703, 700, 699, 700, 704, 
	700, 699, 700, 703, 700, 699, 694, 695, 
	696, 205, 694, 693, 694, 698, 694, 693, 
	694, 695, 696, 227, 694, 693, 706, 705, 
	708, 707, 707, 710, 709, 709, 712, 713, 
	282, 711, 714, 711, 711, 715, 282, 711, 
	717, 716, 718, 716, 716, 720, 719, 719, 
	722, 721, 723, 721, 721, 725, 724, 724, 
	727, 728, 727, 726, 730, 730, 729, 732, 
	383, 324, 324, 324, 733, 348, 349, 344, 
	350, 350, 345, 324, 351, 352, 324, 732, 
	324, 324, 324, 731, 734, 734, 729, 735, 
	735, 731, 737, 738, 739, 737, 736, 741, 
	741, 363, 740, 741, 742, 743, 741, 740, 
	741, 741, 740, 741, 744, 741, 740, 741, 
	745, 741, 740, 741, 744, 741, 740, 737, 
	738, 739, 353, 737, 736, 737, 737, 736, 
	737, 746, 737, 736, 737, 747, 737, 736, 
	737, 746, 737, 736, 748, 749, 750, 748, 
	736, 751, 751, 395, 740, 751, 752, 753, 
	751, 740, 751, 751, 740, 751, 754, 751, 
	740, 751, 755, 751, 740, 751, 754, 751, 
	740, 748, 749, 750, 385, 748, 736, 748, 
	748, 736, 748, 756, 748, 736, 748, 757, 
	748, 736, 748, 756, 748, 736, 727, 727, 
	726, 759, 760, 759, 758, 762, 762, 413, 
	761, 418, 761, 420, 418, 761, 429, 429, 
	429, 429, 429, 429, 418, 429, 429, 761, 
	764, 764, 763, 766, 766, 765, 762, 415, 
	762, 413, 761, 762, 437, 437, 437, 437, 
	437, 437, 762, 413, 437, 437, 761, 767, 
	767, 763, 768, 418, 419, 421, 421, 421, 
	421, 421, 421, 768, 420, 421, 421, 765, 
	759, 759, 758, 770, 771, 772, 571, 770, 
	769, 774, 447, 774, 448, 773, 775, 456, 
	775, 457, 773, 776, 465, 776, 466, 773, 
	777, 474, 777, 475, 773, 483, 484, 773, 
	779, 780, 780, 780, 779, 778, 779, 781, 
	781, 781, 779, 778, 779, 779, 778, 783, 
	782, 785, 784, 787, 786, 788, 789, 789, 
	789, 788, 778, 788, 790, 790, 790, 788, 
	778, 788, 788, 778, 791, 791, 792, 782, 
	793, 793, 794, 784, 795, 795, 796, 786, 
	797, 798, 798, 798, 797, 778, 797, 799, 
	799, 799, 797, 778, 797, 797, 778, 800, 
	800, 801, 782, 802, 802, 803, 784, 804, 
	804, 805, 786, 806, 807, 807, 807, 806, 
	778, 806, 808, 808, 808, 806, 778, 806, 
	806, 778, 809, 809, 810, 782, 811, 811, 
	812, 784, 813, 813, 814, 786, 815, 816, 
	816, 816, 815, 778, 815, 817, 817, 817, 
	815, 778, 815, 815, 778, 818, 818, 819, 
	782, 820, 820, 821, 784, 822, 822, 823, 
	786, 824, 770, 769, 770, 770, 769, 826, 
	826, 825, 770, 571, 770, 769, 828, 829, 
	828, 827, 828, 830, 828, 827, 828, 828, 
	827, 832, 833, 832, 831, 835, 835, 834, 
	834, 836, 837, 838, 836, 736, 839, 839, 
	609, 740, 839, 840, 841, 839, 740, 839, 
	839, 740, 839, 842, 839, 740, 839, 843, 
	839, 740, 839, 842, 839, 740, 836, 837, 
	838, 599, 836, 736, 836, 836, 736, 836, 
	844, 836, 736, 836, 845, 836, 736, 836, 
	844, 836, 736, 832, 832, 831, 847, 848, 
	847, 846, 850, 851, 852, 853, 853, 854, 
	855, 850, 849, 857, 858, 859, 860, 860, 
	861, 862, 857, 856, 847, 863, 847, 846, 
	847, 847, 846, 865, 866, 865, 864, 865, 
	865, 864, 0
]

class << self
	attr_accessor :_pokerbot_trans_targs
	private :_pokerbot_trans_targs, :_pokerbot_trans_targs=
end
self._pokerbot_trans_targs = [
	2, 0, 3, 4, 5, 6, 7, 17, 
	38, 45, 70, 91, 108, 8, 9, 10, 
	11, 12, 13, 14, 546, 15, 16, 18, 
	30, 19, 20, 21, 22, 23, 24, 25, 
	26, 27, 28, 29, 547, 31, 32, 33, 
	34, 35, 36, 37, 545, 548, 39, 40, 
	41, 42, 43, 44, 549, 46, 47, 48, 
	49, 50, 51, 52, 53, 54, 55, 56, 
	57, 58, 59, 60, 550, 553, 554, 61, 
	62, 63, 545, 65, 551, 67, 69, 71, 
	72, 73, 74, 75, 76, 77, 78, 79, 
	80, 81, 82, 83, 84, 85, 86, 84, 
	85, 86, 87, 88, 89, 90, 88, 89, 
	90, 555, 92, 93, 94, 95, 96, 97, 
	98, 99, 100, 101, 102, 103, 104, 105, 
	106, 107, 105, 106, 107, 557, 109, 210, 
	224, 110, 111, 112, 113, 114, 115, 116, 
	117, 118, 119, 153, 120, 130, 570, 562, 
	148, 563, 149, 150, 121, 122, 123, 559, 
	545, 125, 560, 127, 129, 131, 147, 132, 
	133, 565, 568, 569, 143, 134, 135, 564, 
	136, 138, 566, 140, 142, 144, 145, 146, 
	151, 152, 154, 155, 193, 583, 572, 205, 
	574, 206, 207, 156, 157, 158, 571, 545, 
	159, 160, 168, 581, 188, 189, 190, 161, 
	162, 163, 165, 573, 167, 169, 185, 170, 
	171, 576, 579, 580, 181, 172, 173, 575, 
	174, 176, 577, 178, 180, 182, 183, 184, 
	187, 191, 192, 194, 204, 195, 196, 200, 
	197, 198, 199, 201, 202, 203, 208, 209, 
	211, 212, 213, 214, 215, 216, 217, 218, 
	219, 220, 221, 222, 223, 584, 225, 226, 
	227, 228, 229, 585, 587, 589, 594, 597, 
	252, 602, 545, 231, 586, 233, 588, 590, 
	236, 239, 237, 238, 591, 240, 241, 242, 
	243, 244, 592, 595, 247, 248, 596, 250, 
	251, 598, 599, 600, 255, 256, 601, 258, 
	603, 545, 259, 260, 261, 315, 321, 628, 
	631, 345, 632, 346, 347, 262, 263, 264, 
	265, 263, 264, 265, 266, 267, 268, 269, 
	267, 268, 269, 605, 271, 272, 273, 274, 
	275, 273, 274, 275, 276, 277, 278, 279, 
	277, 278, 279, 607, 281, 282, 283, 609, 
	619, 620, 284, 285, 286, 616, 310, 311, 
	312, 287, 303, 288, 289, 611, 614, 615, 
	299, 290, 291, 610, 292, 294, 612, 296, 
	298, 300, 301, 302, 305, 617, 307, 309, 
	313, 314, 316, 317, 318, 621, 319, 270, 
	320, 322, 338, 323, 324, 623, 626, 627, 
	334, 325, 326, 622, 327, 329, 624, 331, 
	333, 335, 336, 337, 340, 629, 342, 344, 
	348, 349, 351, 633, 352, 635, 641, 642, 
	363, 353, 636, 637, 638, 358, 355, 356, 
	357, 355, 356, 357, 639, 354, 360, 361, 
	362, 360, 361, 362, 643, 359, 365, 645, 
	366, 367, 445, 446, 450, 455, 458, 368, 
	647, 369, 370, 429, 430, 434, 439, 442, 
	371, 648, 372, 373, 413, 414, 418, 423, 
	426, 374, 649, 375, 376, 397, 398, 402, 
	407, 410, 377, 650, 378, 379, 381, 382, 
	386, 391, 394, 380, 651, 652, 383, 384, 
	385, 387, 388, 655, 389, 390, 392, 393, 
	656, 395, 396, 657, 658, 399, 400, 401, 
	403, 404, 661, 405, 406, 408, 409, 662, 
	411, 412, 663, 664, 415, 416, 417, 419, 
	420, 667, 421, 422, 424, 425, 668, 427, 
	428, 669, 670, 431, 432, 433, 435, 436, 
	673, 437, 438, 440, 441, 674, 443, 444, 
	675, 676, 447, 448, 449, 451, 452, 679, 
	453, 454, 456, 457, 680, 459, 460, 681, 
	682, 463, 466, 464, 465, 683, 467, 468, 
	469, 470, 471, 684, 687, 474, 475, 688, 
	476, 477, 478, 483, 489, 699, 702, 513, 
	703, 514, 515, 690, 479, 480, 481, 482, 
	691, 484, 485, 486, 692, 487, 488, 490, 
	506, 491, 492, 694, 697, 698, 502, 493, 
	494, 693, 495, 497, 695, 499, 501, 503, 
	504, 505, 508, 700, 510, 512, 516, 517, 
	519, 520, 704, 705, 522, 523, 532, 533, 
	534, 535, 524, 538, 525, 526, 527, 527, 
	528, 529, 530, 531, 529, 530, 531, 706, 
	536, 537, 708, 541, 542, 709, 544, 711, 
	1, 604, 634, 646, 686, 689, 521, 710, 
	545, 546, 545, 547, 545, 545, 545, 64, 
	552, 66, 68, 545, 556, 545, 556, 545, 
	558, 545, 558, 545, 124, 561, 126, 128, 
	545, 137, 567, 139, 141, 545, 159, 186, 
	582, 164, 166, 545, 159, 175, 578, 177, 
	179, 545, 584, 545, 230, 545, 232, 545, 
	234, 593, 235, 545, 545, 245, 246, 545, 
	249, 545, 253, 254, 545, 257, 545, 259, 
	350, 545, 606, 545, 606, 280, 608, 608, 
	545, 284, 304, 618, 545, 284, 293, 613, 
	295, 297, 306, 308, 319, 339, 630, 319, 
	328, 625, 330, 332, 341, 343, 545, 352, 
	364, 545, 353, 545, 640, 545, 640, 644, 
	644, 545, 366, 461, 685, 545, 369, 372, 
	375, 378, 545, 383, 653, 654, 545, 655, 
	545, 656, 545, 657, 399, 659, 660, 378, 
	661, 378, 662, 378, 663, 415, 665, 666, 
	375, 667, 375, 668, 375, 669, 431, 671, 
	672, 372, 673, 372, 674, 372, 675, 447, 
	677, 678, 369, 679, 369, 680, 369, 681, 
	462, 545, 366, 545, 284, 472, 473, 545, 
	476, 518, 545, 479, 487, 507, 701, 487, 
	496, 696, 498, 500, 509, 511, 545, 522, 
	539, 545, 707, 523, 532, 533, 534, 535, 
	545, 707, 523, 532, 533, 534, 535, 540, 
	545, 476, 543
]

class << self
	attr_accessor :_pokerbot_trans_actions
	private :_pokerbot_trans_actions, :_pokerbot_trans_actions=
end
self._pokerbot_trans_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	63, 0, 0, 0, 27, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	59, 0, 0, 0, 23, 0, 0, 0, 
	0, 57, 0, 0, 81, 233, 0, 0, 
	0, 45, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 53, 0, 69, 69, 69, 0, 
	0, 0, 75, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	49, 0, 0, 0, 1, 1, 1, 0, 
	0, 0, 0, 1, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 47, 0, 0, 0, 1, 
	1, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 51, 0, 0, 0, 227, 69, 
	0, 69, 0, 0, 0, 0, 0, 69, 
	73, 0, 0, 0, 0, 0, 0, 0, 
	0, 69, 69, 69, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 55, 0, 0, 230, 69, 0, 
	69, 0, 0, 0, 0, 0, 69, 77, 
	0, 0, 0, 69, 0, 0, 0, 0, 
	0, 0, 0, 69, 0, 0, 0, 0, 
	0, 69, 69, 69, 0, 0, 0, 69, 
	0, 0, 69, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 61, 0, 0, 0, 25, 0, 0, 
	0, 0, 65, 69, 69, 69, 69, 69, 
	0, 69, 79, 0, 0, 0, 0, 69, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 69, 0, 0, 0, 0, 
	0, 0, 69, 69, 0, 0, 0, 0, 
	0, 71, 0, 0, 0, 0, 0, 69, 
	69, 0, 69, 0, 0, 0, 1, 1, 
	1, 0, 0, 0, 0, 1, 1, 1, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	1, 0, 0, 0, 0, 1, 1, 1, 
	0, 0, 0, 0, 0, 0, 0, 69, 
	69, 69, 0, 0, 0, 69, 0, 0, 
	0, 0, 0, 0, 0, 69, 69, 69, 
	0, 0, 0, 69, 0, 0, 69, 0, 
	0, 0, 0, 0, 0, 69, 0, 0, 
	0, 0, 0, 0, 0, 69, 0, 0, 
	0, 0, 0, 0, 0, 69, 69, 69, 
	0, 0, 0, 69, 0, 0, 69, 0, 
	0, 0, 0, 0, 0, 69, 0, 0, 
	0, 0, 0, 69, 0, 69, 69, 69, 
	0, 0, 0, 0, 69, 0, 1, 1, 
	1, 0, 0, 0, 0, 0, 1, 1, 
	1, 0, 0, 0, 0, 0, 0, 69, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	69, 0, 0, 0, 0, 0, 0, 0, 
	0, 69, 0, 0, 0, 0, 0, 0, 
	0, 0, 69, 0, 0, 0, 0, 0, 
	0, 0, 0, 69, 0, 0, 0, 0, 
	0, 0, 0, 0, 69, 69, 0, 0, 
	0, 0, 0, 27, 0, 0, 0, 0, 
	23, 0, 0, 25, 69, 0, 0, 0, 
	0, 0, 224, 0, 0, 0, 0, 218, 
	0, 0, 221, 69, 0, 0, 0, 0, 
	0, 224, 0, 0, 0, 0, 218, 0, 
	0, 221, 69, 0, 0, 0, 0, 0, 
	224, 0, 0, 0, 0, 218, 0, 0, 
	221, 69, 0, 0, 0, 0, 0, 224, 
	0, 0, 0, 0, 218, 0, 0, 221, 
	69, 0, 0, 0, 0, 69, 0, 0, 
	0, 0, 0, 69, 69, 0, 0, 69, 
	0, 0, 0, 0, 0, 69, 69, 0, 
	69, 0, 0, 69, 0, 0, 0, 0, 
	0, 0, 0, 0, 69, 0, 0, 0, 
	0, 0, 0, 69, 69, 69, 0, 0, 
	0, 69, 0, 0, 69, 0, 0, 0, 
	0, 0, 0, 69, 0, 0, 0, 0, 
	0, 0, 69, 69, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 19, 19, 0, 
	0, 1, 1, 1, 0, 0, 0, 69, 
	0, 0, 69, 0, 0, 69, 0, 69, 
	0, 69, 69, 69, 69, 69, 0, 69, 
	125, 0, 113, 0, 107, 89, 143, 0, 
	69, 0, 0, 240, 1, 95, 0, 248, 
	1, 101, 0, 140, 0, 69, 0, 0, 
	131, 0, 69, 0, 0, 146, 13, 0, 
	69, 0, 0, 134, 11, 0, 69, 0, 
	0, 119, 0, 185, 0, 173, 0, 161, 
	0, 0, 0, 167, 179, 0, 0, 197, 
	0, 203, 0, 0, 191, 0, 182, 37, 
	0, 236, 256, 92, 212, 0, 1, 0, 
	137, 13, 0, 69, 128, 11, 0, 69, 
	0, 0, 0, 0, 13, 0, 69, 11, 
	0, 69, 0, 0, 0, 0, 170, 33, 
	0, 152, 17, 244, 1, 98, 0, 260, 
	215, 158, 29, 0, 69, 104, 3, 3, 
	3, 3, 149, 15, 69, 69, 122, 0, 
	110, 0, 116, 0, 15, 69, 69, 9, 
	69, 5, 69, 7, 69, 15, 69, 69, 
	9, 69, 5, 69, 7, 69, 15, 69, 
	69, 9, 69, 5, 69, 7, 69, 15, 
	69, 69, 9, 69, 5, 69, 7, 69, 
	29, 164, 31, 176, 35, 0, 0, 194, 
	41, 0, 86, 1, 13, 0, 69, 11, 
	0, 69, 0, 0, 0, 0, 200, 43, 
	0, 252, 209, 83, 83, 83, 83, 83, 
	155, 69, 21, 21, 21, 21, 21, 0, 
	188, 39, 0
]

class << self
	attr_accessor :_pokerbot_to_state_actions
	private :_pokerbot_to_state_actions, :_pokerbot_to_state_actions=
end
self._pokerbot_to_state_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 206, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0
]

class << self
	attr_accessor :_pokerbot_from_state_actions
	private :_pokerbot_from_state_actions, :_pokerbot_from_state_actions=
end
self._pokerbot_from_state_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 67, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0
]

class << self
	attr_accessor :_pokerbot_eof_trans
	private :_pokerbot_eof_trans, :_pokerbot_eof_trans=
end
self._pokerbot_eof_trans = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 45, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	75, 75, 75, 75, 75, 75, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 153, 153, 153, 153, 
	153, 153, 0, 45, 45, 45, 45, 45, 
	45, 153, 153, 153, 153, 153, 153, 45, 
	45, 45, 45, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 192, 
	192, 192, 192, 192, 192, 192, 192, 192, 
	192, 192, 192, 192, 192, 192, 192, 192, 
	192, 192, 192, 192, 192, 192, 192, 192, 
	192, 192, 192, 192, 192, 192, 192, 192, 
	192, 0, 45, 45, 45, 45, 45, 45, 
	45, 45, 45, 45, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 267, 267, 
	267, 267, 267, 267, 267, 267, 267, 267, 
	267, 267, 267, 267, 267, 267, 267, 267, 
	267, 267, 267, 267, 0, 267, 267, 267, 
	267, 267, 267, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 0, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 0, 665, 667, 669, 670, 671, 671, 
	671, 671, 671, 676, 678, 680, 682, 684, 
	684, 684, 684, 684, 689, 689, 689, 689, 
	689, 689, 684, 694, 694, 694, 694, 700, 
	700, 700, 700, 700, 700, 694, 694, 694, 
	706, 708, 708, 710, 710, 712, 712, 712, 
	716, 712, 717, 717, 717, 720, 720, 722, 
	722, 722, 725, 725, 727, 730, 732, 730, 
	732, 737, 741, 741, 741, 741, 741, 741, 
	737, 737, 737, 737, 737, 737, 741, 741, 
	741, 741, 741, 741, 737, 737, 737, 737, 
	737, 727, 759, 762, 762, 762, 762, 764, 
	766, 762, 762, 764, 766, 759, 770, 774, 
	774, 774, 774, 774, 779, 779, 779, 783, 
	785, 787, 779, 779, 779, 783, 785, 787, 
	779, 779, 779, 783, 785, 787, 779, 779, 
	779, 783, 785, 787, 779, 779, 779, 783, 
	785, 787, 770, 770, 826, 770, 828, 828, 
	828, 832, 835, 835, 737, 741, 741, 741, 
	741, 741, 741, 737, 737, 737, 737, 737, 
	832, 847, 850, 857, 847, 847, 865, 865
]

class << self
	attr_accessor :pokerbot_start
end
self.pokerbot_start = 545;
class << self
	attr_accessor :pokerbot_first_final
end
self.pokerbot_first_final = 545;
class << self
	attr_accessor :pokerbot_error
end
self.pokerbot_error = 0;

class << self
	attr_accessor :pokerbot_en_main
end
self.pokerbot_en_main = 545;


# line 232 "lib/fb_pokerbot_parser/message_parser.rl"
    data = data.unpack("c*") if data.is_a?(String)
    eof  = data.length
    cp   = 0

    @status     = false   # true if status request
    @command    = ""
    @cards      = []
    @options    = {}
    @actions    = []
    @flop       = []
    @turn       = []
    @river      = []
    @hole_cards = []
    @players    = {}
    @hero       = {}
    @blinds     = {}
    @amount     = nil
    @_curr_seat = nil

    
# line 1725 "lib/fb_pokerbot_parser/message_parser.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = pokerbot_start
	ts = nil
	te = nil
	act = 0
end

# line 252 "lib/fb_pokerbot_parser/message_parser.rl"
    
# line 1737 "lib/fb_pokerbot_parser/message_parser.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_acts = _pokerbot_from_state_actions[cs]
	_nacts = _pokerbot_actions[_acts]
	_acts += 1
	while _nacts > 0
		_nacts -= 1
		_acts += 1
		case _pokerbot_actions[_acts - 1]
			when 37 then
# line 1 "NONE"
		begin
ts = p
		end
# line 1771 "lib/fb_pokerbot_parser/message_parser.rb"
		end # from state action switch
	end
	if _trigger_goto
		next
	end
	_keys = _pokerbot_key_offsets[cs]
	_trans = _pokerbot_index_offsets[cs]
	_klen = _pokerbot_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p].ord < _pokerbot_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p].ord > _pokerbot_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _pokerbot_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p].ord < _pokerbot_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p].ord > _pokerbot_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _pokerbot_indicies[_trans]
	end
	if _goto_level <= _eof_trans
	cs = _pokerbot_trans_targs[_trans]
	if _pokerbot_trans_actions[_trans] != 0
		_acts = _pokerbot_trans_actions[_trans]
		_nacts = _pokerbot_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _pokerbot_actions[_acts - 1]
when 0 then
# line 56 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    #p "[#{data[cp..(p-1)].pack('c*')}]"
    parseCard(data[cp..(p-1)].pack('c*').strip)
    
    cp = p
  		end
when 1 then
# line 62 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    @flop = @cards if @cards.count == 3
  		end
when 2 then
# line 65 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    @hole_cards = @cards if @cards.count == 2
  		end
when 3 then
# line 75 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    parseBlinds(data[cp..(p-1)].pack('c*').strip)
    cp = p
  		end
when 4 then
# line 80 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    parseBigBlind(data[cp..(p-1)].pack('c*').strip)
    cp = p
  		end
when 5 then
# line 85 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    value = data[cp..(p-1)].pack('c*').strip
    @blinds[:sb] = value.to_i
    cp = p
  		end
when 6 then
# line 91 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    value = data[cp..(p-1)].pack('c*').strip
    @blinds[:ante] = value.to_i
    cp = p
  		end
when 7 then
# line 97 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    value = data[cp..p].pack('c*').strip
    seat, action, amount = value.split(' ')
    amount = amount.to_i unless amount.nil?
    @actions << {seat: seat, action: ACTIONS.fetch(action,nil), amount: amount}
    cp = p
  		end
when 8 then
# line 105 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    value = data[cp..p].pack('c*').strip
    action = value.split(" ").last
    @actions << {seat: 'all', action: ACTIONS.fetch(action,nil), amount: nil}
    cp = p
  		end
when 9 then
# line 112 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    parse_seating_options(data[cp..p].pack('c*').strip)
    cp = p
  		end
when 10 then
# line 122 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    set_hero_stack(data[cp..p].pack('c*').strip)
    cp = p
  		end
when 11 then
# line 132 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    val = data[cp..(p-1)].pack('c*').strip
    set_curr_seat(val)
    cp = p
  		end
when 12 then
# line 138 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    assign_cards_to_seat
  		end
when 13 then
# line 176 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 14 then
# line 177 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 15 then
# line 178 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 16 then
# line 185 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('nh', p, pe); cp = p 		end
when 17 then
# line 186 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('nt', p, pe); cp = p		end
when 18 then
# line 187 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('hero', p, pe); cp = p 		end
when 19 then
# line 188 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('pre', p, pe); cp = p 		end
when 20 then
# line 189 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('flop', p, pe); cp = p 		end
when 21 then
# line 190 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('turn', p, pe); cp = p 		end
when 22 then
# line 191 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('river', p, pe); cp = p 		end
when 23 then
# line 192 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('show', p, pe); cp = p 		end
when 24 then
# line 215 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 25 then
# line 216 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 26 then
# line 217 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 27 then
# line 218 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 28 then
# line 219 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 29 then
# line 220 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 30 then
# line 221 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 31 then
# line 222 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 32 then
# line 223 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 33 then
# line 224 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 34 then
# line 225 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 38 then
# line 1 "NONE"
		begin
te = p+1
		end
when 39 then
# line 218 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
act = 5;		end
when 40 then
# line 220 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
act = 7;		end
when 41 then
# line 221 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
act = 8;		end
when 42 then
# line 214 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 43 then
# line 215 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 44 then
# line 216 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 45 then
# line 217 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 46 then
# line 218 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 47 then
# line 219 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 48 then
# line 220 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 49 then
# line 221 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 50 then
# line 222 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 51 then
# line 223 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 52 then
# line 224 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 53 then
# line 225 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 54 then
# line 214 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 begin p = ((te))-1; end
		end
when 55 then
# line 218 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 begin p = ((te))-1; end
		end
when 56 then
# line 219 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 begin p = ((te))-1; end
		end
when 57 then
# line 220 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 begin p = ((te))-1; end
		end
when 58 then
# line 225 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 begin p = ((te))-1; end
		end
when 59 then
# line 1 "NONE"
		begin
	case act
	when 0 then
	begin	begin
		cs = 0
		_trigger_goto = true
		_goto_level = _again
		break
	end
end
	else
	begin begin p = ((te))-1; end
end
end 
			end
# line 2143 "lib/fb_pokerbot_parser/message_parser.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	_acts = _pokerbot_to_state_actions[cs]
	_nacts = _pokerbot_actions[_acts]
	_acts += 1
	while _nacts > 0
		_nacts -= 1
		_acts += 1
		case _pokerbot_actions[_acts - 1]
when 35 then
# line 1 "NONE"
		begin
ts = nil;		end
when 36 then
# line 1 "NONE"
		begin
act = 0
		end
# line 2168 "lib/fb_pokerbot_parser/message_parser.rb"
		end # to state action switch
	end
	if _trigger_goto
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	if _pokerbot_eof_trans[cs] > 0
		_trans = _pokerbot_eof_trans[cs] - 1;
		_goto_level = _eof_trans
		next;
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 253 "lib/fb_pokerbot_parser/message_parser.rl"
  end

  def set_cmd(key, p, pe)
    @command = COMMANDS.fetch(key, nil)
    set_status if pe == p
  end

  def set_status
    @status = true
  end

  def parseCard(card)
    suit = card[-1..-1]
    val  = card[0..-2]
    @cards << "#{val.upcase}#{suit.downcase}"
  end

  def parseBlinds(data)
    sb, bb, *straddles = data.split("/")
    @blinds[:sb] = sb.to_i
    @blinds[:bb] = bb.to_i
    return if straddles.empty?
    if straddles.count == 1 && straddles.first.to_i < @blinds[:bb]
      @blinds[:ante] = straddles.first.to_i
    else
      @blinds[:straddle] = straddles.map(&:to_i)
    end
    @blinds
  end

  def parseBigBlind(data)
    @blinds[:bb] = data.to_i
    @blinds[:sb] = (@blinds[:bb] / 2) if @blinds[:sb].nil?
  end

  def parse_seating_options(data)
    num = data.to_i 
    options = data.gsub(num.to_s,'')
    options.split('').each do |val|
      next unless key = NEW_HAND_OPTIONS.fetch(val,nil)
      @options[key] = num
    end
  end
   
  def set_stack_size(data)
    seat, amount = data.split(" ")
    seat = seat.to_sym
    amount = amount.to_i
    @players[key] ||= {}
    @players[key][:stack] = amount
  end

  def set_hero_stack(data)
    @hero[:stack] = data.to_i
  end

  def set_curr_seat(data)
    @_curr_seat = data.to_sym if VALID_SEATS.include?(data)
  end

  def assign_cards_to_seat
    @players[@_curr_seat] ||= {}
    @players[@_curr_seat][:cards] = @cards.dup
    @cards = []
  end
end