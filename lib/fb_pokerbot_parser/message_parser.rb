
# line 1 "lib/fb_pokerbot_parser/message_parser.rl"

class FbPokerbotParser::MessageParser

  attr_accessor :command, 
                :status,
                :options, 
                :cards, 
                :actions, 
                :hole_cards, 
                :flop, :turn, :river,
                :amount,
                :blinds,
                :hero


  COMMANDS = {
    "nh"       => :new_hand,
    "nt"       => :new_tourney_hand,
    "hero"     => :hero,
    "pre"      => :preflop_action,
    "flop"     => :flop,
    "turn"     => :turn,
    "river"    => :river,
    "show"     => :showdown,
    "c"        => :set,
    "config"   => :set,
    "set"      => :set 
  }

  ACTIONS = {
    'b'     => :bet,
    'bet'   => :bet,
    'c'     => :call,
    'call'  => :call,
    'f'     => :fold,
    'fold'  => :fold,
    'r'     => :raise,
    'raise' => :raise,
    'ch'    => :check,
    'check' => :check,
    'm'     => :muck,
    'muck'  => :muck
  }

  NEW_HAND_OPTIONS = {
    'b' => :button,
    'p' => :players,
    'h' => :hero
  }


# line 213 "lib/fb_pokerbot_parser/message_parser.rl"


  def initialize(data)
    
# line 60 "lib/fb_pokerbot_parser/message_parser.rb"
class << self
	attr_accessor :_pokerbot_actions
	private :_pokerbot_actions, :_pokerbot_actions=
end
self._pokerbot_actions = [
	0, 1, 0, 1, 3, 1, 4, 1, 
	5, 1, 6, 1, 7, 1, 8, 1, 
	9, 1, 10, 1, 11, 1, 12, 1, 
	13, 1, 14, 1, 15, 1, 16, 1, 
	22, 1, 23, 1, 24, 1, 25, 1, 
	26, 1, 27, 1, 28, 1, 29, 1, 
	30, 1, 31, 1, 32, 1, 35, 1, 
	36, 1, 52, 1, 53, 1, 54, 1, 
	55, 1, 56, 1, 57, 2, 0, 41, 
	2, 1, 43, 2, 2, 40, 2, 2, 
	42, 2, 3, 40, 2, 3, 47, 2, 
	4, 40, 2, 4, 48, 2, 5, 40, 
	2, 5, 49, 2, 6, 40, 2, 6, 
	50, 2, 7, 44, 2, 7, 46, 2, 
	8, 44, 2, 8, 45, 2, 8, 46, 
	2, 9, 40, 2, 10, 40, 2, 14, 
	40, 2, 14, 51, 2, 15, 40, 2, 
	15, 51, 2, 16, 40, 2, 16, 51, 
	2, 17, 40, 2, 17, 51, 2, 18, 
	40, 2, 18, 51, 2, 19, 40, 2, 
	19, 51, 2, 20, 40, 2, 20, 51, 
	2, 21, 40, 2, 21, 51, 2, 33, 
	34, 2, 36, 2, 2, 36, 11, 2, 
	36, 12, 2, 36, 13, 2, 36, 37, 
	2, 36, 38, 2, 36, 39, 3, 0, 
	1, 43, 3, 0, 2, 40, 3, 0, 
	2, 42, 3, 36, 0, 2
]

class << self
	attr_accessor :_pokerbot_key_offsets
	private :_pokerbot_key_offsets, :_pokerbot_key_offsets=
end
self._pokerbot_key_offsets = [
	0, 0, 1, 2, 3, 4, 5, 12, 
	13, 14, 15, 18, 19, 23, 28, 29, 
	30, 33, 35, 36, 37, 38, 39, 40, 
	41, 42, 45, 46, 47, 50, 55, 56, 
	57, 58, 59, 62, 64, 67, 69, 70, 
	71, 72, 75, 86, 87, 95, 96, 97, 
	98, 99, 100, 101, 102, 103, 104, 105, 
	106, 107, 108, 111, 115, 116, 117, 120, 
	126, 127, 128, 129, 130, 131, 132, 133, 
	134, 135, 136, 137, 138, 139, 140, 141, 
	144, 155, 156, 164, 178, 192, 193, 201, 
	215, 229, 230, 238, 239, 240, 241, 242, 
	243, 244, 245, 246, 247, 250, 261, 262, 
	270, 284, 298, 299, 307, 310, 311, 312, 
	313, 314, 315, 316, 317, 318, 319, 323, 
	332, 333, 334, 337, 343, 344, 345, 346, 
	347, 348, 349, 351, 354, 362, 366, 371, 
	372, 375, 376, 377, 378, 379, 380, 381, 
	385, 386, 387, 388, 389, 390, 391, 392, 
	393, 398, 401, 410, 411, 412, 415, 421, 
	433, 434, 435, 438, 444, 445, 446, 447, 
	448, 450, 453, 461, 465, 470, 471, 474, 
	475, 476, 477, 478, 479, 480, 484, 485, 
	486, 487, 488, 489, 490, 491, 492, 493, 
	494, 499, 501, 504, 512, 516, 521, 522, 
	525, 529, 530, 531, 532, 533, 534, 535, 
	536, 537, 542, 543, 544, 545, 546, 547, 
	548, 549, 550, 551, 554, 555, 556, 559, 
	564, 565, 566, 567, 568, 571, 578, 579, 
	580, 581, 582, 583, 585, 586, 587, 588, 
	589, 590, 591, 592, 593, 594, 595, 596, 
	597, 598, 599, 600, 601, 602, 603, 604, 
	605, 606, 607, 608, 609, 610, 625, 640, 
	654, 668, 669, 677, 685, 699, 713, 714, 
	722, 730, 731, 732, 742, 745, 747, 757, 
	760, 762, 772, 775, 777, 787, 790, 792, 
	802, 805, 807, 814, 820, 826, 830, 833, 
	837, 842, 843, 844, 847, 848, 851, 856, 
	857, 860, 865, 872, 878, 888, 895, 901, 
	905, 910, 911, 912, 915, 916, 919, 924, 
	925, 928, 933, 940, 946, 956, 963, 969, 
	973, 978, 979, 980, 983, 984, 987, 992, 
	993, 996, 1001, 1008, 1014, 1024, 1031, 1037, 
	1041, 1046, 1047, 1048, 1051, 1052, 1055, 1060, 
	1061, 1064, 1069, 1076, 1082, 1092, 1099, 1105, 
	1109, 1114, 1115, 1116, 1119, 1120, 1123, 1128, 
	1129, 1132, 1137, 1138, 1150, 1151, 1152, 1153, 
	1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 
	1170, 1171, 1172, 1173, 1181, 1183, 1185, 1188, 
	1188, 1190, 1190, 1191, 1192, 1193, 1196, 1199, 
	1202, 1205, 1207, 1207, 1208, 1209, 1210, 1212, 
	1214, 1214, 1215, 1216, 1217, 1220, 1225, 1229, 
	1232, 1236, 1241, 1246, 1249, 1253, 1257, 1261, 
	1267, 1271, 1277, 1279, 1280, 1280, 1281, 1281, 
	1284, 1285, 1285, 1285, 1286, 1287, 1288, 1288, 
	1289, 1289, 1290, 1291, 1291, 1292, 1292, 1293, 
	1293, 1297, 1302, 1304, 1307, 1317, 1320, 1323, 
	1329, 1342, 1345, 1360, 1363, 1369, 1375, 1381, 
	1387, 1393, 1396, 1402, 1408, 1411, 1413, 1415, 
	1417, 1423, 1429, 1432, 1437, 1442, 1447, 1453, 
	1459, 1462, 1467, 1472, 1477, 1483, 1489, 1492, 
	1497, 1502, 1507, 1513, 1519, 1522, 1527, 1532, 
	1537, 1540, 1543, 1546, 1550, 1551, 1552, 1552, 
	1553, 1553, 1554, 1555, 1555, 1556
]

class << self
	attr_accessor :_pokerbot_trans_keys
	private :_pokerbot_trans_keys, :_pokerbot_trans_keys=
end
self._pokerbot_trans_keys = [
	116, 101, 115, 116, 32, 97, 98, 99, 
	100, 102, 104, 115, 110, 116, 101, 32, 
	9, 13, 97, 32, 110, 9, 13, 32, 
	9, 13, 48, 57, 116, 101, 32, 9, 
	13, 105, 108, 103, 95, 98, 108, 105, 
	110, 100, 32, 9, 13, 98, 98, 32, 
	9, 13, 32, 9, 13, 48, 57, 105, 
	110, 100, 115, 32, 9, 13, 48, 57, 
	47, 48, 57, 48, 57, 97, 114, 100, 
	32, 9, 13, 49, 65, 81, 97, 113, 
	50, 57, 74, 75, 106, 107, 48, 72, 
	83, 104, 115, 67, 68, 99, 100, 101, 
	102, 97, 117, 108, 116, 95, 97, 99, 
	116, 105, 111, 110, 32, 9, 13, 97, 
	99, 102, 109, 108, 108, 32, 9, 13, 
	32, 99, 102, 109, 9, 13, 108, 108, 
	99, 107, 108, 100, 108, 111, 112, 45, 
	99, 97, 114, 100, 115, 32, 9, 13, 
	49, 65, 81, 97, 113, 50, 57, 74, 
	75, 106, 107, 48, 72, 83, 104, 115, 
	67, 68, 99, 100, 32, 49, 65, 81, 
	97, 113, 9, 13, 50, 57, 74, 75, 
	106, 107, 32, 49, 65, 81, 97, 113, 
	9, 13, 50, 57, 74, 75, 106, 107, 
	48, 72, 83, 104, 115, 67, 68, 99, 
	100, 32, 49, 65, 81, 97, 113, 9, 
	13, 50, 57, 74, 75, 106, 107, 32, 
	49, 65, 81, 97, 113, 9, 13, 50, 
	57, 74, 75, 106, 107, 48, 72, 83, 
	104, 115, 67, 68, 99, 100, 111, 108, 
	101, 45, 99, 97, 114, 100, 115, 32, 
	9, 13, 49, 65, 81, 97, 113, 50, 
	57, 74, 75, 106, 107, 48, 72, 83, 
	104, 115, 67, 68, 99, 100, 32, 49, 
	65, 81, 97, 113, 9, 13, 50, 57, 
	74, 75, 106, 107, 32, 49, 65, 81, 
	97, 113, 9, 13, 50, 57, 74, 75, 
	106, 107, 48, 72, 83, 104, 115, 67, 
	68, 99, 100, 101, 109, 116, 97, 116, 
	95, 97, 99, 116, 105, 111, 110, 32, 
	115, 9, 13, 97, 98, 99, 102, 104, 
	108, 109, 115, 117, 108, 108, 32, 9, 
	13, 32, 99, 102, 109, 9, 13, 108, 
	108, 99, 107, 108, 100, 98, 116, 32, 
	9, 13, 32, 98, 99, 102, 109, 114, 
	9, 13, 32, 101, 9, 13, 32, 9, 
	13, 48, 57, 116, 32, 9, 13, 108, 
	108, 99, 107, 108, 100, 32, 97, 9, 
	13, 105, 115, 101, 110, 106, 98, 116, 
	103, 32, 9, 13, 49, 51, 32, 9, 
	13, 97, 98, 99, 102, 104, 108, 109, 
	115, 117, 108, 108, 32, 9, 13, 32, 
	99, 102, 109, 9, 13, 32, 97, 98, 
	99, 102, 104, 108, 109, 115, 117, 9, 
	13, 108, 108, 32, 9, 13, 32, 99, 
	102, 109, 9, 13, 108, 100, 99, 107, 
	98, 116, 32, 9, 13, 32, 98, 99, 
	102, 109, 114, 9, 13, 32, 101, 9, 
	13, 32, 9, 13, 48, 57, 116, 32, 
	9, 13, 108, 108, 99, 107, 108, 100, 
	32, 97, 9, 13, 105, 115, 101, 110, 
	108, 108, 106, 98, 116, 103, 32, 9, 
	13, 49, 51, 98, 116, 32, 9, 13, 
	32, 98, 99, 102, 109, 114, 9, 13, 
	32, 101, 9, 13, 32, 9, 13, 48, 
	57, 116, 32, 9, 13, 32, 97, 9, 
	13, 105, 115, 101, 110, 106, 98, 116, 
	103, 32, 9, 13, 49, 51, 97, 108, 
	108, 95, 98, 108, 105, 110, 100, 32, 
	9, 13, 115, 98, 32, 9, 13, 32, 
	9, 13, 48, 57, 97, 116, 117, 115, 
	32, 9, 13, 102, 104, 110, 112, 114, 
	115, 116, 111, 112, 114, 111, 119, 104, 
	116, 97, 110, 100, 111, 117, 114, 110, 
	101, 121, 101, 108, 111, 112, 118, 101, 
	114, 104, 119, 111, 119, 110, 114, 110, 
	111, 112, 32, 48, 49, 65, 81, 97, 
	113, 9, 13, 50, 57, 74, 75, 106, 
	107, 32, 48, 49, 65, 81, 97, 113, 
	9, 13, 50, 57, 74, 75, 106, 107, 
	32, 49, 65, 81, 97, 113, 9, 13, 
	50, 57, 74, 75, 106, 107, 32, 49, 
	65, 81, 97, 113, 9, 13, 50, 57, 
	74, 75, 106, 107, 48, 72, 83, 104, 
	115, 67, 68, 99, 100, 72, 83, 104, 
	115, 67, 68, 99, 100, 32, 49, 65, 
	81, 97, 113, 9, 13, 50, 57, 74, 
	75, 106, 107, 32, 49, 65, 81, 97, 
	113, 9, 13, 50, 57, 74, 75, 106, 
	107, 48, 72, 83, 104, 115, 67, 68, 
	99, 100, 72, 83, 104, 115, 67, 68, 
	99, 100, 114, 111, 32, 48, 49, 97, 
	98, 115, 9, 13, 50, 57, 47, 48, 
	57, 48, 57, 32, 48, 49, 97, 98, 
	115, 9, 13, 50, 57, 47, 48, 57, 
	48, 57, 32, 48, 49, 97, 98, 115, 
	9, 13, 50, 57, 47, 48, 57, 48, 
	57, 32, 48, 49, 97, 98, 115, 9, 
	13, 50, 57, 47, 48, 57, 48, 57, 
	32, 48, 49, 97, 98, 115, 9, 13, 
	50, 57, 47, 48, 57, 48, 57, 47, 
	48, 98, 104, 112, 49, 57, 47, 98, 
	104, 112, 48, 57, 32, 49, 9, 13, 
	50, 57, 48, 98, 104, 112, 98, 104, 
	112, 32, 110, 9, 13, 32, 9, 13, 
	48, 57, 116, 101, 32, 9, 13, 98, 
	32, 9, 13, 32, 9, 13, 48, 57, 
	98, 32, 9, 13, 32, 9, 13, 48, 
	57, 47, 48, 98, 104, 112, 49, 57, 
	47, 98, 104, 112, 48, 57, 32, 48, 
	49, 97, 98, 115, 9, 13, 50, 57, 
	47, 48, 98, 104, 112, 49, 57, 47, 
	98, 104, 112, 48, 57, 32, 110, 9, 
	13, 32, 9, 13, 48, 57, 116, 101, 
	32, 9, 13, 98, 32, 9, 13, 32, 
	9, 13, 48, 57, 98, 32, 9, 13, 
	32, 9, 13, 48, 57, 47, 48, 98, 
	104, 112, 49, 57, 47, 98, 104, 112, 
	48, 57, 32, 48, 49, 97, 98, 115, 
	9, 13, 50, 57, 47, 48, 98, 104, 
	112, 49, 57, 47, 98, 104, 112, 48, 
	57, 32, 110, 9, 13, 32, 9, 13, 
	48, 57, 116, 101, 32, 9, 13, 98, 
	32, 9, 13, 32, 9, 13, 48, 57, 
	98, 32, 9, 13, 32, 9, 13, 48, 
	57, 47, 48, 98, 104, 112, 49, 57, 
	47, 98, 104, 112, 48, 57, 32, 48, 
	49, 97, 98, 115, 9, 13, 50, 57, 
	47, 48, 98, 104, 112, 49, 57, 47, 
	98, 104, 112, 48, 57, 32, 110, 9, 
	13, 32, 9, 13, 48, 57, 116, 101, 
	32, 9, 13, 98, 32, 9, 13, 32, 
	9, 13, 48, 57, 98, 32, 9, 13, 
	32, 9, 13, 48, 57, 47, 48, 98, 
	104, 112, 49, 57, 47, 98, 104, 112, 
	48, 57, 32, 48, 49, 97, 98, 115, 
	9, 13, 50, 57, 47, 48, 98, 104, 
	112, 49, 57, 47, 98, 104, 112, 48, 
	57, 32, 110, 9, 13, 32, 9, 13, 
	48, 57, 116, 101, 32, 9, 13, 98, 
	32, 9, 13, 32, 9, 13, 48, 57, 
	98, 32, 9, 13, 32, 9, 13, 48, 
	57, 119, 32, 48, 49, 97, 98, 104, 
	115, 116, 9, 13, 50, 57, 97, 110, 
	100, 111, 117, 114, 110, 101, 121, 101, 
	108, 111, 112, 118, 101, 114, 104, 119, 
	111, 119, 110, 114, 110, 46, 102, 104, 
	110, 112, 114, 115, 116, 48, 57, 48, 
	57, 47, 48, 57, 97, 104, 101, 111, 
	117, 32, 9, 13, 32, 9, 13, 32, 
	9, 13, 32, 9, 13, 97, 104, 101, 
	111, 117, 48, 57, 97, 104, 101, 111, 
	117, 97, 104, 111, 32, 97, 104, 9, 
	13, 32, 111, 9, 13, 32, 9, 13, 
	32, 117, 9, 13, 32, 9, 13, 48, 
	57, 32, 97, 104, 9, 13, 32, 9, 
	13, 32, 101, 9, 13, 32, 111, 9, 
	13, 32, 117, 9, 13, 32, 97, 104, 
	111, 9, 13, 32, 101, 9, 13, 32, 
	97, 104, 111, 9, 13, 48, 57, 108, 
	101, 101, 104, 116, 32, 116, 114, 102, 
	105, 111, 100, 117, 108, 32, 101, 9, 
	13, 32, 9, 13, 48, 57, 48, 57, 
	48, 49, 57, 72, 83, 104, 115, 48, 
	57, 67, 68, 99, 100, 32, 9, 13, 
	32, 9, 13, 32, 48, 9, 13, 49, 
	57, 32, 72, 83, 104, 115, 9, 13, 
	48, 57, 67, 68, 99, 100, 32, 9, 
	13, 32, 48, 49, 65, 81, 97, 113, 
	9, 13, 50, 57, 74, 75, 106, 107, 
	32, 9, 13, 32, 101, 104, 116, 9, 
	13, 32, 47, 9, 13, 48, 57, 32, 
	47, 9, 13, 48, 57, 32, 47, 9, 
	13, 48, 57, 32, 47, 9, 13, 48, 
	57, 47, 48, 57, 32, 98, 104, 112, 
	9, 13, 32, 98, 104, 112, 9, 13, 
	32, 9, 13, 48, 57, 48, 57, 48, 
	57, 32, 98, 104, 112, 9, 13, 32, 
	98, 104, 112, 9, 13, 32, 9, 13, 
	32, 9, 13, 48, 57, 32, 9, 13, 
	48, 57, 32, 9, 13, 48, 57, 32, 
	98, 104, 112, 9, 13, 32, 98, 104, 
	112, 9, 13, 32, 9, 13, 32, 9, 
	13, 48, 57, 32, 9, 13, 48, 57, 
	32, 9, 13, 48, 57, 32, 98, 104, 
	112, 9, 13, 32, 98, 104, 112, 9, 
	13, 32, 9, 13, 32, 9, 13, 48, 
	57, 32, 9, 13, 48, 57, 32, 9, 
	13, 48, 57, 32, 98, 104, 112, 9, 
	13, 32, 98, 104, 112, 9, 13, 32, 
	9, 13, 32, 9, 13, 48, 57, 32, 
	9, 13, 48, 57, 32, 9, 13, 48, 
	57, 32, 9, 13, 32, 9, 13, 32, 
	9, 13, 32, 116, 9, 13, 114, 102, 
	105, 111, 100, 117, 0
]

class << self
	attr_accessor :_pokerbot_single_lengths
	private :_pokerbot_single_lengths, :_pokerbot_single_lengths=
end
self._pokerbot_single_lengths = [
	0, 1, 1, 1, 1, 1, 7, 1, 
	1, 1, 1, 1, 2, 1, 1, 1, 
	1, 2, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 1, 0, 1, 1, 
	1, 1, 5, 1, 4, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 4, 1, 1, 1, 4, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	5, 1, 4, 6, 6, 1, 4, 6, 
	6, 1, 4, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 5, 1, 4, 
	6, 6, 1, 4, 3, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 2, 9, 
	1, 1, 1, 4, 1, 1, 1, 1, 
	1, 1, 2, 1, 6, 2, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 9, 1, 1, 1, 4, 10, 
	1, 1, 1, 4, 1, 1, 1, 1, 
	2, 1, 6, 2, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 2, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 6, 2, 1, 1, 1, 
	2, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 7, 1, 1, 
	1, 1, 1, 2, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 7, 7, 6, 
	6, 1, 4, 4, 6, 6, 1, 4, 
	4, 1, 1, 6, 1, 0, 6, 1, 
	0, 6, 1, 0, 6, 1, 0, 6, 
	1, 0, 5, 4, 2, 4, 3, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 5, 4, 6, 5, 4, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 5, 4, 6, 5, 4, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 5, 4, 6, 5, 4, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 5, 4, 6, 5, 4, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 8, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 8, 0, 0, 1, 0, 
	2, 0, 1, 1, 1, 1, 1, 1, 
	1, 2, 0, 1, 1, 1, 0, 2, 
	0, 1, 1, 1, 3, 3, 2, 1, 
	2, 1, 3, 1, 2, 2, 2, 4, 
	2, 4, 0, 1, 0, 1, 0, 3, 
	1, 0, 0, 1, 1, 1, 0, 1, 
	0, 1, 1, 0, 1, 0, 1, 0, 
	2, 1, 0, 1, 4, 1, 1, 2, 
	5, 1, 7, 1, 4, 2, 2, 2, 
	2, 1, 4, 4, 1, 0, 0, 0, 
	4, 4, 1, 1, 1, 1, 4, 4, 
	1, 1, 1, 1, 4, 4, 1, 1, 
	1, 1, 4, 4, 1, 1, 1, 1, 
	1, 1, 1, 2, 1, 1, 0, 1, 
	0, 1, 1, 0, 1, 0
]

class << self
	attr_accessor :_pokerbot_range_lengths
	private :_pokerbot_range_lengths, :_pokerbot_range_lengths=
end
self._pokerbot_range_lengths = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 0, 1, 2, 0, 0, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 0, 0, 1, 2, 0, 0, 
	0, 0, 1, 1, 1, 1, 0, 0, 
	0, 1, 3, 0, 2, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 0, 0, 0, 1, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	3, 0, 2, 4, 4, 0, 2, 4, 
	4, 0, 2, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 3, 0, 2, 
	4, 4, 0, 2, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 1, 1, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 1, 2, 0, 
	1, 0, 0, 0, 0, 0, 0, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	2, 1, 0, 0, 0, 1, 1, 1, 
	0, 0, 1, 1, 0, 0, 0, 0, 
	0, 1, 1, 1, 2, 0, 1, 0, 
	0, 0, 0, 0, 0, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	2, 0, 1, 1, 1, 2, 0, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 2, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 0, 0, 1, 2, 
	0, 0, 0, 0, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 4, 4, 4, 
	4, 0, 2, 2, 4, 4, 0, 2, 
	2, 0, 0, 2, 1, 1, 2, 1, 
	1, 2, 1, 1, 2, 1, 1, 2, 
	1, 1, 1, 1, 2, 0, 0, 1, 
	2, 0, 0, 1, 0, 1, 2, 0, 
	1, 2, 1, 1, 2, 1, 1, 1, 
	2, 0, 0, 1, 0, 1, 2, 0, 
	1, 2, 1, 1, 2, 1, 1, 1, 
	2, 0, 0, 1, 0, 1, 2, 0, 
	1, 2, 1, 1, 2, 1, 1, 1, 
	2, 0, 0, 1, 0, 1, 2, 0, 
	1, 2, 1, 1, 2, 1, 1, 1, 
	2, 0, 0, 1, 0, 1, 2, 0, 
	1, 2, 0, 2, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 1, 1, 0, 
	0, 0, 0, 0, 0, 1, 1, 1, 
	1, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 0, 0, 1, 1, 1, 
	1, 2, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	1, 2, 1, 1, 3, 1, 1, 2, 
	4, 1, 4, 1, 1, 2, 2, 2, 
	2, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 2, 2, 2, 1, 1, 
	1, 2, 2, 2, 1, 1, 1, 2, 
	2, 2, 1, 1, 1, 2, 2, 2, 
	1, 1, 1, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0
]

class << self
	attr_accessor :_pokerbot_index_offsets
	private :_pokerbot_index_offsets, :_pokerbot_index_offsets=
end
self._pokerbot_index_offsets = [
	0, 0, 2, 4, 6, 8, 10, 18, 
	20, 22, 24, 27, 29, 33, 37, 39, 
	41, 44, 47, 49, 51, 53, 55, 57, 
	59, 61, 64, 66, 68, 71, 75, 77, 
	79, 81, 83, 86, 88, 91, 93, 95, 
	97, 99, 102, 111, 113, 120, 122, 124, 
	126, 128, 130, 132, 134, 136, 138, 140, 
	142, 144, 146, 149, 154, 156, 158, 161, 
	167, 169, 171, 173, 175, 177, 179, 181, 
	183, 185, 187, 189, 191, 193, 195, 197, 
	200, 209, 211, 218, 229, 240, 242, 249, 
	260, 271, 273, 280, 282, 284, 286, 288, 
	290, 292, 294, 296, 298, 301, 310, 312, 
	319, 330, 341, 343, 350, 354, 356, 358, 
	360, 362, 364, 366, 368, 370, 372, 376, 
	386, 388, 390, 393, 399, 401, 403, 405, 
	407, 409, 411, 414, 417, 425, 429, 433, 
	435, 438, 440, 442, 444, 446, 448, 450, 
	454, 456, 458, 460, 462, 464, 466, 468, 
	470, 474, 477, 487, 489, 491, 494, 500, 
	512, 514, 516, 519, 525, 527, 529, 531, 
	533, 536, 539, 547, 551, 555, 557, 560, 
	562, 564, 566, 568, 570, 572, 576, 578, 
	580, 582, 584, 586, 588, 590, 592, 594, 
	596, 600, 603, 606, 614, 618, 622, 624, 
	627, 631, 633, 635, 637, 639, 641, 643, 
	645, 647, 651, 653, 655, 657, 659, 661, 
	663, 665, 667, 669, 672, 674, 676, 679, 
	683, 685, 687, 689, 691, 694, 702, 704, 
	706, 708, 710, 712, 715, 717, 719, 721, 
	723, 725, 727, 729, 731, 733, 735, 737, 
	739, 741, 743, 745, 747, 749, 751, 753, 
	755, 757, 759, 761, 763, 765, 777, 789, 
	800, 811, 813, 820, 827, 838, 849, 851, 
	858, 865, 867, 869, 878, 881, 883, 892, 
	895, 897, 906, 909, 911, 920, 923, 925, 
	934, 937, 939, 946, 952, 957, 962, 966, 
	970, 974, 976, 978, 981, 983, 986, 990, 
	992, 995, 999, 1006, 1012, 1021, 1028, 1034, 
	1038, 1042, 1044, 1046, 1049, 1051, 1054, 1058, 
	1060, 1063, 1067, 1074, 1080, 1089, 1096, 1102, 
	1106, 1110, 1112, 1114, 1117, 1119, 1122, 1126, 
	1128, 1131, 1135, 1142, 1148, 1157, 1164, 1170, 
	1174, 1178, 1180, 1182, 1185, 1187, 1190, 1194, 
	1196, 1199, 1203, 1210, 1216, 1225, 1232, 1238, 
	1242, 1246, 1248, 1250, 1253, 1255, 1258, 1262, 
	1264, 1267, 1271, 1273, 1284, 1286, 1288, 1290, 
	1292, 1294, 1296, 1298, 1300, 1302, 1304, 1306, 
	1308, 1310, 1312, 1314, 1316, 1318, 1320, 1322, 
	1324, 1326, 1328, 1330, 1339, 1341, 1343, 1346, 
	1347, 1350, 1351, 1353, 1355, 1357, 1360, 1363, 
	1366, 1369, 1372, 1373, 1375, 1377, 1379, 1381, 
	1384, 1385, 1387, 1389, 1391, 1395, 1400, 1404, 
	1407, 1411, 1415, 1420, 1423, 1427, 1431, 1435, 
	1441, 1445, 1451, 1453, 1455, 1456, 1458, 1459, 
	1463, 1465, 1466, 1467, 1469, 1471, 1473, 1474, 
	1476, 1477, 1479, 1481, 1482, 1484, 1485, 1487, 
	1488, 1492, 1496, 1498, 1501, 1509, 1512, 1515, 
	1520, 1530, 1533, 1545, 1548, 1554, 1559, 1564, 
	1569, 1574, 1577, 1583, 1589, 1592, 1594, 1596, 
	1598, 1604, 1610, 1613, 1617, 1621, 1625, 1631, 
	1637, 1640, 1644, 1648, 1652, 1658, 1664, 1667, 
	1671, 1675, 1679, 1685, 1691, 1694, 1698, 1702, 
	1706, 1709, 1712, 1715, 1719, 1721, 1723, 1724, 
	1726, 1727, 1729, 1731, 1732, 1734
]

class << self
	attr_accessor :_pokerbot_indicies
	private :_pokerbot_indicies, :_pokerbot_indicies=
end
self._pokerbot_indicies = [
	0, 1, 2, 1, 3, 1, 4, 1, 
	5, 1, 6, 7, 8, 9, 10, 11, 
	12, 1, 13, 1, 14, 1, 15, 1, 
	16, 16, 1, 17, 1, 18, 19, 18, 
	1, 18, 18, 20, 1, 21, 1, 22, 
	1, 18, 18, 1, 23, 24, 1, 25, 
	1, 26, 1, 27, 1, 28, 1, 29, 
	1, 30, 1, 31, 1, 32, 32, 1, 
	33, 1, 34, 1, 35, 35, 1, 35, 
	35, 36, 1, 37, 1, 38, 1, 39, 
	1, 40, 1, 41, 41, 1, 42, 1, 
	43, 42, 1, 45, 44, 46, 1, 47, 
	1, 48, 1, 49, 49, 1, 50, 51, 
	51, 51, 51, 51, 51, 51, 1, 51, 
	1, 52, 52, 52, 52, 52, 52, 1, 
	53, 1, 54, 1, 55, 1, 56, 1, 
	57, 1, 58, 1, 59, 1, 60, 1, 
	61, 1, 62, 1, 63, 1, 64, 1, 
	65, 1, 66, 66, 1, 67, 68, 69, 
	70, 1, 71, 1, 72, 1, 73, 73, 
	1, 73, 68, 69, 70, 73, 1, 75, 
	74, 76, 74, 77, 74, 76, 74, 78, 
	74, 76, 74, 79, 1, 80, 1, 81, 
	1, 82, 1, 83, 1, 84, 1, 85, 
	1, 86, 1, 87, 1, 88, 88, 1, 
	89, 90, 90, 90, 90, 90, 90, 90, 
	1, 90, 1, 91, 91, 91, 91, 91, 
	91, 1, 92, 93, 94, 94, 94, 94, 
	92, 94, 94, 94, 1, 95, 96, 97, 
	97, 97, 97, 95, 97, 97, 97, 1, 
	97, 1, 98, 98, 98, 98, 98, 98, 
	1, 99, 100, 101, 101, 101, 101, 99, 
	101, 101, 101, 1, 102, 103, 104, 104, 
	104, 104, 102, 104, 104, 104, 1, 104, 
	1, 105, 105, 105, 105, 105, 105, 1, 
	106, 1, 107, 1, 108, 1, 109, 1, 
	110, 1, 111, 1, 112, 1, 113, 1, 
	114, 1, 115, 115, 1, 116, 117, 117, 
	117, 117, 117, 117, 117, 1, 117, 1, 
	118, 118, 118, 118, 118, 118, 1, 119, 
	120, 121, 121, 121, 121, 119, 121, 121, 
	121, 1, 122, 123, 124, 124, 124, 124, 
	122, 124, 124, 124, 1, 124, 1, 125, 
	125, 125, 125, 125, 125, 1, 126, 127, 
	128, 1, 129, 1, 130, 1, 131, 1, 
	132, 1, 133, 1, 134, 1, 135, 1, 
	136, 1, 137, 1, 138, 139, 138, 1, 
	140, 141, 142, 143, 144, 144, 145, 146, 
	147, 1, 148, 1, 149, 1, 150, 150, 
	1, 150, 151, 143, 145, 150, 1, 153, 
	152, 154, 152, 155, 152, 154, 152, 156, 
	152, 154, 152, 157, 158, 1, 159, 159, 
	44, 159, 160, 161, 162, 163, 164, 159, 
	44, 165, 166, 165, 44, 165, 165, 167, 
	44, 168, 44, 165, 165, 44, 169, 152, 
	170, 152, 171, 152, 170, 152, 172, 152, 
	170, 152, 165, 173, 165, 44, 174, 44, 
	175, 44, 168, 44, 157, 1, 157, 1, 
	157, 1, 176, 1, 177, 1, 159, 159, 
	157, 1, 178, 178, 1, 179, 180, 181, 
	182, 183, 183, 184, 185, 186, 1, 187, 
	1, 188, 1, 189, 189, 1, 189, 190, 
	182, 184, 189, 1, 192, 193, 194, 195, 
	182, 196, 196, 184, 197, 198, 192, 191, 
	199, 191, 200, 191, 201, 201, 191, 201, 
	190, 182, 184, 201, 191, 202, 191, 203, 
	191, 204, 191, 203, 191, 205, 206, 191, 
	207, 207, 191, 207, 208, 209, 210, 211, 
	212, 207, 191, 213, 214, 213, 191, 213, 
	213, 215, 191, 216, 191, 213, 213, 191, 
	217, 191, 218, 191, 219, 191, 218, 191, 
	220, 191, 218, 191, 213, 221, 213, 191, 
	222, 191, 223, 191, 216, 191, 205, 191, 
	224, 191, 203, 191, 205, 191, 205, 191, 
	225, 191, 226, 191, 207, 207, 205, 191, 
	227, 228, 1, 229, 229, 44, 229, 230, 
	209, 210, 211, 231, 229, 44, 232, 233, 
	232, 44, 232, 232, 215, 44, 234, 44, 
	232, 232, 44, 232, 235, 232, 44, 236, 
	44, 237, 44, 234, 44, 227, 1, 227, 
	1, 227, 1, 238, 1, 239, 1, 229, 
	229, 227, 1, 240, 1, 241, 1, 242, 
	1, 243, 1, 244, 1, 245, 1, 246, 
	1, 247, 1, 248, 1, 249, 249, 1, 
	250, 1, 251, 1, 252, 252, 1, 252, 
	252, 253, 1, 254, 1, 255, 1, 256, 
	1, 257, 1, 258, 258, 1, 259, 260, 
	261, 262, 263, 264, 265, 1, 267, 266, 
	268, 266, 269, 266, 270, 266, 271, 266, 
	272, 273, 266, 274, 266, 275, 266, 276, 
	266, 277, 266, 278, 266, 279, 266, 280, 
	266, 281, 266, 282, 266, 283, 266, 284, 
	266, 285, 266, 286, 266, 287, 266, 288, 
	266, 289, 266, 290, 1, 291, 266, 292, 
	266, 293, 266, 294, 266, 295, 266, 296, 
	266, 298, 297, 299, 297, 300, 301, 302, 
	304, 304, 304, 304, 300, 303, 304, 304, 
	297, 305, 306, 307, 309, 309, 309, 309, 
	305, 308, 309, 309, 297, 310, 311, 312, 
	312, 312, 312, 310, 312, 312, 312, 297, 
	313, 314, 315, 315, 315, 315, 313, 315, 
	315, 315, 297, 315, 297, 316, 316, 316, 
	316, 316, 316, 297, 317, 317, 317, 317, 
	317, 317, 297, 318, 319, 320, 320, 320, 
	320, 318, 320, 320, 320, 297, 321, 322, 
	323, 323, 323, 323, 321, 323, 323, 323, 
	297, 323, 297, 324, 324, 324, 324, 324, 
	324, 297, 325, 325, 325, 325, 325, 325, 
	297, 326, 297, 327, 297, 328, 329, 330, 
	332, 333, 334, 328, 331, 297, 335, 329, 
	297, 336, 297, 337, 338, 339, 341, 342, 
	343, 337, 340, 297, 344, 338, 297, 345, 
	297, 346, 347, 348, 350, 351, 352, 346, 
	349, 297, 353, 347, 297, 354, 297, 355, 
	356, 357, 359, 360, 361, 355, 358, 297, 
	362, 356, 297, 363, 297, 364, 365, 366, 
	368, 369, 370, 364, 367, 297, 371, 365, 
	297, 372, 297, 371, 367, 373, 373, 373, 
	365, 297, 371, 373, 373, 373, 365, 297, 
	374, 375, 374, 376, 297, 376, 373, 373, 
	373, 297, 373, 373, 373, 297, 377, 378, 
	377, 297, 377, 377, 379, 297, 380, 297, 
	381, 297, 377, 377, 297, 382, 297, 383, 
	383, 297, 383, 383, 384, 297, 385, 297, 
	386, 386, 297, 386, 386, 387, 297, 362, 
	358, 388, 388, 388, 356, 297, 362, 388, 
	388, 388, 356, 297, 389, 365, 390, 368, 
	369, 370, 389, 391, 297, 371, 391, 388, 
	388, 388, 365, 297, 371, 388, 388, 388, 
	365, 297, 392, 393, 392, 297, 392, 392, 
	394, 297, 395, 297, 396, 297, 392, 392, 
	297, 397, 297, 398, 398, 297, 398, 398, 
	399, 297, 400, 297, 401, 401, 297, 401, 
	401, 402, 297, 353, 349, 403, 403, 403, 
	347, 297, 353, 403, 403, 403, 347, 297, 
	404, 356, 405, 359, 360, 361, 404, 406, 
	297, 362, 406, 403, 403, 403, 356, 297, 
	362, 403, 403, 403, 356, 297, 407, 408, 
	407, 297, 407, 407, 409, 297, 410, 297, 
	411, 297, 407, 407, 297, 412, 297, 413, 
	413, 297, 413, 413, 414, 297, 415, 297, 
	416, 416, 297, 416, 416, 417, 297, 344, 
	340, 418, 418, 418, 338, 297, 344, 418, 
	418, 418, 338, 297, 419, 347, 420, 350, 
	351, 352, 419, 421, 297, 353, 421, 418, 
	418, 418, 347, 297, 353, 418, 418, 418, 
	347, 297, 422, 423, 422, 297, 422, 422, 
	424, 297, 425, 297, 426, 297, 422, 422, 
	297, 427, 297, 428, 428, 297, 428, 428, 
	429, 297, 430, 297, 431, 431, 297, 431, 
	431, 432, 297, 335, 331, 433, 433, 433, 
	329, 297, 335, 433, 433, 433, 329, 297, 
	434, 338, 435, 341, 342, 343, 434, 436, 
	297, 344, 436, 433, 433, 433, 338, 297, 
	344, 433, 433, 433, 338, 297, 437, 438, 
	437, 297, 437, 437, 439, 297, 440, 297, 
	441, 297, 437, 437, 297, 442, 297, 443, 
	443, 297, 443, 443, 444, 297, 445, 297, 
	446, 446, 297, 446, 446, 447, 297, 448, 
	297, 328, 329, 330, 332, 333, 449, 334, 
	450, 328, 331, 297, 451, 297, 452, 297, 
	453, 297, 454, 297, 455, 297, 456, 297, 
	457, 297, 458, 297, 459, 297, 460, 297, 
	461, 297, 462, 297, 463, 297, 464, 297, 
	465, 297, 466, 297, 467, 1, 468, 297, 
	469, 297, 470, 297, 471, 297, 472, 297, 
	473, 297, 474, 475, 476, 477, 478, 479, 
	480, 481, 1, 483, 482, 485, 484, 43, 
	45, 486, 487, 489, 490, 488, 488, 491, 
	488, 492, 488, 491, 488, 494, 494, 493, 
	496, 496, 495, 498, 498, 497, 500, 500, 
	499, 502, 503, 501, 501, 504, 501, 505, 
	501, 504, 501, 167, 506, 507, 508, 506, 
	506, 509, 506, 510, 506, 509, 506, 502, 
	503, 157, 501, 512, 513, 514, 512, 511, 
	512, 515, 512, 511, 512, 512, 511, 512, 
	516, 512, 511, 518, 518, 215, 517, 518, 
	519, 520, 518, 517, 518, 518, 517, 518, 
	521, 518, 517, 518, 522, 518, 517, 518, 
	521, 518, 517, 512, 513, 514, 205, 512, 
	511, 512, 516, 512, 511, 512, 513, 514, 
	227, 512, 511, 524, 523, 526, 525, 525, 
	528, 527, 527, 530, 531, 282, 529, 532, 
	529, 529, 533, 282, 529, 535, 534, 536, 
	534, 534, 538, 537, 537, 540, 539, 541, 
	539, 539, 543, 542, 542, 545, 544, 544, 
	547, 548, 547, 546, 550, 550, 301, 549, 
	306, 549, 308, 306, 549, 317, 317, 317, 
	317, 306, 317, 317, 549, 552, 552, 551, 
	554, 554, 553, 550, 303, 550, 301, 549, 
	550, 325, 325, 325, 325, 550, 301, 325, 
	325, 549, 555, 555, 551, 556, 306, 307, 
	309, 309, 309, 309, 556, 308, 309, 309, 
	553, 547, 547, 546, 558, 559, 560, 459, 
	558, 557, 562, 335, 562, 336, 561, 563, 
	344, 563, 345, 561, 564, 353, 564, 354, 
	561, 565, 362, 565, 363, 561, 371, 372, 
	561, 567, 568, 568, 568, 567, 566, 567, 
	569, 569, 569, 567, 566, 567, 567, 566, 
	571, 570, 573, 572, 575, 574, 576, 577, 
	577, 577, 576, 566, 576, 578, 578, 578, 
	576, 566, 576, 576, 566, 579, 579, 580, 
	570, 581, 581, 582, 572, 583, 583, 584, 
	574, 585, 586, 586, 586, 585, 566, 585, 
	587, 587, 587, 585, 566, 585, 585, 566, 
	588, 588, 589, 570, 590, 590, 591, 572, 
	592, 592, 593, 574, 594, 595, 595, 595, 
	594, 566, 594, 596, 596, 596, 594, 566, 
	594, 594, 566, 597, 597, 598, 570, 599, 
	599, 600, 572, 601, 601, 602, 574, 603, 
	604, 604, 604, 603, 566, 603, 605, 605, 
	605, 603, 566, 603, 603, 566, 606, 606, 
	607, 570, 608, 608, 609, 572, 610, 610, 
	611, 574, 612, 558, 557, 558, 558, 557, 
	614, 614, 613, 558, 459, 558, 557, 616, 
	615, 617, 615, 615, 619, 618, 618, 621, 
	620, 622, 620, 620, 624, 623, 623, 0
]

class << self
	attr_accessor :_pokerbot_trans_targs
	private :_pokerbot_trans_targs, :_pokerbot_trans_targs=
end
self._pokerbot_trans_targs = [
	2, 0, 3, 4, 5, 6, 7, 17, 
	38, 45, 70, 91, 108, 8, 9, 10, 
	11, 12, 13, 14, 396, 15, 16, 18, 
	30, 19, 20, 21, 22, 23, 24, 25, 
	26, 27, 28, 29, 397, 31, 32, 33, 
	34, 35, 36, 37, 395, 398, 39, 40, 
	41, 42, 43, 44, 399, 46, 47, 48, 
	49, 50, 51, 52, 53, 54, 55, 56, 
	57, 58, 59, 60, 400, 403, 404, 61, 
	62, 63, 395, 65, 401, 67, 69, 71, 
	72, 73, 74, 75, 76, 77, 78, 79, 
	80, 81, 82, 83, 84, 85, 86, 84, 
	85, 86, 87, 88, 89, 90, 88, 89, 
	90, 405, 92, 93, 94, 95, 96, 97, 
	98, 99, 100, 101, 102, 103, 104, 105, 
	106, 107, 105, 106, 107, 407, 109, 210, 
	224, 110, 111, 112, 113, 114, 115, 116, 
	117, 118, 119, 153, 120, 130, 420, 412, 
	148, 413, 149, 150, 121, 122, 123, 409, 
	395, 125, 410, 127, 129, 131, 147, 132, 
	133, 415, 418, 419, 143, 134, 135, 414, 
	136, 138, 416, 140, 142, 144, 145, 146, 
	151, 152, 154, 155, 193, 433, 422, 205, 
	424, 206, 207, 156, 157, 158, 421, 395, 
	159, 160, 168, 431, 188, 189, 190, 161, 
	162, 163, 165, 423, 167, 169, 185, 170, 
	171, 426, 429, 430, 181, 172, 173, 425, 
	174, 176, 427, 178, 180, 182, 183, 184, 
	187, 191, 192, 194, 204, 195, 196, 200, 
	197, 198, 199, 201, 202, 203, 208, 209, 
	211, 212, 213, 214, 215, 216, 217, 218, 
	219, 220, 221, 222, 223, 434, 225, 226, 
	227, 228, 229, 435, 437, 439, 444, 447, 
	252, 452, 395, 231, 436, 233, 438, 440, 
	236, 239, 237, 238, 441, 240, 241, 242, 
	243, 244, 442, 445, 247, 248, 446, 250, 
	251, 448, 449, 450, 255, 256, 451, 258, 
	453, 395, 260, 455, 261, 457, 463, 464, 
	272, 262, 458, 459, 460, 267, 264, 265, 
	266, 264, 265, 266, 461, 263, 269, 270, 
	271, 269, 270, 271, 465, 268, 274, 467, 
	275, 276, 354, 355, 359, 364, 367, 277, 
	469, 278, 279, 338, 339, 343, 348, 351, 
	280, 470, 281, 282, 322, 323, 327, 332, 
	335, 283, 471, 284, 285, 306, 307, 311, 
	316, 319, 286, 472, 287, 288, 290, 291, 
	295, 300, 303, 289, 473, 474, 292, 293, 
	294, 296, 297, 477, 298, 299, 301, 302, 
	478, 304, 305, 479, 480, 308, 309, 310, 
	312, 313, 483, 314, 315, 317, 318, 484, 
	320, 321, 485, 486, 324, 325, 326, 328, 
	329, 489, 330, 331, 333, 334, 490, 336, 
	337, 491, 492, 340, 341, 342, 344, 345, 
	495, 346, 347, 349, 350, 496, 352, 353, 
	497, 498, 356, 357, 358, 360, 361, 501, 
	362, 363, 365, 366, 502, 368, 369, 503, 
	504, 372, 375, 373, 374, 505, 376, 377, 
	378, 379, 380, 506, 509, 383, 384, 510, 
	386, 387, 512, 513, 514, 391, 392, 515, 
	394, 517, 1, 454, 456, 468, 508, 511, 
	388, 516, 395, 396, 395, 397, 395, 395, 
	395, 64, 402, 66, 68, 395, 406, 395, 
	406, 395, 408, 395, 408, 395, 124, 411, 
	126, 128, 395, 137, 417, 139, 141, 395, 
	159, 186, 432, 164, 166, 395, 159, 175, 
	428, 177, 179, 395, 434, 395, 230, 395, 
	232, 395, 234, 443, 235, 395, 395, 245, 
	246, 395, 249, 395, 253, 254, 395, 257, 
	395, 259, 395, 261, 273, 395, 262, 395, 
	462, 395, 462, 466, 466, 395, 275, 370, 
	507, 395, 278, 281, 284, 287, 395, 292, 
	475, 476, 395, 477, 395, 478, 395, 479, 
	308, 481, 482, 287, 483, 287, 484, 287, 
	485, 324, 487, 488, 284, 489, 284, 490, 
	284, 491, 340, 493, 494, 281, 495, 281, 
	496, 281, 497, 356, 499, 500, 278, 501, 
	278, 502, 278, 503, 371, 395, 275, 395, 
	381, 382, 395, 385, 395, 389, 390, 395, 
	393
]

class << self
	attr_accessor :_pokerbot_trans_actions
	private :_pokerbot_trans_actions, :_pokerbot_trans_actions=
end
self._pokerbot_trans_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	49, 0, 0, 0, 23, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	45, 0, 0, 0, 19, 0, 0, 0, 
	0, 43, 0, 0, 67, 195, 0, 0, 
	0, 31, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 39, 0, 55, 55, 55, 0, 
	0, 0, 61, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	35, 0, 0, 0, 1, 1, 1, 0, 
	0, 0, 0, 1, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 33, 0, 0, 0, 1, 
	1, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 37, 0, 0, 0, 189, 55, 
	0, 55, 0, 0, 0, 0, 0, 55, 
	59, 0, 0, 0, 0, 0, 0, 0, 
	0, 55, 55, 55, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 41, 0, 0, 192, 55, 0, 
	55, 0, 0, 0, 0, 0, 55, 63, 
	0, 0, 0, 55, 0, 0, 0, 0, 
	0, 0, 0, 55, 0, 0, 0, 0, 
	0, 55, 55, 55, 0, 0, 0, 55, 
	0, 0, 55, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 47, 0, 0, 0, 21, 0, 0, 
	0, 0, 51, 55, 55, 55, 55, 55, 
	0, 55, 65, 0, 0, 0, 0, 55, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 55, 0, 0, 0, 0, 
	0, 0, 55, 55, 0, 0, 0, 0, 
	0, 57, 0, 0, 0, 55, 55, 55, 
	0, 0, 0, 0, 55, 0, 1, 1, 
	1, 0, 0, 0, 0, 0, 1, 1, 
	1, 0, 0, 0, 0, 0, 0, 55, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	55, 0, 0, 0, 0, 0, 0, 0, 
	0, 55, 0, 0, 0, 0, 0, 0, 
	0, 0, 55, 0, 0, 0, 0, 0, 
	0, 0, 0, 55, 0, 0, 0, 0, 
	0, 0, 0, 0, 55, 55, 0, 0, 
	0, 0, 0, 23, 0, 0, 0, 0, 
	19, 0, 0, 21, 55, 0, 0, 0, 
	0, 0, 186, 0, 0, 0, 0, 180, 
	0, 0, 183, 55, 0, 0, 0, 0, 
	0, 186, 0, 0, 0, 0, 180, 0, 
	0, 183, 55, 0, 0, 0, 0, 0, 
	186, 0, 0, 0, 0, 180, 0, 0, 
	183, 55, 0, 0, 0, 0, 0, 186, 
	0, 0, 0, 0, 180, 0, 0, 183, 
	55, 0, 0, 0, 0, 55, 0, 0, 
	0, 0, 0, 55, 55, 0, 0, 0, 
	0, 0, 0, 55, 55, 0, 0, 0, 
	0, 0, 0, 55, 55, 55, 55, 55, 
	0, 55, 102, 0, 90, 0, 84, 69, 
	114, 0, 55, 0, 0, 198, 1, 72, 
	0, 206, 1, 78, 0, 111, 0, 55, 
	0, 0, 105, 0, 55, 0, 0, 117, 
	13, 0, 55, 0, 0, 108, 11, 0, 
	55, 0, 0, 96, 0, 153, 0, 141, 
	0, 129, 0, 0, 0, 135, 147, 0, 
	0, 165, 0, 171, 0, 0, 159, 0, 
	150, 0, 138, 29, 0, 123, 17, 202, 
	1, 75, 0, 210, 177, 126, 25, 0, 
	55, 81, 3, 3, 3, 3, 120, 15, 
	55, 55, 99, 0, 87, 0, 93, 0, 
	15, 55, 55, 9, 55, 5, 55, 7, 
	55, 15, 55, 55, 9, 55, 5, 55, 
	7, 55, 15, 55, 55, 9, 55, 5, 
	55, 7, 55, 15, 55, 55, 9, 55, 
	5, 55, 7, 55, 25, 132, 27, 144, 
	0, 0, 162, 0, 168, 0, 0, 156, 
	0
]

class << self
	attr_accessor :_pokerbot_to_state_actions
	private :_pokerbot_to_state_actions, :_pokerbot_to_state_actions=
end
self._pokerbot_to_state_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 174, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0
]

class << self
	attr_accessor :_pokerbot_from_state_actions
	private :_pokerbot_from_state_actions, :_pokerbot_from_state_actions=
end
self._pokerbot_from_state_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 53, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0
]

class << self
	attr_accessor :_pokerbot_eof_trans
	private :_pokerbot_eof_trans, :_pokerbot_eof_trans=
end
self._pokerbot_eof_trans = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 45, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	75, 75, 75, 75, 75, 75, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 153, 153, 153, 153, 
	153, 153, 0, 45, 45, 45, 45, 45, 
	45, 153, 153, 153, 153, 153, 153, 45, 
	45, 45, 45, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 192, 
	192, 192, 192, 192, 192, 192, 192, 192, 
	192, 192, 192, 192, 192, 192, 192, 192, 
	192, 192, 192, 192, 192, 192, 192, 192, 
	192, 192, 192, 192, 192, 192, 192, 192, 
	192, 0, 45, 45, 45, 45, 45, 45, 
	45, 45, 45, 45, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 267, 267, 
	267, 267, 267, 267, 267, 267, 267, 267, 
	267, 267, 267, 267, 267, 267, 267, 267, 
	267, 267, 267, 267, 0, 267, 267, 267, 
	267, 267, 267, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 298, 298, 298, 298, 
	298, 298, 298, 298, 0, 298, 298, 298, 
	298, 298, 298, 0, 483, 485, 487, 488, 
	489, 489, 489, 489, 489, 494, 496, 498, 
	500, 502, 502, 502, 502, 502, 507, 507, 
	507, 507, 507, 507, 502, 512, 512, 512, 
	512, 518, 518, 518, 518, 518, 518, 512, 
	512, 512, 524, 526, 526, 528, 528, 530, 
	530, 530, 534, 530, 535, 535, 535, 538, 
	538, 540, 540, 540, 543, 543, 545, 545, 
	547, 550, 550, 550, 550, 552, 554, 550, 
	550, 552, 554, 547, 558, 562, 562, 562, 
	562, 562, 567, 567, 567, 571, 573, 575, 
	567, 567, 567, 571, 573, 575, 567, 567, 
	567, 571, 573, 575, 567, 567, 567, 571, 
	573, 575, 567, 567, 567, 571, 573, 575, 
	558, 558, 614, 558, 616, 616, 616, 619, 
	619, 621, 621, 621, 624, 624
]

class << self
	attr_accessor :pokerbot_start
end
self.pokerbot_start = 395;
class << self
	attr_accessor :pokerbot_first_final
end
self.pokerbot_first_final = 395;
class << self
	attr_accessor :pokerbot_error
end
self.pokerbot_error = 0;

class << self
	attr_accessor :pokerbot_en_main
end
self.pokerbot_en_main = 395;


# line 217 "lib/fb_pokerbot_parser/message_parser.rl"
    data = data.unpack("c*") if data.is_a?(String)
    eof  = data.length
    cp   = 0

    @status     = false   # true if status request
    @command    = ""
    @cards      = []
    @options    = {}
    @actions    = []
    @flop       = []
    @turn       = []
    @river      = []
    @hole_cards = []
    @players    = {}
    @hero       = {}
    @blinds     = {}
    @amount     = nil

    
# line 1236 "lib/fb_pokerbot_parser/message_parser.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = pokerbot_start
	ts = nil
	te = nil
	act = 0
end

# line 236 "lib/fb_pokerbot_parser/message_parser.rl"
    
# line 1248 "lib/fb_pokerbot_parser/message_parser.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_acts = _pokerbot_from_state_actions[cs]
	_nacts = _pokerbot_actions[_acts]
	_acts += 1
	while _nacts > 0
		_nacts -= 1
		_acts += 1
		case _pokerbot_actions[_acts - 1]
			when 35 then
# line 1 "NONE"
		begin
ts = p
		end
# line 1282 "lib/fb_pokerbot_parser/message_parser.rb"
		end # from state action switch
	end
	if _trigger_goto
		next
	end
	_keys = _pokerbot_key_offsets[cs]
	_trans = _pokerbot_index_offsets[cs]
	_klen = _pokerbot_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p].ord < _pokerbot_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p].ord > _pokerbot_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _pokerbot_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p].ord < _pokerbot_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p].ord > _pokerbot_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _pokerbot_indicies[_trans]
	end
	if _goto_level <= _eof_trans
	cs = _pokerbot_trans_targs[_trans]
	if _pokerbot_trans_actions[_trans] != 0
		_acts = _pokerbot_trans_actions[_trans]
		_nacts = _pokerbot_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _pokerbot_actions[_acts - 1]
when 0 then
# line 54 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    parseCard(data[cp..(p-1)].pack('c*').strip)
    cp = p
  		end
when 1 then
# line 58 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    @flop = @cards if @cards.count == 3
  		end
when 2 then
# line 61 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    @hole_cards = @cards if @cards.count == 2
  		end
when 3 then
# line 71 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    parseBlinds(data[cp..(p-1)].pack('c*').strip)
    cp = p
  		end
when 4 then
# line 76 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    parseBigBlind(data[cp..(p-1)].pack('c*').strip)
    cp = p
  		end
when 5 then
# line 81 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    value = data[cp..(p-1)].pack('c*').strip
    @blinds[:sb] = value.to_i
    cp = p
  		end
when 6 then
# line 87 "lib/fb_pokerbot_parser/message_parser.rl"
		begin


    value = data[cp..(p-1)].pack('c*').strip
    puts "parsing ante [#{value}]"
    @blinds[:ante] = value.to_i
    cp = p
  		end
when 7 then
# line 95 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    value = data[cp..p].pack('c*').strip
    seat, action, amount = value.split(' ')
    amount = amount.to_i unless amount.nil?
    @actions << {seat: seat, action: ACTIONS.fetch(action,nil), amount: amount}
    cp = p
  		end
when 8 then
# line 103 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    value = data[cp..p].pack('c*').strip
    action = value.split(" ").last
    @actions << {seat: 'all', action: ACTIONS.fetch(action,nil), amount: nil}
    cp = p
  		end
when 9 then
# line 110 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    puts "Parsing seat options"
    parse_seating_options(data[cp..p].pack('c*').strip)
    cp = p
  		end
when 10 then
# line 121 "lib/fb_pokerbot_parser/message_parser.rl"
		begin

    set_hero_stack(data[cp..p].pack('c*').strip)
    cp = p
  		end
when 11 then
# line 159 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 12 then
# line 160 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 13 then
# line 161 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 14 then
# line 168 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('nh', p, pe); cp = p 		end
when 15 then
# line 169 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('nt', p, pe); cp = p		end
when 16 then
# line 170 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('hero', p, pe); cp = p 		end
when 17 then
# line 171 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('pre', p, pe); cp = p 		end
when 18 then
# line 172 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('flop', p, pe); cp = p 		end
when 19 then
# line 173 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('turn', p, pe); cp = p 		end
when 20 then
# line 174 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('river', p, pe); cp = p 		end
when 21 then
# line 175 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 set_cmd('show', p, pe); cp = p 		end
when 22 then
# line 200 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 23 then
# line 201 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 24 then
# line 202 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 25 then
# line 203 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 26 then
# line 204 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 27 then
# line 205 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 28 then
# line 206 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 29 then
# line 207 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 30 then
# line 208 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 31 then
# line 209 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 32 then
# line 210 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
cp = p		end
when 36 then
# line 1 "NONE"
		begin
te = p+1
		end
when 37 then
# line 203 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
act = 5;		end
when 38 then
# line 205 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
act = 7;		end
when 39 then
# line 206 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
act = 8;		end
when 40 then
# line 199 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 41 then
# line 200 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 42 then
# line 201 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 43 then
# line 202 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 44 then
# line 203 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 45 then
# line 204 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 46 then
# line 205 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 47 then
# line 206 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 48 then
# line 207 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 49 then
# line 208 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 50 then
# line 209 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 51 then
# line 210 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
te = p
p = p - 1;		end
when 52 then
# line 199 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 begin p = ((te))-1; end
		end
when 53 then
# line 203 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 begin p = ((te))-1; end
		end
when 54 then
# line 204 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 begin p = ((te))-1; end
		end
when 55 then
# line 205 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 begin p = ((te))-1; end
		end
when 56 then
# line 210 "lib/fb_pokerbot_parser/message_parser.rl"
		begin
 begin p = ((te))-1; end
		end
when 57 then
# line 1 "NONE"
		begin
	case act
	when 0 then
	begin	begin
		cs = 0
		_trigger_goto = true
		_goto_level = _again
		break
	end
end
	else
	begin begin p = ((te))-1; end
end
end 
			end
# line 1641 "lib/fb_pokerbot_parser/message_parser.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	_acts = _pokerbot_to_state_actions[cs]
	_nacts = _pokerbot_actions[_acts]
	_acts += 1
	while _nacts > 0
		_nacts -= 1
		_acts += 1
		case _pokerbot_actions[_acts - 1]
when 33 then
# line 1 "NONE"
		begin
ts = nil;		end
when 34 then
# line 1 "NONE"
		begin
act = 0
		end
# line 1666 "lib/fb_pokerbot_parser/message_parser.rb"
		end # to state action switch
	end
	if _trigger_goto
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	if _pokerbot_eof_trans[cs] > 0
		_trans = _pokerbot_eof_trans[cs] - 1;
		_goto_level = _eof_trans
		next;
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 237 "lib/fb_pokerbot_parser/message_parser.rl"
  end

  def set_cmd(key, p, pe)
    @command = COMMANDS.fetch(key, nil)
    set_status if pe == p
    puts "Command is #{@command} status request? #{@status}"
  end

  def set_status
    @status = true
  end

  def parseCard(card)
    suit = card[-1..-1]
    val  = card[0..-2]
    @cards << "#{val.upcase}#{suit.downcase}"
  end

  def parseBlinds(data)
    p "parsing data: [#{data}]"
    sb, bb, *straddles = data.split("/")
    @blinds[:sb] = sb.to_i
    @blinds[:bb] = bb.to_i
    return if straddles.empty?
    if straddles.count == 1 && straddles.first.to_i < @blinds[:bb]
      @blinds[:ante] = straddles.first.to_i
    else
      @blinds[:straddle] = straddles.map(&:to_i)
    end
    @blinds
  end

  def parseBigBlind(data)
    p "Parsing big blind option #{data}"
    @blinds[:bb] = data.to_i
    @blinds[:sb] = (@blinds[:bb] / 2) if @blinds[:sb].nil?
  end

  def parse_seating_options(data)
    p "parsing seating data #{data}"
    num = data.to_i 
    options = data.gsub(num.to_s,'')
    options.split('').each do |val|
      next unless key = NEW_HAND_OPTIONS.fetch(val,nil)
      @options[key] = num
    end
  end
   
  def set_stack_size(data)
    p "set stack size for #{data}"
    seat, amount = data.split(" ")
    seat = seat.to_sym
    amount = amount.to_i
    @players[key] ||= {}
    @players[key][:stack] = amount
  end

  def set_hero_stack(data)
    @hero[:stack] = data.to_i
  end
end